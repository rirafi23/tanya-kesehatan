{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/types","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var t = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"@babel/types\"));\n\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n\n    return cache;\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n\n    var cache = _getRequireWildcardCache();\n\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj.default = obj;\n\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n\n    return newObj;\n  }\n\n  var referenceVisitor = {\n    ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n      if (path.isJSXIdentifier() && t.react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n        return;\n      }\n\n      if (path.node.name === \"this\") {\n        var scope = path.scope;\n\n        do {\n          if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n            break;\n          }\n        } while (scope = scope.parent);\n\n        if (scope) state.breakOnScopePaths.push(scope.path);\n      }\n\n      var binding = path.scope.getBinding(path.node.name);\n      if (!binding) return;\n\n      for (var _iterator = binding.constantViolations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var _violation = _ref;\n\n        if (_violation.scope !== binding.path.scope) {\n          state.mutableBinding = true;\n          path.stop();\n          return;\n        }\n      }\n\n      if (binding !== state.scope.getBinding(path.node.name)) return;\n      state.bindings[path.node.name] = binding;\n    }\n  };\n\n  var PathHoister = function () {\n    function PathHoister(path, scope) {\n      _classCallCheck(this, PathHoister);\n\n      this.breakOnScopePaths = [];\n      this.bindings = {};\n      this.mutableBinding = false;\n      this.scopes = [];\n      this.scope = scope;\n      this.path = path;\n      this.attachAfter = false;\n    }\n\n    _createClass(PathHoister, [{\n      key: \"isCompatibleScope\",\n      value: function isCompatibleScope(scope) {\n        for (var _i2 = 0, _Object$keys = Object.keys(this.bindings); _i2 < _Object$keys.length; _i2++) {\n          var key = _Object$keys[_i2];\n          var binding = this.bindings[key];\n\n          if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }, {\n      key: \"getCompatibleScopes\",\n      value: function getCompatibleScopes() {\n        var scope = this.path.scope;\n\n        do {\n          if (this.isCompatibleScope(scope)) {\n            this.scopes.push(scope);\n          } else {\n            break;\n          }\n\n          if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n            break;\n          }\n        } while (scope = scope.parent);\n      }\n    }, {\n      key: \"getAttachmentPath\",\n      value: function getAttachmentPath() {\n        var path = this._getAttachmentPath();\n\n        if (!path) return;\n        var targetScope = path.scope;\n\n        if (targetScope.path === path) {\n          targetScope = path.scope.parent;\n        }\n\n        if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n          for (var _i3 = 0, _Object$keys2 = Object.keys(this.bindings); _i3 < _Object$keys2.length; _i3++) {\n            var name = _Object$keys2[_i3];\n            if (!targetScope.hasOwnBinding(name)) continue;\n            var binding = this.bindings[name];\n\n            if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n              continue;\n            }\n\n            var bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n            if (bindingParentPath.key >= path.key) {\n              this.attachAfter = true;\n              path = binding.path;\n\n              for (var _iterator2 = binding.constantViolations, _isArray2 = Array.isArray(_iterator2), _i4 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n                var _ref2;\n\n                if (_isArray2) {\n                  if (_i4 >= _iterator2.length) break;\n                  _ref2 = _iterator2[_i4++];\n                } else {\n                  _i4 = _iterator2.next();\n                  if (_i4.done) break;\n                  _ref2 = _i4.value;\n                }\n\n                var _violationPath = _ref2;\n\n                if (this.getAttachmentParentForPath(_violationPath).key > path.key) {\n                  path = _violationPath;\n                }\n              }\n            }\n          }\n        }\n\n        return path;\n      }\n    }, {\n      key: \"_getAttachmentPath\",\n      value: function _getAttachmentPath() {\n        var scopes = this.scopes;\n        var scope = scopes.pop();\n        if (!scope) return;\n\n        if (scope.path.isFunction()) {\n          if (this.hasOwnParamBindings(scope)) {\n            if (this.scope === scope) return;\n            var bodies = scope.path.get(\"body\").get(\"body\");\n\n            for (var i = 0; i < bodies.length; i++) {\n              if (bodies[i].node._blockHoist) continue;\n              return bodies[i];\n            }\n          } else {\n            return this.getNextScopeAttachmentParent();\n          }\n        } else if (scope.path.isProgram()) {\n          return this.getNextScopeAttachmentParent();\n        }\n      }\n    }, {\n      key: \"getNextScopeAttachmentParent\",\n      value: function getNextScopeAttachmentParent() {\n        var scope = this.scopes.pop();\n        if (scope) return this.getAttachmentParentForPath(scope.path);\n      }\n    }, {\n      key: \"getAttachmentParentForPath\",\n      value: function getAttachmentParentForPath(path) {\n        do {\n          if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n            return path;\n          }\n        } while (path = path.parentPath);\n      }\n    }, {\n      key: \"hasOwnParamBindings\",\n      value: function hasOwnParamBindings(scope) {\n        for (var _i5 = 0, _Object$keys3 = Object.keys(this.bindings); _i5 < _Object$keys3.length; _i5++) {\n          var name = _Object$keys3[_i5];\n          if (!scope.hasOwnBinding(name)) continue;\n          var binding = this.bindings[name];\n          if (binding.kind === \"param\" && binding.constant) return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"run\",\n      value: function run() {\n        this.path.traverse(referenceVisitor, this);\n        if (this.mutableBinding) return;\n        this.getCompatibleScopes();\n        var attachTo = this.getAttachmentPath();\n        if (!attachTo) return;\n        if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n        var uid = attachTo.scope.generateUidIdentifier(\"ref\");\n        var declarator = t.variableDeclarator(uid, this.path.node);\n        var insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n\n        var _attachTo$insertFn = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : t.variableDeclaration(\"var\", [declarator])]),\n            _attachTo$insertFn2 = _slicedToArray(_attachTo$insertFn, 1),\n            attached = _attachTo$insertFn2[0];\n\n        var parent = this.path.parentPath;\n\n        if (parent.isJSXElement() && this.path.container === parent.node.children) {\n          uid = t.JSXExpressionContainer(uid);\n        }\n\n        this.path.replaceWith(t.cloneNode(uid));\n        return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n      }\n    }]);\n\n    return PathHoister;\n  }();\n\n  exports.default = PathHoister;\n});","map":[[2,0,1,0],[10,0,3,0,"Object"],[10,2,3,0,"Object"],[10,8,3,6],[10,9,3,7,"defineProperty"],[10,23,3,0],[10,24,3,22,"exports"],[10,31,3,0],[10,33,3,31],[10,45,3,0],[10,47,3,45],[11,0,4,2,"value"],[11,4,4,2,"value"],[11,9,4,7],[11,11,4,9],[12,0,3,45],[12,3,3,0],[13,0,6,0,"exports"],[13,2,6,0,"exports"],[13,9,6,7],[13,10,6,8,"default"],[13,17,6,0],[13,20,6,18],[13,25,6,23],[13,26,6,0],[15,0,8,0],[15,6,8,4,"t"],[15,7,8,5],[15,10,8,8,"_interopRequireWildcard"],[15,33,8,31],[15,34,8,32,"require"],[15,45,8,39],[15,80,8,31],[15,81,8,0],[17,0,10,0],[17,11,10,9,"_getRequireWildcardCache"],[17,35,10,0],[17,38,10,36],[18,0,10,38],[18,8,10,42],[18,15,10,49,"WeakMap"],[18,22,10,42],[18,27,10,61],[18,37,10,38],[18,39,10,73],[18,46,10,80],[18,50,10,73],[19,0,10,86],[19,8,10,90,"cache"],[19,13,10,95],[19,16,10,98],[19,20,10,102,"WeakMap"],[19,27,10,98],[19,29,10,86],[21,0,10,113,"_getRequireWildcardCache"],[21,4,10,113,"_getRequireWildcardCache"],[21,28,10,137],[21,31,10,140],[21,67,10,152],[22,0,10,154],[22,13,10,161,"cache"],[22,18,10,154],[23,0,10,169],[23,5,10,113],[25,0,10,171],[25,11,10,178,"cache"],[25,16,10,171],[26,0,10,186],[28,0,12,0],[28,11,12,9,"_interopRequireWildcard"],[28,34,12,0],[28,35,12,33,"obj"],[28,38,12,0],[28,40,12,38],[29,0,12,40],[29,8,12,44,"obj"],[29,11,12,47],[29,15,12,51,"obj"],[29,18,12,54],[29,19,12,55,"__esModule"],[29,29,12,40],[29,31,12,67],[30,0,12,69],[30,13,12,76,"obj"],[30,16,12,69],[31,0,12,82],[33,0,12,83],[33,8,12,87,"obj"],[33,11,12,90],[33,16,12,95],[33,20,12,87],[33,24,12,103],[33,31,12,110,"obj"],[33,34,12,103],[33,39,12,118],[33,47,12,103],[33,51,12,130],[33,58,12,137,"obj"],[33,61,12,130],[33,66,12,145],[33,76,12,83],[33,78,12,157],[34,0,12,159],[34,13,12,166],[35,0,12,168,"default"],[35,8,12,168,"default"],[35,15,12,175],[35,17,12,177,"obj"],[36,0,12,166],[36,7,12,159],[37,0,12,185],[39,0,12,186],[39,8,12,190,"cache"],[39,13,12,195],[39,16,12,198,"_getRequireWildcardCache"],[39,40,12,222],[39,42,12,186],[41,0,12,226],[41,8,12,230,"cache"],[41,13,12,235],[41,17,12,239,"cache"],[41,22,12,244],[41,23,12,245,"has"],[41,26,12,239],[41,27,12,249,"obj"],[41,30,12,239],[41,31,12,226],[41,33,12,255],[42,0,12,257],[42,13,12,264,"cache"],[42,18,12,269],[42,19,12,270,"get"],[42,22,12,264],[42,23,12,274,"obj"],[42,26,12,264],[42,27,12,257],[43,0,12,281],[45,0,12,282],[45,8,12,286,"newObj"],[45,14,12,292],[45,17,12,295],[45,19,12,282],[46,0,12,299],[46,8,12,303,"hasPropertyDescriptor"],[46,29,12,324],[46,32,12,327,"Object"],[46,38,12,333],[46,39,12,334,"defineProperty"],[46,53,12,327],[46,57,12,352,"Object"],[46,63,12,358],[46,64,12,359,"getOwnPropertyDescriptor"],[46,88,12,299],[48,0,12,385],[48,9,12,390],[48,13,12,394,"key"],[48,16,12,385],[48,20,12,401,"obj"],[48,23,12,385],[48,25,12,406],[49,0,12,408],[49,10,12,412,"Object"],[49,16,12,418],[49,17,12,419,"prototype"],[49,26,12,412],[49,27,12,429,"hasOwnProperty"],[49,41,12,412],[49,42,12,444,"call"],[49,46,12,412],[49,47,12,449,"obj"],[49,50,12,412],[49,52,12,454,"key"],[49,55,12,412],[49,56,12,408],[49,58,12,460],[50,0,12,462],[50,12,12,466,"desc"],[50,16,12,470],[50,19,12,473,"hasPropertyDescriptor"],[50,40,12,494],[50,43,12,497,"Object"],[50,49,12,503],[50,50,12,504,"getOwnPropertyDescriptor"],[50,74,12,497],[50,75,12,529,"obj"],[50,78,12,497],[50,80,12,534,"key"],[50,83,12,497],[50,84,12,494],[50,87,12,541],[50,91,12,462],[52,0,12,547],[52,12,12,551,"desc"],[52,16,12,555],[52,21,12,560,"desc"],[52,25,12,564],[52,26,12,565,"get"],[52,29,12,560],[52,33,12,572,"desc"],[52,37,12,576],[52,38,12,577,"set"],[52,41,12,555],[52,42,12,547],[52,44,12,583],[53,0,12,585,"Object"],[53,10,12,585,"Object"],[53,16,12,591],[53,17,12,592,"defineProperty"],[53,31,12,585],[53,32,12,607,"newObj"],[53,38,12,585],[53,40,12,615,"key"],[53,43,12,585],[53,45,12,620,"desc"],[53,49,12,585],[54,0,12,628],[54,9,12,547],[54,15,12,634],[55,0,12,636,"newObj"],[55,10,12,636,"newObj"],[55,16,12,642],[55,17,12,643,"key"],[55,20,12,642],[55,21,12,636],[55,24,12,650,"obj"],[55,27,12,653],[55,28,12,654,"key"],[55,31,12,653],[55,32,12,636],[56,0,12,661],[57,0,12,663],[58,0,12,665],[60,0,12,666,"newObj"],[60,4,12,666,"newObj"],[60,10,12,672],[60,11,12,673,"default"],[60,18,12,666],[60,21,12,683,"obj"],[60,24,12,666],[62,0,12,688],[62,8,12,692,"cache"],[62,13,12,688],[62,15,12,699],[63,0,12,701,"cache"],[63,6,12,701,"cache"],[63,11,12,706],[63,12,12,707,"set"],[63,15,12,701],[63,16,12,711,"obj"],[63,19,12,701],[63,21,12,716,"newObj"],[63,27,12,701],[64,0,12,726],[66,0,12,727],[66,11,12,734,"newObj"],[66,17,12,727],[67,0,12,743],[69,0,14,0],[69,6,14,6,"referenceVisitor"],[69,22,14,22],[69,25,14,25],[70,0,15,2,"ReferencedIdentifier"],[70,4,15,2,"ReferencedIdentifier"],[70,24,14,25],[70,56,15,23,"path"],[70,60,14,25],[70,62,15,29,"state"],[70,67,14,25],[70,69,15,36],[71,0,16,4],[71,10,16,8,"path"],[71,14,16,12],[71,15,16,13,"isJSXIdentifier"],[71,30,16,8],[71,36,16,34,"t"],[71,37,16,35],[71,38,16,36,"react"],[71,43,16,34],[71,44,16,42,"isCompatTag"],[71,55,16,34],[71,56,16,54,"path"],[71,60,16,58],[71,61,16,59,"node"],[71,65,16,54],[71,66,16,64,"name"],[71,70,16,34],[71,71,16,8],[71,75,16,73],[71,76,16,74,"path"],[71,80,16,78],[71,81,16,79,"parentPath"],[71,91,16,74],[71,92,16,90,"isJSXMemberExpression"],[71,113,16,74],[71,115,16,4],[71,117,16,115],[72,0,17,6],[73,0,18,5],[75,0,20,4],[75,10,20,8,"path"],[75,14,20,12],[75,15,20,13,"node"],[75,19,20,8],[75,20,20,18,"name"],[75,24,20,8],[75,29,20,27],[75,35,20,4],[75,37,20,35],[76,0,21,6],[76,12,21,10,"scope"],[76,17,21,15],[76,20,21,18,"path"],[76,24,21,22],[76,25,21,23,"scope"],[76,30,21,6],[78,0,23,6],[78,11,23,9],[79,0,24,8],[79,14,24,12,"scope"],[79,19,24,17],[79,20,24,18,"path"],[79,24,24,12],[79,25,24,23,"isFunction"],[79,35,24,12],[79,41,24,39],[79,42,24,40,"scope"],[79,47,24,45],[79,48,24,46,"path"],[79,52,24,40],[79,53,24,51,"isArrowFunctionExpression"],[79,78,24,40],[79,80,24,8],[79,82,24,80],[80,0,25,10],[81,0,26,9],[82,0,27,7],[82,9,23,6],[82,17,27,15,"scope"],[82,22,27,20],[82,25,27,23,"scope"],[82,30,27,28],[82,31,27,29,"parent"],[82,37,23,6],[84,0,29,6],[84,12,29,10,"scope"],[84,17,29,6],[84,19,29,17,"state"],[84,24,29,22],[84,25,29,23,"breakOnScopePaths"],[84,42,29,17],[84,43,29,41,"push"],[84,47,29,17],[84,48,29,46,"scope"],[84,53,29,51],[84,54,29,52,"path"],[84,58,29,17],[85,0,30,5],[87,0,32,4],[87,10,32,10,"binding"],[87,17,32,17],[87,20,32,20,"path"],[87,24,32,24],[87,25,32,25,"scope"],[87,30,32,20],[87,31,32,31,"getBinding"],[87,41,32,20],[87,42,32,42,"path"],[87,46,32,46],[87,47,32,47,"node"],[87,51,32,42],[87,52,32,52,"name"],[87,56,32,20],[87,57,32,4],[88,0,33,4],[88,10,33,8],[88,11,33,9,"binding"],[88,18,33,4],[88,20,33,18],[90,0,35,4],[90,27,35,28,"binding"],[90,34,35,35],[90,35,35,36,"constantViolations"],[90,53,35,4],[90,213,35,56],[91,0,35,56],[93,0,35,56],[94,0,35,56],[95,0,35,56],[96,0,35,56],[97,0,35,56],[98,0,35,56],[99,0,35,56],[100,0,35,56],[102,0,35,56],[102,12,35,15,"violation"],[102,22,35,56],[104,0,36,6],[104,12,36,10,"violation"],[104,22,36,19],[104,23,36,20,"scope"],[104,28,36,10],[104,33,36,30,"binding"],[104,40,36,37],[104,41,36,38,"path"],[104,45,36,30],[104,46,36,43,"scope"],[104,51,36,6],[104,53,36,50],[105,0,37,8,"state"],[105,10,37,8,"state"],[105,15,37,13],[105,16,37,14,"mutableBinding"],[105,30,37,8],[105,33,37,31],[105,37,37,8],[106,0,38,8,"path"],[106,10,38,8,"path"],[106,14,38,12],[106,15,38,13,"stop"],[106,19,38,8],[107,0,39,8],[108,0,40,7],[109,0,41,5],[111,0,43,4],[111,10,43,8,"binding"],[111,17,43,15],[111,22,43,20,"state"],[111,27,43,25],[111,28,43,26,"scope"],[111,33,43,20],[111,34,43,32,"getBinding"],[111,44,43,20],[111,45,43,43,"path"],[111,49,43,47],[111,50,43,48,"node"],[111,54,43,43],[111,55,43,53,"name"],[111,59,43,20],[111,60,43,4],[111,62,43,60],[112,0,44,4,"state"],[112,6,44,4,"state"],[112,11,44,9],[112,12,44,10,"bindings"],[112,20,44,4],[112,21,44,19,"path"],[112,25,44,23],[112,26,44,24,"node"],[112,30,44,19],[112,31,44,29,"name"],[112,35,44,4],[112,39,44,37,"binding"],[112,46,44,4],[113,0,45,3],[114,0,14,25],[114,3,14,0],[116,6,49,6,"PathHoister"],[116,17],[117,0,50,2],[117,25,50,14,"path"],[117,29,50,2],[117,31,50,20,"scope"],[117,36,50,2],[117,38,50,27],[118,0,50,27],[120,0,51,4],[120,11,51,9,"breakOnScopePaths"],[120,28,51,4],[120,31,51,29],[120,33,51,4],[121,0,52,4],[121,11,52,9,"bindings"],[121,19,52,4],[121,22,52,20],[121,24,52,4],[122,0,53,4],[122,11,53,9,"mutableBinding"],[122,25,53,4],[122,28,53,26],[122,33,53,4],[123,0,54,4],[123,11,54,9,"scopes"],[123,17,54,4],[123,20,54,18],[123,22,54,4],[124,0,55,4],[124,11,55,9,"scope"],[124,16,55,4],[124,19,55,17,"scope"],[124,24,55,4],[125,0,56,4],[125,11,56,9,"path"],[125,15,56,4],[125,18,56,16,"path"],[125,22,56,4],[126,0,57,4],[126,11,57,9,"attachAfter"],[126,22,57,4],[126,25,57,23],[126,30,57,4],[127,0,58,3],[131,40,60,20,"scope"],[131,45],[131,47,60,27],[132,0,61,4],[132,41,61,22,"Object"],[132,47,61,28],[132,48,61,29,"keys"],[132,52,61,22],[132,53,61,34],[132,58,61,39,"bindings"],[132,66,61,22],[132,67,61,4],[132,103,61,50],[133,0,61,9],[133,14,61,15,"key"],[133,17,61,18],[133,37,61,9],[134,0,62,6],[134,14,62,12,"binding"],[134,21,62,19],[134,24,62,22],[134,29,62,27,"bindings"],[134,37,62,22],[134,38,62,36,"key"],[134,41,62,22],[134,42,62,6],[136,0,64,6],[136,14,64,10],[136,15,64,11,"scope"],[136,20,64,16],[136,21,64,17,"bindingIdentifierEquals"],[136,44,64,11],[136,45,64,41,"key"],[136,48,64,11],[136,50,64,46,"binding"],[136,57,64,53],[136,58,64,54,"identifier"],[136,68,64,11],[136,69,64,6],[136,71,64,67],[137,0,65,8],[137,19,65,15],[137,24,65,8],[138,0,66,7],[139,0,67,5],[141,0,69,4],[141,15,69,11],[141,19,69,4],[142,0,70,3],[145,44,72,24],[146,0,73,4],[146,12,73,8,"scope"],[146,17,73,13],[146,20,73,16],[146,25,73,21,"path"],[146,29,73,16],[146,30,73,26,"scope"],[146,35,73,4],[148,0,75,4],[148,11,75,7],[149,0,76,6],[149,14,76,10],[149,19,76,15,"isCompatibleScope"],[149,36,76,10],[149,37,76,33,"scope"],[149,42,76,10],[149,43,76,6],[149,45,76,41],[150,0,77,8],[150,17,77,13,"scopes"],[150,23,77,8],[150,24,77,20,"push"],[150,28,77,8],[150,29,77,25,"scope"],[150,34,77,8],[151,0,78,7],[151,11,76,6],[151,17,78,13],[152,0,79,8],[153,0,80,7],[155,0,82,6],[155,14,82,10],[155,19,82,15,"breakOnScopePaths"],[155,36,82,10],[155,37,82,33,"indexOf"],[155,44,82,10],[155,45,82,41,"scope"],[155,50,82,46],[155,51,82,47,"path"],[155,55,82,10],[155,60,82,56],[155,61,82,6],[155,63,82,59],[156,0,83,8],[157,0,84,7],[158,0,85,5],[158,9,75,4],[158,17,85,13,"scope"],[158,22,85,18],[158,25,85,21,"scope"],[158,30,85,26],[158,31,85,27,"parent"],[158,37,75,4],[159,0,86,3],[162,42,88,22],[163,0,89,4],[163,12,89,8,"path"],[163,16,89,12],[163,19,89,15],[163,24,89,20,"_getAttachmentPath"],[163,42,89,15],[163,44,89,4],[165,0,91,4],[165,12,91,8],[165,13,91,9,"path"],[165,17,91,4],[165,19,91,15],[166,0,92,4],[166,12,92,8,"targetScope"],[166,23,92,19],[166,26,92,22,"path"],[166,30,92,26],[166,31,92,27,"scope"],[166,36,92,4],[168,0,94,4],[168,12,94,8,"targetScope"],[168,23,94,19],[168,24,94,20,"path"],[168,28,94,8],[168,33,94,29,"path"],[168,37,94,4],[168,39,94,35],[169,0,95,6,"targetScope"],[169,10,95,6,"targetScope"],[169,21,95,17],[169,24,95,20,"path"],[169,28,95,24],[169,29,95,25,"scope"],[169,34,95,20],[169,35,95,31,"parent"],[169,41,95,6],[170,0,96,5],[172,0,98,4],[172,12,98,8,"targetScope"],[172,23,98,19],[172,24,98,20,"path"],[172,28,98,8],[172,29,98,25,"isProgram"],[172,38,98,8],[172,44,98,40,"targetScope"],[172,55,98,51],[172,56,98,52,"path"],[172,60,98,40],[172,61,98,57,"isFunction"],[172,71,98,40],[172,73,98,4],[172,75,98,71],[173,0,99,6],[173,44,99,25,"Object"],[173,50,99,31],[173,51,99,32,"keys"],[173,55,99,25],[173,56,99,37],[173,61,99,42,"bindings"],[173,69,99,25],[173,70,99,6],[173,107,99,53],[174,0,99,11],[174,16,99,17,"name"],[174,20,99,21],[174,41,99,11],[175,0,100,8],[175,16,100,12],[175,17,100,13,"targetScope"],[175,28,100,24],[175,29,100,25,"hasOwnBinding"],[175,42,100,13],[175,43,100,39,"name"],[175,47,100,13],[175,48,100,8],[175,50,100,46],[176,0,101,8],[176,16,101,14,"binding"],[176,23,101,21],[176,26,101,24],[176,31,101,29,"bindings"],[176,39,101,24],[176,40,101,38,"name"],[176,44,101,24],[176,45,101,8],[178,0,103,8],[178,16,103,12,"binding"],[178,23,103,19],[178,24,103,20,"kind"],[178,28,103,12],[178,33,103,29],[178,40,103,12],[178,44,103,40,"binding"],[178,51,103,47],[178,52,103,48,"path"],[178,56,103,40],[178,57,103,53,"parentKey"],[178,66,103,40],[178,71,103,67],[178,79,103,8],[178,81,103,77],[179,0,104,10],[180,0,105,9],[182,0,107,8],[182,16,107,14,"bindingParentPath"],[182,33,107,31],[182,36,107,34],[182,41,107,39,"getAttachmentParentForPath"],[182,67,107,34],[182,68,107,66,"binding"],[182,75,107,73],[182,76,107,74,"path"],[182,80,107,34],[182,81,107,8],[184,0,109,8],[184,16,109,12,"bindingParentPath"],[184,33,109,29],[184,34,109,30,"key"],[184,37,109,12],[184,41,109,37,"path"],[184,45,109,41],[184,46,109,42,"key"],[184,49,109,8],[184,51,109,47],[185,0,110,10],[185,19,110,15,"attachAfter"],[185,30,110,10],[185,33,110,29],[185,37,110,10],[186,0,111,10,"path"],[186,14,111,10,"path"],[186,18,111,14],[186,21,111,17,"binding"],[186,28,111,24],[186,29,111,25,"path"],[186,33,111,10],[188,0,113,10],[188,36,113,38,"binding"],[188,43,113,45],[188,44,113,46,"constantViolations"],[188,62,113,10],[188,229,113,66],[189,0,113,66],[191,0,113,66],[192,0,113,66],[193,0,113,66],[194,0,113,66],[195,0,113,66],[196,0,113,66],[197,0,113,66],[198,0,113,66],[200,0,113,66],[200,20,113,21,"violationPath"],[200,34,113,66],[202,0,114,12],[202,20,114,16],[202,25,114,21,"getAttachmentParentForPath"],[202,51,114,16],[202,52,114,48,"violationPath"],[202,66,114,16],[202,68,114,63,"key"],[202,71,114,16],[202,74,114,69,"path"],[202,78,114,73],[202,79,114,74,"key"],[202,82,114,12],[202,84,114,79],[203,0,115,14,"path"],[203,18,115,14,"path"],[203,22,115,18],[203,25,115,21,"violationPath"],[203,39,115,14],[204,0,116,13],[205,0,117,11],[206,0,118,9],[207,0,119,7],[208,0,120,5],[210,0,122,4],[210,15,122,11,"path"],[210,19,122,4],[211,0,123,3],[214,43,125,23],[215,0,126,4],[215,12,126,10,"scopes"],[215,18,126,16],[215,21,126,19],[215,26,126,24,"scopes"],[215,32,126,4],[216,0,127,4],[216,12,127,10,"scope"],[216,17,127,15],[216,20,127,18,"scopes"],[216,26,127,24],[216,27,127,25,"pop"],[216,30,127,18],[216,32,127,4],[217,0,128,4],[217,12,128,8],[217,13,128,9,"scope"],[217,18,128,4],[217,20,128,16],[219,0,130,4],[219,12,130,8,"scope"],[219,17,130,13],[219,18,130,14,"path"],[219,22,130,8],[219,23,130,19,"isFunction"],[219,33,130,8],[219,35,130,4],[219,37,130,33],[220,0,131,6],[220,14,131,10],[220,19,131,15,"hasOwnParamBindings"],[220,38,131,10],[220,39,131,35,"scope"],[220,44,131,10],[220,45,131,6],[220,47,131,43],[221,0,132,8],[221,16,132,12],[221,21,132,17,"scope"],[221,26,132,12],[221,31,132,27,"scope"],[221,36,132,8],[221,38,132,34],[222,0,133,8],[222,16,133,14,"bodies"],[222,22,133,20],[222,25,133,23,"scope"],[222,30,133,28],[222,31,133,29,"path"],[222,35,133,23],[222,36,133,34,"get"],[222,39,133,23],[222,40,133,38],[222,46,133,23],[222,48,133,46,"get"],[222,51,133,23],[222,52,133,50],[222,58,133,23],[222,59,133,8],[224,0,135,8],[224,17,135,13],[224,21,135,17,"i"],[224,22,135,18],[224,25,135,21],[224,26,135,8],[224,28,135,24,"i"],[224,29,135,25],[224,32,135,28,"bodies"],[224,38,135,34],[224,39,135,35,"length"],[224,45,135,8],[224,47,135,43,"i"],[224,48,135,44],[224,50,135,8],[224,52,135,48],[225,0,136,10],[225,18,136,14,"bodies"],[225,24,136,20],[225,25,136,21,"i"],[225,26,136,20],[225,27,136,14],[225,28,136,24,"node"],[225,32,136,14],[225,33,136,29,"_blockHoist"],[225,44,136,10],[225,46,136,42],[226,0,137,10],[226,21,137,17,"bodies"],[226,27,137,23],[226,28,137,24,"i"],[226,29,137,23],[226,30,137,10],[227,0,138,9],[228,0,139,7],[228,11,131,6],[228,17,139,13],[229,0,140,8],[229,19,140,15],[229,24,140,20,"getNextScopeAttachmentParent"],[229,52,140,15],[229,54,140,8],[230,0,141,7],[231,0,142,5],[231,9,130,4],[231,15,142,11],[231,19,142,15,"scope"],[231,24,142,20],[231,25,142,21,"path"],[231,29,142,15],[231,30,142,26,"isProgram"],[231,39,142,15],[231,41,142,11],[231,43,142,39],[232,0,143,6],[232,17,143,13],[232,22,143,18,"getNextScopeAttachmentParent"],[232,50,143,13],[232,52,143,6],[233,0,144,5],[234,0,145,3],[237,53,147,33],[238,0,148,4],[238,12,148,10,"scope"],[238,17,148,15],[238,20,148,18],[238,25,148,23,"scopes"],[238,31,148,18],[238,32,148,30,"pop"],[238,35,148,18],[238,37,148,4],[239,0,149,4],[239,12,149,8,"scope"],[239,17,149,4],[239,19,149,15],[239,26,149,22],[239,31,149,27,"getAttachmentParentForPath"],[239,57,149,22],[239,58,149,54,"scope"],[239,63,149,59],[239,64,149,60,"path"],[239,68,149,22],[239,69,149,15],[240,0,150,3],[243,49,152,29,"path"],[243,53],[243,55,152,35],[244,0,153,4],[244,11,153,7],[245,0,154,6],[245,14,154,10],[245,15,154,11,"path"],[245,19,154,15],[245,20,154,16,"parentPath"],[245,30,154,10],[245,34,154,30,"Array"],[245,39,154,35],[245,40,154,36,"isArray"],[245,47,154,30],[245,48,154,44,"path"],[245,52,154,48],[245,53,154,49,"container"],[245,62,154,30],[245,67,154,63,"path"],[245,71,154,67],[245,72,154,68,"isStatement"],[245,83,154,63],[245,85,154,6],[245,87,154,83],[246,0,155,8],[246,19,155,15,"path"],[246,23,155,8],[247,0,156,7],[248,0,157,5],[248,9,153,4],[248,17,157,13,"path"],[248,21,157,17],[248,24,157,20,"path"],[248,28,157,24],[248,29,157,25,"parentPath"],[248,39,153,4],[249,0,158,3],[252,42,160,22,"scope"],[252,47],[252,49,160,29],[253,0,161,4],[253,42,161,23,"Object"],[253,48,161,29],[253,49,161,30,"keys"],[253,53,161,23],[253,54,161,35],[253,59,161,40,"bindings"],[253,67,161,23],[253,68,161,4],[253,105,161,51],[254,0,161,9],[254,14,161,15,"name"],[254,18,161,19],[254,39,161,9],[255,0,162,6],[255,14,162,10],[255,15,162,11,"scope"],[255,20,162,16],[255,21,162,17,"hasOwnBinding"],[255,34,162,11],[255,35,162,31,"name"],[255,39,162,11],[255,40,162,6],[255,42,162,38],[256,0,163,6],[256,14,163,12,"binding"],[256,21,163,19],[256,24,163,22],[256,29,163,27,"bindings"],[256,37,163,22],[256,38,163,36,"name"],[256,42,163,22],[256,43,163,6],[257,0,164,6],[257,14,164,10,"binding"],[257,21,164,17],[257,22,164,18,"kind"],[257,26,164,10],[257,31,164,27],[257,38,164,10],[257,42,164,38,"binding"],[257,49,164,45],[257,50,164,46,"constant"],[257,58,164,6],[257,60,164,56],[257,67,164,63],[257,71,164,56],[258,0,165,5],[260,0,167,4],[260,15,167,11],[260,20,167,4],[261,0,168,3],[264,28,170,8],[265,0,171,4],[265,13,171,9,"path"],[265,17,171,4],[265,18,171,14,"traverse"],[265,26,171,4],[265,27,171,23,"referenceVisitor"],[265,43,171,4],[265,45,171,41],[265,49,171,4],[266,0,172,4],[266,12,172,8],[266,17,172,13,"mutableBinding"],[266,31,172,4],[266,33,172,29],[267,0,173,4],[267,13,173,9,"getCompatibleScopes"],[267,32,173,4],[268,0,174,4],[268,12,174,10,"attachTo"],[268,20,174,18],[268,23,174,21],[268,28,174,26,"getAttachmentPath"],[268,45,174,21],[268,47,174,4],[269,0,175,4],[269,12,175,8],[269,13,175,9,"attachTo"],[269,21,175,4],[269,23,175,19],[270,0,176,4],[270,12,176,8,"attachTo"],[270,20,176,16],[270,21,176,17,"getFunctionParent"],[270,38,176,8],[270,45,176,41],[270,50,176,46,"path"],[270,54,176,41],[270,55,176,51,"getFunctionParent"],[270,72,176,41],[270,74,176,4],[270,76,176,72],[271,0,177,4],[271,12,177,8,"uid"],[271,15,177,11],[271,18,177,14,"attachTo"],[271,26,177,22],[271,27,177,23,"scope"],[271,32,177,14],[271,33,177,29,"generateUidIdentifier"],[271,54,177,14],[271,55,177,51],[271,60,177,14],[271,61,177,4],[272,0,178,4],[272,12,178,10,"declarator"],[272,22,178,20],[272,25,178,23,"t"],[272,26,178,24],[272,27,178,25,"variableDeclarator"],[272,45,178,23],[272,46,178,44,"uid"],[272,49,178,23],[272,51,178,49],[272,56,178,54,"path"],[272,60,178,49],[272,61,178,59,"node"],[272,65,178,23],[272,66,178,4],[273,0,179,4],[273,12,179,10,"insertFn"],[273,20,179,18],[273,23,179,21],[273,28,179,26,"attachAfter"],[273,39,179,21],[273,42,179,40],[273,55,179,21],[273,58,179,56],[273,72,179,4],[275,0,170,8],[275,33,180,23,"attachTo"],[275,41,180,31],[275,42,180,32,"insertFn"],[275,50,180,31],[275,51,180,23],[275,52,180,42],[275,53,180,43,"attachTo"],[275,61,180,51],[275,62,180,52,"isVariableDeclarator"],[275,82,180,43],[275,87,180,77,"declarator"],[275,97,180,43],[275,100,180,90,"t"],[275,101,180,91],[275,102,180,92,"variableDeclaration"],[275,121,180,90],[275,122,180,112],[275,127,180,90],[275,129,180,119],[275,130,180,120,"declarator"],[275,140,180,119],[275,141,180,90],[275,142,180,42],[275,143,180,23],[275,144,170,8],[276,0,170,8],[277,0,170,8],[277,12,180,11,"attached"],[277,20,170,8],[279,0,181,4],[279,12,181,10,"parent"],[279,18,181,16],[279,21,181,19],[279,26,181,24,"path"],[279,30,181,19],[279,31,181,29,"parentPath"],[279,41,181,4],[281,0,183,4],[281,12,183,8,"parent"],[281,18,183,14],[281,19,183,15,"isJSXElement"],[281,31,183,8],[281,37,183,33],[281,42,183,38,"path"],[281,46,183,33],[281,47,183,43,"container"],[281,56,183,33],[281,61,183,57,"parent"],[281,67,183,63],[281,68,183,64,"node"],[281,72,183,57],[281,73,183,69,"children"],[281,81,183,4],[281,83,183,79],[282,0,184,6,"uid"],[282,10,184,6,"uid"],[282,13,184,9],[282,16,184,12,"t"],[282,17,184,13],[282,18,184,14,"JSXExpressionContainer"],[282,40,184,12],[282,41,184,37,"uid"],[282,44,184,12],[282,45,184,6],[283,0,185,5],[285,0,187,4],[285,13,187,9,"path"],[285,17,187,4],[285,18,187,14,"replaceWith"],[285,29,187,4],[285,30,187,26,"t"],[285,31,187,27],[285,32,187,28,"cloneNode"],[285,41,187,26],[285,42,187,38,"uid"],[285,45,187,26],[285,46,187,4],[286,0,188,4],[286,15,188,11,"attachTo"],[286,23,188,19],[286,24,188,20,"isVariableDeclarator"],[286,44,188,11],[286,49,188,45,"attached"],[286,57,188,53],[286,58,188,54,"get"],[286,61,188,45],[286,62,188,58],[286,68,188,45],[286,69,188,11],[286,72,188,68,"attached"],[286,80,188,76],[286,81,188,77,"get"],[286,84,188,68],[286,85,188,81],[286,106,188,68],[286,107,188,4],[287,0,189,3],[293,0,193,0,"exports"],[293,2,193,0,"exports"],[293,9,193,7],[293,10,193,8,"default"],[293,17,193,0],[293,20,193,18,"PathHoister"],[293,31,193,0]]},"type":"js/module"}]}