{"dependencies":[{"name":"@babel/types","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports._params = _params;\n  exports._parameters = _parameters;\n  exports._param = _param;\n  exports._methodHead = _methodHead;\n  exports._predicate = _predicate;\n  exports._functionHead = _functionHead;\n  exports.FunctionDeclaration = exports.FunctionExpression = FunctionExpression;\n  exports.ArrowFunctionExpression = ArrowFunctionExpression;\n\n  var t = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"@babel/types\"));\n\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n\n    return cache;\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n\n    var cache = _getRequireWildcardCache();\n\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj.default = obj;\n\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n\n    return newObj;\n  }\n\n  function _params(node) {\n    this.print(node.typeParameters, node);\n    this.token(\"(\");\n\n    this._parameters(node.params, node);\n\n    this.token(\")\");\n    this.print(node.returnType, node);\n  }\n\n  function _parameters(parameters, parent) {\n    for (var i = 0; i < parameters.length; i++) {\n      this._param(parameters[i], parent);\n\n      if (i < parameters.length - 1) {\n        this.token(\",\");\n        this.space();\n      }\n    }\n  }\n\n  function _param(parameter, parent) {\n    this.printJoin(parameter.decorators, parameter);\n    this.print(parameter, parent);\n    if (parameter.optional) this.token(\"?\");\n    this.print(parameter.typeAnnotation, parameter);\n  }\n\n  function _methodHead(node) {\n    var kind = node.kind;\n    var key = node.key;\n\n    if (kind === \"get\" || kind === \"set\") {\n      this.word(kind);\n      this.space();\n    }\n\n    if (node.async) {\n      this.word(\"async\");\n      this.space();\n    }\n\n    if (kind === \"method\" || kind === \"init\") {\n      if (node.generator) {\n        this.token(\"*\");\n      }\n    }\n\n    if (node.computed) {\n      this.token(\"[\");\n      this.print(key, node);\n      this.token(\"]\");\n    } else {\n      this.print(key, node);\n    }\n\n    if (node.optional) {\n      this.token(\"?\");\n    }\n\n    this._params(node);\n  }\n\n  function _predicate(node) {\n    if (node.predicate) {\n      if (!node.returnType) {\n        this.token(\":\");\n      }\n\n      this.space();\n      this.print(node.predicate, node);\n    }\n  }\n\n  function _functionHead(node) {\n    if (node.async) {\n      this.word(\"async\");\n      this.space();\n    }\n\n    this.word(\"function\");\n    if (node.generator) this.token(\"*\");\n    this.space();\n\n    if (node.id) {\n      this.print(node.id, node);\n    }\n\n    this._params(node);\n\n    this._predicate(node);\n  }\n\n  function FunctionExpression(node) {\n    this._functionHead(node);\n\n    this.space();\n    this.print(node.body, node);\n  }\n\n  function ArrowFunctionExpression(node) {\n    if (node.async) {\n      this.word(\"async\");\n      this.space();\n    }\n\n    var firstParam = node.params[0];\n\n    if (node.params.length === 1 && t.isIdentifier(firstParam) && !hasTypes(node, firstParam)) {\n      if (this.format.retainLines && node.loc && node.body.loc && node.loc.start.line < node.body.loc.start.line) {\n        this.token(\"(\");\n\n        if (firstParam.loc && firstParam.loc.start.line > node.loc.start.line) {\n          this.indent();\n          this.print(firstParam, node);\n          this.dedent();\n\n          this._catchUp(\"start\", node.body.loc);\n        } else {\n          this.print(firstParam, node);\n        }\n\n        this.token(\")\");\n      } else {\n        this.print(firstParam, node);\n      }\n    } else {\n      this._params(node);\n    }\n\n    this._predicate(node);\n\n    this.space();\n    this.token(\"=>\");\n    this.space();\n    this.print(node.body, node);\n  }\n\n  function hasTypes(node, param) {\n    return node.typeParameters || node.returnType || param.typeAnnotation || param.optional || param.trailingComments;\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"_params"],[7,17,6,0],[7,20,6,18,"_params"],[7,27,6,0],[8,0,7,0,"exports"],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"_parameters"],[8,21,7,0],[8,24,7,22,"_parameters"],[8,35,7,0],[9,0,8,0,"exports"],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"_param"],[9,16,8,0],[9,19,8,17,"_param"],[9,25,8,0],[10,0,9,0,"exports"],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"_methodHead"],[10,21,9,0],[10,24,9,22,"_methodHead"],[10,35,9,0],[11,0,10,0,"exports"],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"_predicate"],[11,20,10,0],[11,23,10,21,"_predicate"],[11,33,10,0],[12,0,11,0,"exports"],[12,2,11,0,"exports"],[12,9,11,7],[12,10,11,8,"_functionHead"],[12,23,11,0],[12,26,11,24,"_functionHead"],[12,39,11,0],[13,0,12,0,"exports"],[13,2,12,0,"exports"],[13,9,12,7],[13,10,12,8,"FunctionDeclaration"],[13,29,12,0],[13,32,12,30,"exports"],[13,39,12,37],[13,40,12,38,"FunctionExpression"],[13,58,12,30],[13,61,12,59,"FunctionExpression"],[13,79,12,0],[14,0,13,0,"exports"],[14,2,13,0,"exports"],[14,9,13,7],[14,10,13,8,"ArrowFunctionExpression"],[14,33,13,0],[14,36,13,34,"ArrowFunctionExpression"],[14,59,13,0],[16,0,15,0],[16,6,15,4,"t"],[16,7,15,5],[16,10,15,8,"_interopRequireWildcard"],[16,33,15,31],[16,34,15,32,"require"],[16,45,15,39],[16,80,15,31],[16,81,15,0],[18,0,17,0],[18,11,17,9,"_getRequireWildcardCache"],[18,35,17,0],[18,38,17,36],[19,0,17,38],[19,8,17,42],[19,15,17,49,"WeakMap"],[19,22,17,42],[19,27,17,61],[19,37,17,38],[19,39,17,73],[19,46,17,80],[19,50,17,73],[20,0,17,86],[20,8,17,90,"cache"],[20,13,17,95],[20,16,17,98],[20,20,17,102,"WeakMap"],[20,27,17,98],[20,29,17,86],[22,0,17,113,"_getRequireWildcardCache"],[22,4,17,113,"_getRequireWildcardCache"],[22,28,17,137],[22,31,17,140],[22,67,17,152],[23,0,17,154],[23,13,17,161,"cache"],[23,18,17,154],[24,0,17,169],[24,5,17,113],[26,0,17,171],[26,11,17,178,"cache"],[26,16,17,171],[27,0,17,186],[29,0,19,0],[29,11,19,9,"_interopRequireWildcard"],[29,34,19,0],[29,35,19,33,"obj"],[29,38,19,0],[29,40,19,38],[30,0,19,40],[30,8,19,44,"obj"],[30,11,19,47],[30,15,19,51,"obj"],[30,18,19,54],[30,19,19,55,"__esModule"],[30,29,19,40],[30,31,19,67],[31,0,19,69],[31,13,19,76,"obj"],[31,16,19,69],[32,0,19,82],[34,0,19,83],[34,8,19,87,"obj"],[34,11,19,90],[34,16,19,95],[34,20,19,87],[34,24,19,103],[34,31,19,110,"obj"],[34,34,19,103],[34,39,19,118],[34,47,19,103],[34,51,19,130],[34,58,19,137,"obj"],[34,61,19,130],[34,66,19,145],[34,76,19,83],[34,78,19,157],[35,0,19,159],[35,13,19,166],[36,0,19,168,"default"],[36,8,19,168,"default"],[36,15,19,175],[36,17,19,177,"obj"],[37,0,19,166],[37,7,19,159],[38,0,19,185],[40,0,19,186],[40,8,19,190,"cache"],[40,13,19,195],[40,16,19,198,"_getRequireWildcardCache"],[40,40,19,222],[40,42,19,186],[42,0,19,226],[42,8,19,230,"cache"],[42,13,19,235],[42,17,19,239,"cache"],[42,22,19,244],[42,23,19,245,"has"],[42,26,19,239],[42,27,19,249,"obj"],[42,30,19,239],[42,31,19,226],[42,33,19,255],[43,0,19,257],[43,13,19,264,"cache"],[43,18,19,269],[43,19,19,270,"get"],[43,22,19,264],[43,23,19,274,"obj"],[43,26,19,264],[43,27,19,257],[44,0,19,281],[46,0,19,282],[46,8,19,286,"newObj"],[46,14,19,292],[46,17,19,295],[46,19,19,282],[47,0,19,299],[47,8,19,303,"hasPropertyDescriptor"],[47,29,19,324],[47,32,19,327,"Object"],[47,38,19,333],[47,39,19,334,"defineProperty"],[47,53,19,327],[47,57,19,352,"Object"],[47,63,19,358],[47,64,19,359,"getOwnPropertyDescriptor"],[47,88,19,299],[49,0,19,385],[49,9,19,390],[49,13,19,394,"key"],[49,16,19,385],[49,20,19,401,"obj"],[49,23,19,385],[49,25,19,406],[50,0,19,408],[50,10,19,412,"Object"],[50,16,19,418],[50,17,19,419,"prototype"],[50,26,19,412],[50,27,19,429,"hasOwnProperty"],[50,41,19,412],[50,42,19,444,"call"],[50,46,19,412],[50,47,19,449,"obj"],[50,50,19,412],[50,52,19,454,"key"],[50,55,19,412],[50,56,19,408],[50,58,19,460],[51,0,19,462],[51,12,19,466,"desc"],[51,16,19,470],[51,19,19,473,"hasPropertyDescriptor"],[51,40,19,494],[51,43,19,497,"Object"],[51,49,19,503],[51,50,19,504,"getOwnPropertyDescriptor"],[51,74,19,497],[51,75,19,529,"obj"],[51,78,19,497],[51,80,19,534,"key"],[51,83,19,497],[51,84,19,494],[51,87,19,541],[51,91,19,462],[53,0,19,547],[53,12,19,551,"desc"],[53,16,19,555],[53,21,19,560,"desc"],[53,25,19,564],[53,26,19,565,"get"],[53,29,19,560],[53,33,19,572,"desc"],[53,37,19,576],[53,38,19,577,"set"],[53,41,19,555],[53,42,19,547],[53,44,19,583],[54,0,19,585,"Object"],[54,10,19,585,"Object"],[54,16,19,591],[54,17,19,592,"defineProperty"],[54,31,19,585],[54,32,19,607,"newObj"],[54,38,19,585],[54,40,19,615,"key"],[54,43,19,585],[54,45,19,620,"desc"],[54,49,19,585],[55,0,19,628],[55,9,19,547],[55,15,19,634],[56,0,19,636,"newObj"],[56,10,19,636,"newObj"],[56,16,19,642],[56,17,19,643,"key"],[56,20,19,642],[56,21,19,636],[56,24,19,650,"obj"],[56,27,19,653],[56,28,19,654,"key"],[56,31,19,653],[56,32,19,636],[57,0,19,661],[58,0,19,663],[59,0,19,665],[61,0,19,666,"newObj"],[61,4,19,666,"newObj"],[61,10,19,672],[61,11,19,673,"default"],[61,18,19,666],[61,21,19,683,"obj"],[61,24,19,666],[63,0,19,688],[63,8,19,692,"cache"],[63,13,19,688],[63,15,19,699],[64,0,19,701,"cache"],[64,6,19,701,"cache"],[64,11,19,706],[64,12,19,707,"set"],[64,15,19,701],[64,16,19,711,"obj"],[64,19,19,701],[64,21,19,716,"newObj"],[64,27,19,701],[65,0,19,726],[67,0,19,727],[67,11,19,734,"newObj"],[67,17,19,727],[68,0,19,743],[70,0,21,0],[70,11,21,9,"_params"],[70,18,21,0],[70,19,21,17,"node"],[70,23,21,0],[70,25,21,23],[71,0,22,2],[71,9,22,7,"print"],[71,14,22,2],[71,15,22,13,"node"],[71,19,22,17],[71,20,22,18,"typeParameters"],[71,34,22,2],[71,36,22,34,"node"],[71,40,22,2],[72,0,23,2],[72,9,23,7,"token"],[72,14,23,2],[72,15,23,13],[72,18,23,2],[74,0,25,2],[74,9,25,7,"_parameters"],[74,20,25,2],[74,21,25,19,"node"],[74,25,25,23],[74,26,25,24,"params"],[74,32,25,2],[74,34,25,32,"node"],[74,38,25,2],[76,0,27,2],[76,9,27,7,"token"],[76,14,27,2],[76,15,27,13],[76,18,27,2],[77,0,28,2],[77,9,28,7,"print"],[77,14,28,2],[77,15,28,13,"node"],[77,19,28,17],[77,20,28,18,"returnType"],[77,30,28,2],[77,32,28,30,"node"],[77,36,28,2],[78,0,29,1],[80,0,31,0],[80,11,31,9,"_parameters"],[80,22,31,0],[80,23,31,21,"parameters"],[80,33,31,0],[80,35,31,33,"parent"],[80,41,31,0],[80,43,31,41],[81,0,32,2],[81,9,32,7],[81,13,32,11,"i"],[81,14,32,12],[81,17,32,15],[81,18,32,2],[81,20,32,18,"i"],[81,21,32,19],[81,24,32,22,"parameters"],[81,34,32,32],[81,35,32,33,"length"],[81,41,32,2],[81,43,32,41,"i"],[81,44,32,42],[81,46,32,2],[81,48,32,46],[82,0,33,4],[82,11,33,9,"_param"],[82,17,33,4],[82,18,33,16,"parameters"],[82,28,33,26],[82,29,33,27,"i"],[82,30,33,26],[82,31,33,4],[82,33,33,31,"parent"],[82,39,33,4],[84,0,35,4],[84,10,35,8,"i"],[84,11,35,9],[84,14,35,12,"parameters"],[84,24,35,22],[84,25,35,23,"length"],[84,31,35,12],[84,34,35,32],[84,35,35,4],[84,37,35,35],[85,0,36,6],[85,13,36,11,"token"],[85,18,36,6],[85,19,36,17],[85,22,36,6],[86,0,37,6],[86,13,37,11,"space"],[86,18,37,6],[87,0,38,5],[88,0,39,3],[89,0,40,1],[91,0,42,0],[91,11,42,9,"_param"],[91,17,42,0],[91,18,42,16,"parameter"],[91,27,42,0],[91,29,42,27,"parent"],[91,35,42,0],[91,37,42,35],[92,0,43,2],[92,9,43,7,"printJoin"],[92,18,43,2],[92,19,43,17,"parameter"],[92,28,43,26],[92,29,43,27,"decorators"],[92,39,43,2],[92,41,43,39,"parameter"],[92,50,43,2],[93,0,44,2],[93,9,44,7,"print"],[93,14,44,2],[93,15,44,13,"parameter"],[93,24,44,2],[93,26,44,24,"parent"],[93,32,44,2],[94,0,45,2],[94,8,45,6,"parameter"],[94,17,45,15],[94,18,45,16,"optional"],[94,26,45,2],[94,28,45,26],[94,33,45,31,"token"],[94,38,45,26],[94,39,45,37],[94,42,45,26],[95,0,46,2],[95,9,46,7,"print"],[95,14,46,2],[95,15,46,13,"parameter"],[95,24,46,22],[95,25,46,23,"typeAnnotation"],[95,39,46,2],[95,41,46,39,"parameter"],[95,50,46,2],[96,0,47,1],[98,0,49,0],[98,11,49,9,"_methodHead"],[98,22,49,0],[98,23,49,21,"node"],[98,27,49,0],[98,29,49,27],[99,0,50,2],[99,8,50,8,"kind"],[99,12,50,12],[99,15,50,15,"node"],[99,19,50,19],[99,20,50,20,"kind"],[99,24,50,2],[100,0,51,2],[100,8,51,8,"key"],[100,11,51,11],[100,14,51,14,"node"],[100,18,51,18],[100,19,51,19,"key"],[100,22,51,2],[102,0,53,2],[102,8,53,6,"kind"],[102,12,53,10],[102,17,53,15],[102,22,53,6],[102,26,53,24,"kind"],[102,30,53,28],[102,35,53,33],[102,40,53,2],[102,42,53,40],[103,0,54,4],[103,11,54,9,"word"],[103,15,54,4],[103,16,54,14,"kind"],[103,20,54,4],[104,0,55,4],[104,11,55,9,"space"],[104,16,55,4],[105,0,56,3],[107,0,58,2],[107,8,58,6,"node"],[107,12,58,10],[107,13,58,11,"async"],[107,18,58,2],[107,20,58,18],[108,0,59,4],[108,11,59,9,"word"],[108,15,59,4],[108,16,59,14],[108,23,59,4],[109,0,60,4],[109,11,60,9,"space"],[109,16,60,4],[110,0,61,3],[112,0,63,2],[112,8,63,6,"kind"],[112,12,63,10],[112,17,63,15],[112,25,63,6],[112,29,63,27,"kind"],[112,33,63,31],[112,38,63,36],[112,44,63,2],[112,46,63,44],[113,0,64,4],[113,10,64,8,"node"],[113,14,64,12],[113,15,64,13,"generator"],[113,24,64,4],[113,26,64,24],[114,0,65,6],[114,13,65,11,"token"],[114,18,65,6],[114,19,65,17],[114,22,65,6],[115,0,66,5],[116,0,67,3],[118,0,69,2],[118,8,69,6,"node"],[118,12,69,10],[118,13,69,11,"computed"],[118,21,69,2],[118,23,69,21],[119,0,70,4],[119,11,70,9,"token"],[119,16,70,4],[119,17,70,15],[119,20,70,4],[120,0,71,4],[120,11,71,9,"print"],[120,16,71,4],[120,17,71,15,"key"],[120,20,71,4],[120,22,71,20,"node"],[120,26,71,4],[121,0,72,4],[121,11,72,9,"token"],[121,16,72,4],[121,17,72,15],[121,20,72,4],[122,0,73,3],[122,5,69,2],[122,11,73,9],[123,0,74,4],[123,11,74,9,"print"],[123,16,74,4],[123,17,74,15,"key"],[123,20,74,4],[123,22,74,20,"node"],[123,26,74,4],[124,0,75,3],[126,0,77,2],[126,8,77,6,"node"],[126,12,77,10],[126,13,77,11,"optional"],[126,21,77,2],[126,23,77,21],[127,0,78,4],[127,11,78,9,"token"],[127,16,78,4],[127,17,78,15],[127,20,78,4],[128,0,79,3],[130,0,81,2],[130,9,81,7,"_params"],[130,16,81,2],[130,17,81,15,"node"],[130,21,81,2],[131,0,82,1],[133,0,84,0],[133,11,84,9,"_predicate"],[133,21,84,0],[133,22,84,20,"node"],[133,26,84,0],[133,28,84,26],[134,0,85,2],[134,8,85,6,"node"],[134,12,85,10],[134,13,85,11,"predicate"],[134,22,85,2],[134,24,85,22],[135,0,86,4],[135,10,86,8],[135,11,86,9,"node"],[135,15,86,13],[135,16,86,14,"returnType"],[135,26,86,4],[135,28,86,26],[136,0,87,6],[136,13,87,11,"token"],[136,18,87,6],[136,19,87,17],[136,22,87,6],[137,0,88,5],[139,0,90,4],[139,11,90,9,"space"],[139,16,90,4],[140,0,91,4],[140,11,91,9,"print"],[140,16,91,4],[140,17,91,15,"node"],[140,21,91,19],[140,22,91,20,"predicate"],[140,31,91,4],[140,33,91,31,"node"],[140,37,91,4],[141,0,92,3],[142,0,93,1],[144,0,95,0],[144,11,95,9,"_functionHead"],[144,24,95,0],[144,25,95,23,"node"],[144,29,95,0],[144,31,95,29],[145,0,96,2],[145,8,96,6,"node"],[145,12,96,10],[145,13,96,11,"async"],[145,18,96,2],[145,20,96,18],[146,0,97,4],[146,11,97,9,"word"],[146,15,97,4],[146,16,97,14],[146,23,97,4],[147,0,98,4],[147,11,98,9,"space"],[147,16,98,4],[148,0,99,3],[150,0,101,2],[150,9,101,7,"word"],[150,13,101,2],[150,14,101,12],[150,24,101,2],[151,0,102,2],[151,8,102,6,"node"],[151,12,102,10],[151,13,102,11,"generator"],[151,22,102,2],[151,24,102,22],[151,29,102,27,"token"],[151,34,102,22],[151,35,102,33],[151,38,102,22],[152,0,103,2],[152,9,103,7,"space"],[152,14,103,2],[154,0,105,2],[154,8,105,6,"node"],[154,12,105,10],[154,13,105,11,"id"],[154,15,105,2],[154,17,105,15],[155,0,106,4],[155,11,106,9,"print"],[155,16,106,4],[155,17,106,15,"node"],[155,21,106,19],[155,22,106,20,"id"],[155,24,106,4],[155,26,106,24,"node"],[155,30,106,4],[156,0,107,3],[158,0,109,2],[158,9,109,7,"_params"],[158,16,109,2],[158,17,109,15,"node"],[158,21,109,2],[160,0,111,2],[160,9,111,7,"_predicate"],[160,19,111,2],[160,20,111,18,"node"],[160,24,111,2],[161,0,112,1],[163,0,114,0],[163,11,114,9,"FunctionExpression"],[163,29,114,0],[163,30,114,28,"node"],[163,34,114,0],[163,36,114,34],[164,0,115,2],[164,9,115,7,"_functionHead"],[164,22,115,2],[164,23,115,21,"node"],[164,27,115,2],[166,0,117,2],[166,9,117,7,"space"],[166,14,117,2],[167,0,118,2],[167,9,118,7,"print"],[167,14,118,2],[167,15,118,13,"node"],[167,19,118,17],[167,20,118,18,"body"],[167,24,118,2],[167,26,118,24,"node"],[167,30,118,2],[168,0,119,1],[170,0,121,0],[170,11,121,9,"ArrowFunctionExpression"],[170,34,121,0],[170,35,121,33,"node"],[170,39,121,0],[170,41,121,39],[171,0,122,2],[171,8,122,6,"node"],[171,12,122,10],[171,13,122,11,"async"],[171,18,122,2],[171,20,122,18],[172,0,123,4],[172,11,123,9,"word"],[172,15,123,4],[172,16,123,14],[172,23,123,4],[173,0,124,4],[173,11,124,9,"space"],[173,16,124,4],[174,0,125,3],[176,0,127,2],[176,8,127,8,"firstParam"],[176,18,127,18],[176,21,127,21,"node"],[176,25,127,25],[176,26,127,26,"params"],[176,32,127,21],[176,33,127,33],[176,34,127,21],[176,35,127,2],[178,0,129,2],[178,8,129,6,"node"],[178,12,129,10],[178,13,129,11,"params"],[178,19,129,6],[178,20,129,18,"length"],[178,26,129,6],[178,31,129,29],[178,32,129,6],[178,36,129,34,"t"],[178,37,129,35],[178,38,129,36,"isIdentifier"],[178,50,129,34],[178,51,129,49,"firstParam"],[178,61,129,34],[178,62,129,6],[178,66,129,64],[178,67,129,65,"hasTypes"],[178,75,129,73],[178,76,129,74,"node"],[178,80,129,73],[178,82,129,80,"firstParam"],[178,92,129,73],[178,93,129,2],[178,95,129,93],[179,0,130,4],[179,10,130,8],[179,15,130,13,"format"],[179,21,130,8],[179,22,130,20,"retainLines"],[179,33,130,8],[179,37,130,35,"node"],[179,41,130,39],[179,42,130,40,"loc"],[179,45,130,8],[179,49,130,47,"node"],[179,53,130,51],[179,54,130,52,"body"],[179,58,130,47],[179,59,130,57,"loc"],[179,62,130,8],[179,66,130,64,"node"],[179,70,130,68],[179,71,130,69,"loc"],[179,74,130,64],[179,75,130,73,"start"],[179,80,130,64],[179,81,130,79,"line"],[179,85,130,64],[179,88,130,86,"node"],[179,92,130,90],[179,93,130,91,"body"],[179,97,130,86],[179,98,130,96,"loc"],[179,101,130,86],[179,102,130,100,"start"],[179,107,130,86],[179,108,130,106,"line"],[179,112,130,4],[179,114,130,112],[180,0,131,6],[180,13,131,11,"token"],[180,18,131,6],[180,19,131,17],[180,22,131,6],[182,0,133,6],[182,12,133,10,"firstParam"],[182,22,133,20],[182,23,133,21,"loc"],[182,26,133,10],[182,30,133,28,"firstParam"],[182,40,133,38],[182,41,133,39,"loc"],[182,44,133,28],[182,45,133,43,"start"],[182,50,133,28],[182,51,133,49,"line"],[182,55,133,28],[182,58,133,56,"node"],[182,62,133,60],[182,63,133,61,"loc"],[182,66,133,56],[182,67,133,65,"start"],[182,72,133,56],[182,73,133,71,"line"],[182,77,133,6],[182,79,133,77],[183,0,134,8],[183,15,134,13,"indent"],[183,21,134,8],[184,0,135,8],[184,15,135,13,"print"],[184,20,135,8],[184,21,135,19,"firstParam"],[184,31,135,8],[184,33,135,31,"node"],[184,37,135,8],[185,0,136,8],[185,15,136,13,"dedent"],[185,21,136,8],[187,0,138,8],[187,15,138,13,"_catchUp"],[187,23,138,8],[187,24,138,22],[187,31,138,8],[187,33,138,31,"node"],[187,37,138,35],[187,38,138,36,"body"],[187,42,138,31],[187,43,138,41,"loc"],[187,46,138,8],[188,0,139,7],[188,9,133,6],[188,15,139,13],[189,0,140,8],[189,15,140,13,"print"],[189,20,140,8],[189,21,140,19,"firstParam"],[189,31,140,8],[189,33,140,31,"node"],[189,37,140,8],[190,0,141,7],[192,0,143,6],[192,13,143,11,"token"],[192,18,143,6],[192,19,143,17],[192,22,143,6],[193,0,144,5],[193,7,130,4],[193,13,144,11],[194,0,145,6],[194,13,145,11,"print"],[194,18,145,6],[194,19,145,17,"firstParam"],[194,29,145,6],[194,31,145,29,"node"],[194,35,145,6],[195,0,146,5],[196,0,147,3],[196,5,129,2],[196,11,147,9],[197,0,148,4],[197,11,148,9,"_params"],[197,18,148,4],[197,19,148,17,"node"],[197,23,148,4],[198,0,149,3],[200,0,151,2],[200,9,151,7,"_predicate"],[200,19,151,2],[200,20,151,18,"node"],[200,24,151,2],[202,0,153,2],[202,9,153,7,"space"],[202,14,153,2],[203,0,154,2],[203,9,154,7,"token"],[203,14,154,2],[203,15,154,13],[203,19,154,2],[204,0,155,2],[204,9,155,7,"space"],[204,14,155,2],[205,0,156,2],[205,9,156,7,"print"],[205,14,156,2],[205,15,156,13,"node"],[205,19,156,17],[205,20,156,18,"body"],[205,24,156,2],[205,26,156,24,"node"],[205,30,156,2],[206,0,157,1],[208,0,159,0],[208,11,159,9,"hasTypes"],[208,19,159,0],[208,20,159,18,"node"],[208,24,159,0],[208,26,159,24,"param"],[208,31,159,0],[208,33,159,31],[209,0,160,2],[209,11,160,9,"node"],[209,15,160,13],[209,16,160,14,"typeParameters"],[209,30,160,9],[209,34,160,32,"node"],[209,38,160,36],[209,39,160,37,"returnType"],[209,49,160,9],[209,53,160,51,"param"],[209,58,160,56],[209,59,160,57,"typeAnnotation"],[209,73,160,9],[209,77,160,75,"param"],[209,82,160,80],[209,83,160,81,"optional"],[209,91,160,9],[209,95,160,93,"param"],[209,100,160,98],[209,101,160,99,"trailingComments"],[209,117,160,2],[210,0,161,1]]},"type":"js/module"}]}