{"dependencies":[{"name":"./_baseIndexOf","data":{"isAsync":false}},{"name":"./isArrayLike","data":{"isAsync":false}},{"name":"./isString","data":{"isAsync":false}},{"name":"./toInteger","data":{"isAsync":false}},{"name":"./values","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var baseIndexOf = _$$_REQUIRE(_dependencyMap[0], \"./_baseIndexOf\"),\n      isArrayLike = _$$_REQUIRE(_dependencyMap[1], \"./isArrayLike\"),\n      isString = _$$_REQUIRE(_dependencyMap[2], \"./isString\"),\n      toInteger = _$$_REQUIRE(_dependencyMap[3], \"./toInteger\"),\n      values = _$$_REQUIRE(_dependencyMap[4], \"./values\");\n\n  var nativeMax = Math.max;\n\n  function includes(collection, value, fromIndex, guard) {\n    collection = isArrayLike(collection) ? collection : values(collection);\n    fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;\n    var length = collection.length;\n\n    if (fromIndex < 0) {\n      fromIndex = nativeMax(length + fromIndex, 0);\n    }\n\n    return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;\n  }\n\n  module.exports = includes;\n});","map":[[2,0,1,0],[2,6,1,4,"baseIndexOf"],[2,17,1,15],[2,20,1,18,"require"],[2,31,1,25],[2,68,1,0],[3,0,1,0],[3,6,2,4,"isArrayLike"],[3,17,2,15],[3,20,2,18,"require"],[3,31,2,25],[3,67,1,0],[4,0,1,0],[4,6,3,4,"isString"],[4,14,3,12],[4,17,3,15,"require"],[4,28,3,22],[4,61,1,0],[5,0,1,0],[5,6,4,4,"toInteger"],[5,15,4,13],[5,18,4,16,"require"],[5,29,4,23],[5,63,1,0],[6,0,1,0],[6,6,5,4,"values"],[6,12,5,10],[6,15,5,13,"require"],[6,26,5,20],[6,57,1,0],[8,0,8,0],[8,6,8,4,"nativeMax"],[8,15,8,13],[8,18,8,16,"Math"],[8,22,8,20],[8,23,8,21,"max"],[8,26,8,0],[10,0,40,0],[10,11,40,9,"includes"],[10,19,40,0],[10,20,40,18,"collection"],[10,30,40,0],[10,32,40,30,"value"],[10,37,40,0],[10,39,40,37,"fromIndex"],[10,48,40,0],[10,50,40,48,"guard"],[10,55,40,0],[10,57,40,55],[11,0,41,2,"collection"],[11,4,41,2,"collection"],[11,14,41,12],[11,17,41,15,"isArrayLike"],[11,28,41,26],[11,29,41,27,"collection"],[11,39,41,26],[11,40,41,15],[11,43,41,41,"collection"],[11,53,41,15],[11,56,41,54,"values"],[11,62,41,60],[11,63,41,61,"collection"],[11,73,41,60],[11,74,41,2],[12,0,42,2,"fromIndex"],[12,4,42,2,"fromIndex"],[12,13,42,11],[12,16,42,15,"fromIndex"],[12,25,42,24],[12,29,42,28],[12,30,42,29,"guard"],[12,35,42,14],[12,38,42,38,"toInteger"],[12,47,42,47],[12,48,42,48,"fromIndex"],[12,57,42,47],[12,58,42,14],[12,61,42,61],[12,62,42,2],[13,0,44,2],[13,8,44,6,"length"],[13,14,44,12],[13,17,44,15,"collection"],[13,27,44,25],[13,28,44,26,"length"],[13,34,44,2],[15,0,45,2],[15,8,45,6,"fromIndex"],[15,17,45,15],[15,20,45,18],[15,21,45,2],[15,23,45,21],[16,0,46,4,"fromIndex"],[16,6,46,4,"fromIndex"],[16,15,46,13],[16,18,46,16,"nativeMax"],[16,27,46,25],[16,28,46,26,"length"],[16,34,46,32],[16,37,46,35,"fromIndex"],[16,46,46,25],[16,48,46,46],[16,49,46,25],[16,50,46,4],[17,0,47,3],[19,0,48,2],[19,11,48,9,"isString"],[19,19,48,17],[19,20,48,18,"collection"],[19,30,48,17],[19,31,48,9],[19,34,49,7,"fromIndex"],[19,43,49,16],[19,47,49,20,"length"],[19,53,49,7],[19,57,49,30,"collection"],[19,67,49,40],[19,68,49,41,"indexOf"],[19,75,49,30],[19,76,49,49,"value"],[19,81,49,30],[19,83,49,56,"fromIndex"],[19,92,49,30],[19,96,49,69],[19,97,49,70],[19,98,48,9],[19,101,50,7],[19,102,50,8],[19,103,50,9,"length"],[19,109,50,7],[19,113,50,19,"baseIndexOf"],[19,124,50,30],[19,125,50,31,"collection"],[19,135,50,30],[19,137,50,43,"value"],[19,142,50,30],[19,144,50,50,"fromIndex"],[19,153,50,30],[19,154,50,19],[19,157,50,63],[19,158,50,64],[19,159,48,2],[20,0,51,1],[22,0,53,0,"module"],[22,2,53,0,"module"],[22,8,53,6],[22,9,53,7,"exports"],[22,16,53,0],[22,19,53,17,"includes"],[22,27,53,0]]},"type":"js/module"}]}