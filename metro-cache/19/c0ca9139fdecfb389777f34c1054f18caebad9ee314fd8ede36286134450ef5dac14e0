{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/types","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = populatePlaceholders;\n\n  var t = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"@babel/types\"));\n\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n\n    return cache;\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n\n    var cache = _getRequireWildcardCache();\n\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj.default = obj;\n\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n\n    return newObj;\n  }\n\n  function populatePlaceholders(metadata, replacements) {\n    var ast = t.cloneNode(metadata.ast);\n\n    if (replacements) {\n      metadata.placeholders.forEach(function (placeholder) {\n        if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n          var placeholderName = placeholder.name;\n          throw new Error(\"Error: No substitution given for \\\"\" + placeholderName + \"\\\". If this is not meant to be a\\n            placeholder you may want to consider passing one of the following options to @babel/template:\\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['\" + placeholderName + \"'])}\\n            - { placeholderPattern: /^\" + placeholderName + \"$/ }\");\n        }\n      });\n      Object.keys(replacements).forEach(function (key) {\n        if (!metadata.placeholderNames.has(key)) {\n          throw new Error(\"Unknown substitution \\\"\" + key + \"\\\" given\");\n        }\n      });\n    }\n\n    metadata.placeholders.slice().reverse().forEach(function (placeholder) {\n      try {\n        applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n      } catch (e) {\n        e.message = \"@babel/template placeholder \\\"\" + placeholder.name + \"\\\": \" + e.message;\n        throw e;\n      }\n    });\n    return ast;\n  }\n\n  function applyReplacement(placeholder, ast, replacement) {\n    if (placeholder.isDuplicate) {\n      if (Array.isArray(replacement)) {\n        replacement = replacement.map(function (node) {\n          return t.cloneNode(node);\n        });\n      } else if (typeof replacement === \"object\") {\n        replacement = t.cloneNode(replacement);\n      }\n    }\n\n    var _placeholder$resolve = placeholder.resolve(ast),\n        parent = _placeholder$resolve.parent,\n        key = _placeholder$resolve.key,\n        index = _placeholder$resolve.index;\n\n    if (placeholder.type === \"string\") {\n      if (typeof replacement === \"string\") {\n        replacement = t.stringLiteral(replacement);\n      }\n\n      if (!replacement || !t.isStringLiteral(replacement)) {\n        throw new Error(\"Expected string substitution\");\n      }\n    } else if (placeholder.type === \"statement\") {\n      if (index === undefined) {\n        if (!replacement) {\n          replacement = t.emptyStatement();\n        } else if (Array.isArray(replacement)) {\n          replacement = t.blockStatement(replacement);\n        } else if (typeof replacement === \"string\") {\n          replacement = t.expressionStatement(t.identifier(replacement));\n        } else if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      } else {\n        if (replacement && !Array.isArray(replacement)) {\n          if (typeof replacement === \"string\") {\n            replacement = t.identifier(replacement);\n          }\n\n          if (!t.isStatement(replacement)) {\n            replacement = t.expressionStatement(replacement);\n          }\n        }\n      }\n    } else if (placeholder.type === \"param\") {\n      if (typeof replacement === \"string\") {\n        replacement = t.identifier(replacement);\n      }\n\n      if (index === undefined) throw new Error(\"Assertion failure.\");\n    } else {\n      if (typeof replacement === \"string\") {\n        replacement = t.identifier(replacement);\n      }\n\n      if (Array.isArray(replacement)) {\n        throw new Error(\"Cannot replace single expression with an array.\");\n      }\n    }\n\n    if (index === undefined) {\n      t.validate(parent, key, replacement);\n      parent[key] = replacement;\n    } else {\n      var items = parent[key].slice();\n\n      if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n        if (replacement == null) {\n          items.splice(index, 1);\n        } else if (Array.isArray(replacement)) {\n          items.splice.apply(items, [index, 1].concat(_toConsumableArray(replacement)));\n        } else {\n          items[index] = replacement;\n        }\n      } else {\n        items[index] = replacement;\n      }\n\n      t.validate(parent, key, items);\n      parent[key] = items;\n    }\n  }\n});","map":[[2,0,1,0],[6,0,3,0,"Object"],[6,2,3,0,"Object"],[6,8,3,6],[6,9,3,7,"defineProperty"],[6,23,3,0],[6,24,3,22,"exports"],[6,31,3,0],[6,33,3,31],[6,45,3,0],[6,47,3,45],[7,0,4,2,"value"],[7,4,4,2,"value"],[7,9,4,7],[7,11,4,9],[8,0,3,45],[8,3,3,0],[9,0,6,0,"exports"],[9,2,6,0,"exports"],[9,9,6,7],[9,10,6,8,"default"],[9,17,6,0],[9,20,6,18,"populatePlaceholders"],[9,40,6,0],[11,0,8,0],[11,6,8,4,"t"],[11,7,8,5],[11,10,8,8,"_interopRequireWildcard"],[11,33,8,31],[11,34,8,32,"require"],[11,45,8,39],[11,80,8,31],[11,81,8,0],[13,0,10,0],[13,11,10,9,"_getRequireWildcardCache"],[13,35,10,0],[13,38,10,36],[14,0,10,38],[14,8,10,42],[14,15,10,49,"WeakMap"],[14,22,10,42],[14,27,10,61],[14,37,10,38],[14,39,10,73],[14,46,10,80],[14,50,10,73],[15,0,10,86],[15,8,10,90,"cache"],[15,13,10,95],[15,16,10,98],[15,20,10,102,"WeakMap"],[15,27,10,98],[15,29,10,86],[17,0,10,113,"_getRequireWildcardCache"],[17,4,10,113,"_getRequireWildcardCache"],[17,28,10,137],[17,31,10,140],[17,67,10,152],[18,0,10,154],[18,13,10,161,"cache"],[18,18,10,154],[19,0,10,169],[19,5,10,113],[21,0,10,171],[21,11,10,178,"cache"],[21,16,10,171],[22,0,10,186],[24,0,12,0],[24,11,12,9,"_interopRequireWildcard"],[24,34,12,0],[24,35,12,33,"obj"],[24,38,12,0],[24,40,12,38],[25,0,12,40],[25,8,12,44,"obj"],[25,11,12,47],[25,15,12,51,"obj"],[25,18,12,54],[25,19,12,55,"__esModule"],[25,29,12,40],[25,31,12,67],[26,0,12,69],[26,13,12,76,"obj"],[26,16,12,69],[27,0,12,82],[29,0,12,83],[29,8,12,87,"obj"],[29,11,12,90],[29,16,12,95],[29,20,12,87],[29,24,12,103],[29,31,12,110,"obj"],[29,34,12,103],[29,39,12,118],[29,47,12,103],[29,51,12,130],[29,58,12,137,"obj"],[29,61,12,130],[29,66,12,145],[29,76,12,83],[29,78,12,157],[30,0,12,159],[30,13,12,166],[31,0,12,168,"default"],[31,8,12,168,"default"],[31,15,12,175],[31,17,12,177,"obj"],[32,0,12,166],[32,7,12,159],[33,0,12,185],[35,0,12,186],[35,8,12,190,"cache"],[35,13,12,195],[35,16,12,198,"_getRequireWildcardCache"],[35,40,12,222],[35,42,12,186],[37,0,12,226],[37,8,12,230,"cache"],[37,13,12,235],[37,17,12,239,"cache"],[37,22,12,244],[37,23,12,245,"has"],[37,26,12,239],[37,27,12,249,"obj"],[37,30,12,239],[37,31,12,226],[37,33,12,255],[38,0,12,257],[38,13,12,264,"cache"],[38,18,12,269],[38,19,12,270,"get"],[38,22,12,264],[38,23,12,274,"obj"],[38,26,12,264],[38,27,12,257],[39,0,12,281],[41,0,12,282],[41,8,12,286,"newObj"],[41,14,12,292],[41,17,12,295],[41,19,12,282],[42,0,12,299],[42,8,12,303,"hasPropertyDescriptor"],[42,29,12,324],[42,32,12,327,"Object"],[42,38,12,333],[42,39,12,334,"defineProperty"],[42,53,12,327],[42,57,12,352,"Object"],[42,63,12,358],[42,64,12,359,"getOwnPropertyDescriptor"],[42,88,12,299],[44,0,12,385],[44,9,12,390],[44,13,12,394,"key"],[44,16,12,385],[44,20,12,401,"obj"],[44,23,12,385],[44,25,12,406],[45,0,12,408],[45,10,12,412,"Object"],[45,16,12,418],[45,17,12,419,"prototype"],[45,26,12,412],[45,27,12,429,"hasOwnProperty"],[45,41,12,412],[45,42,12,444,"call"],[45,46,12,412],[45,47,12,449,"obj"],[45,50,12,412],[45,52,12,454,"key"],[45,55,12,412],[45,56,12,408],[45,58,12,460],[46,0,12,462],[46,12,12,466,"desc"],[46,16,12,470],[46,19,12,473,"hasPropertyDescriptor"],[46,40,12,494],[46,43,12,497,"Object"],[46,49,12,503],[46,50,12,504,"getOwnPropertyDescriptor"],[46,74,12,497],[46,75,12,529,"obj"],[46,78,12,497],[46,80,12,534,"key"],[46,83,12,497],[46,84,12,494],[46,87,12,541],[46,91,12,462],[48,0,12,547],[48,12,12,551,"desc"],[48,16,12,555],[48,21,12,560,"desc"],[48,25,12,564],[48,26,12,565,"get"],[48,29,12,560],[48,33,12,572,"desc"],[48,37,12,576],[48,38,12,577,"set"],[48,41,12,555],[48,42,12,547],[48,44,12,583],[49,0,12,585,"Object"],[49,10,12,585,"Object"],[49,16,12,591],[49,17,12,592,"defineProperty"],[49,31,12,585],[49,32,12,607,"newObj"],[49,38,12,585],[49,40,12,615,"key"],[49,43,12,585],[49,45,12,620,"desc"],[49,49,12,585],[50,0,12,628],[50,9,12,547],[50,15,12,634],[51,0,12,636,"newObj"],[51,10,12,636,"newObj"],[51,16,12,642],[51,17,12,643,"key"],[51,20,12,642],[51,21,12,636],[51,24,12,650,"obj"],[51,27,12,653],[51,28,12,654,"key"],[51,31,12,653],[51,32,12,636],[52,0,12,661],[53,0,12,663],[54,0,12,665],[56,0,12,666,"newObj"],[56,4,12,666,"newObj"],[56,10,12,672],[56,11,12,673,"default"],[56,18,12,666],[56,21,12,683,"obj"],[56,24,12,666],[58,0,12,688],[58,8,12,692,"cache"],[58,13,12,688],[58,15,12,699],[59,0,12,701,"cache"],[59,6,12,701,"cache"],[59,11,12,706],[59,12,12,707,"set"],[59,15,12,701],[59,16,12,711,"obj"],[59,19,12,701],[59,21,12,716,"newObj"],[59,27,12,701],[60,0,12,726],[62,0,12,727],[62,11,12,734,"newObj"],[62,17,12,727],[63,0,12,743],[65,0,14,0],[65,11,14,9,"populatePlaceholders"],[65,31,14,0],[65,32,14,30,"metadata"],[65,40,14,0],[65,42,14,40,"replacements"],[65,54,14,0],[65,56,14,54],[66,0,15,2],[66,8,15,8,"ast"],[66,11,15,11],[66,14,15,14,"t"],[66,15,15,15],[66,16,15,16,"cloneNode"],[66,25,15,14],[66,26,15,26,"metadata"],[66,34,15,34],[66,35,15,35,"ast"],[66,38,15,14],[66,39,15,2],[68,0,17,2],[68,8,17,6,"replacements"],[68,20,17,2],[68,22,17,20],[69,0,18,4,"metadata"],[69,6,18,4,"metadata"],[69,14,18,12],[69,15,18,13,"placeholders"],[69,27,18,4],[69,28,18,26,"forEach"],[69,35,18,4],[69,36,18,34],[69,46,18,34,"placeholder"],[69,57,18,45],[69,59,18,49],[70,0,19,6],[70,12,19,10],[70,13,19,11,"Object"],[70,19,19,17],[70,20,19,18,"prototype"],[70,29,19,11],[70,30,19,28,"hasOwnProperty"],[70,44,19,11],[70,45,19,43,"call"],[70,49,19,11],[70,50,19,48,"replacements"],[70,62,19,11],[70,64,19,62,"placeholder"],[70,75,19,73],[70,76,19,74,"name"],[70,80,19,11],[70,81,19,6],[70,83,19,81],[71,0,20,8],[71,14,20,14,"placeholderName"],[71,29,20,29],[71,32,20,32,"placeholder"],[71,43,20,43],[71,44,20,44,"name"],[71,48,20,8],[72,0,21,8],[72,16,21,14],[72,20,21,18,"Error"],[72,25,21,14],[72,66,21,61,"placeholderName"],[72,81,21,14],[72,305,23,77,"placeholderName"],[72,320,21,14],[72,372,24,40,"placeholderName"],[72,387,21,14],[72,397,21,8],[73,0,25,7],[74,0,26,5],[74,7,18,4],[75,0,27,4,"Object"],[75,6,27,4,"Object"],[75,12,27,10],[75,13,27,11,"keys"],[75,17,27,4],[75,18,27,16,"replacements"],[75,30,27,4],[75,32,27,30,"forEach"],[75,39,27,4],[75,40,27,38],[75,50,27,38,"key"],[75,53,27,41],[75,55,27,45],[76,0,28,6],[76,12,28,10],[76,13,28,11,"metadata"],[76,21,28,19],[76,22,28,20,"placeholderNames"],[76,38,28,11],[76,39,28,37,"has"],[76,42,28,11],[76,43,28,41,"key"],[76,46,28,11],[76,47,28,6],[76,49,28,47],[77,0,29,8],[77,16,29,14],[77,20,29,18,"Error"],[77,25,29,14],[77,54,29,49,"key"],[77,57,29,14],[77,71,29,8],[78,0,30,7],[79,0,31,5],[79,7,27,4],[80,0,32,3],[82,0,34,2,"metadata"],[82,4,34,2,"metadata"],[82,12,34,10],[82,13,34,11,"placeholders"],[82,25,34,2],[82,26,34,24,"slice"],[82,31,34,2],[82,34,34,32,"reverse"],[82,41,34,2],[82,44,34,42,"forEach"],[82,51,34,2],[82,52,34,50],[82,62,34,50,"placeholder"],[82,73,34,61],[82,75,34,65],[83,0,35,4],[83,10,35,8],[84,0,36,6,"applyReplacement"],[84,8,36,6,"applyReplacement"],[84,24,36,22],[84,25,36,23,"placeholder"],[84,36,36,22],[84,38,36,36,"ast"],[84,41,36,22],[84,43,36,41,"replacements"],[84,55,36,53],[84,59,36,57,"replacements"],[84,71,36,69],[84,72,36,70,"placeholder"],[84,83,36,81],[84,84,36,82,"name"],[84,88,36,69],[84,89,36,41],[84,93,36,91],[84,97,36,22],[84,98,36,6],[85,0,37,5],[85,7,35,4],[85,8,37,6],[85,15,37,13,"e"],[85,16,37,6],[85,18,37,16],[86,0,38,6,"e"],[86,8,38,6,"e"],[86,9,38,7],[86,10,38,8,"message"],[86,17,38,6],[86,55,38,50,"placeholder"],[86,66,38,61],[86,67,38,62,"name"],[86,71,38,6],[86,83,38,72,"e"],[86,84,38,73],[86,85,38,74,"message"],[86,92,38,6],[87,0,39,6],[87,14,39,12,"e"],[87,15,39,6],[88,0,40,5],[89,0,41,3],[89,5,34,2],[90,0,42,2],[90,11,42,9,"ast"],[90,14,42,2],[91,0,43,1],[93,0,45,0],[93,11,45,9,"applyReplacement"],[93,27,45,0],[93,28,45,26,"placeholder"],[93,39,45,0],[93,41,45,39,"ast"],[93,44,45,0],[93,46,45,44,"replacement"],[93,57,45,0],[93,59,45,57],[94,0,46,2],[94,8,46,6,"placeholder"],[94,19,46,17],[94,20,46,18,"isDuplicate"],[94,31,46,2],[94,33,46,31],[95,0,47,4],[95,10,47,8,"Array"],[95,15,47,13],[95,16,47,14,"isArray"],[95,23,47,8],[95,24,47,22,"replacement"],[95,35,47,8],[95,36,47,4],[95,38,47,36],[96,0,48,6,"replacement"],[96,8,48,6,"replacement"],[96,19,48,17],[96,22,48,20,"replacement"],[96,33,48,31],[96,34,48,32,"map"],[96,37,48,20],[96,38,48,36],[96,48,48,36,"node"],[96,52,48,40],[97,0,48,40],[97,17,48,44,"t"],[97,18,48,45],[97,19,48,46,"cloneNode"],[97,28,48,44],[97,29,48,56,"node"],[97,33,48,44],[97,34,48,40],[98,0,48,40],[98,9,48,20],[98,10,48,6],[99,0,49,5],[99,7,47,4],[99,13,49,11],[99,17,49,15],[99,24,49,22,"replacement"],[99,35,49,15],[99,40,49,38],[99,48,49,11],[99,50,49,48],[100,0,50,6,"replacement"],[100,8,50,6,"replacement"],[100,19,50,17],[100,22,50,20,"t"],[100,23,50,21],[100,24,50,22,"cloneNode"],[100,33,50,20],[100,34,50,32,"replacement"],[100,45,50,20],[100,46,50,6],[101,0,51,5],[102,0,52,3],[104,0,45,57],[104,31,58,6,"placeholder"],[104,42,58,17],[104,43,58,18,"resolve"],[104,50,58,6],[104,51,58,26,"ast"],[104,54,58,6],[104,55,45,57],[105,0,45,57],[105,8,55,4,"parent"],[105,14,45,57],[105,38,55,4,"parent"],[105,44,45,57],[106,0,45,57],[106,8,56,4,"key"],[106,11,45,57],[106,35,56,4,"key"],[106,38,45,57],[107,0,45,57],[107,8,57,4,"index"],[107,13,45,57],[107,37,57,4,"index"],[107,42,45,57],[109,0,60,2],[109,8,60,6,"placeholder"],[109,19,60,17],[109,20,60,18,"type"],[109,24,60,6],[109,29,60,27],[109,37,60,2],[109,39,60,37],[110,0,61,4],[110,10,61,8],[110,17,61,15,"replacement"],[110,28,61,8],[110,33,61,31],[110,41,61,4],[110,43,61,41],[111,0,62,6,"replacement"],[111,8,62,6,"replacement"],[111,19,62,17],[111,22,62,20,"t"],[111,23,62,21],[111,24,62,22,"stringLiteral"],[111,37,62,20],[111,38,62,36,"replacement"],[111,49,62,20],[111,50,62,6],[112,0,63,5],[114,0,65,4],[114,10,65,8],[114,11,65,9,"replacement"],[114,22,65,8],[114,26,65,24],[114,27,65,25,"t"],[114,28,65,26],[114,29,65,27,"isStringLiteral"],[114,44,65,25],[114,45,65,43,"replacement"],[114,56,65,25],[114,57,65,4],[114,59,65,57],[115,0,66,6],[115,14,66,12],[115,18,66,16,"Error"],[115,23,66,12],[115,24,66,22],[115,54,66,12],[115,55,66,6],[116,0,67,5],[117,0,68,3],[117,5,60,2],[117,11,68,9],[117,15,68,13,"placeholder"],[117,26,68,24],[117,27,68,25,"type"],[117,31,68,13],[117,36,68,34],[117,47,68,9],[117,49,68,47],[118,0,69,4],[118,10,69,8,"index"],[118,15,69,13],[118,20,69,18,"undefined"],[118,29,69,4],[118,31,69,29],[119,0,70,6],[119,12,70,10],[119,13,70,11,"replacement"],[119,24,70,6],[119,26,70,24],[120,0,71,8,"replacement"],[120,10,71,8,"replacement"],[120,21,71,19],[120,24,71,22,"t"],[120,25,71,23],[120,26,71,24,"emptyStatement"],[120,40,71,22],[120,42,71,8],[121,0,72,7],[121,9,70,6],[121,15,72,13],[121,19,72,17,"Array"],[121,24,72,22],[121,25,72,23,"isArray"],[121,32,72,17],[121,33,72,31,"replacement"],[121,44,72,17],[121,45,72,13],[121,47,72,45],[122,0,73,8,"replacement"],[122,10,73,8,"replacement"],[122,21,73,19],[122,24,73,22,"t"],[122,25,73,23],[122,26,73,24,"blockStatement"],[122,40,73,22],[122,41,73,39,"replacement"],[122,52,73,22],[122,53,73,8],[123,0,74,7],[123,9,72,13],[123,15,74,13],[123,19,74,17],[123,26,74,24,"replacement"],[123,37,74,17],[123,42,74,40],[123,50,74,13],[123,52,74,50],[124,0,75,8,"replacement"],[124,10,75,8,"replacement"],[124,21,75,19],[124,24,75,22,"t"],[124,25,75,23],[124,26,75,24,"expressionStatement"],[124,45,75,22],[124,46,75,44,"t"],[124,47,75,45],[124,48,75,46,"identifier"],[124,58,75,44],[124,59,75,57,"replacement"],[124,70,75,44],[124,71,75,22],[124,72,75,8],[125,0,76,7],[125,9,74,13],[125,15,76,13],[125,19,76,17],[125,20,76,18,"t"],[125,21,76,19],[125,22,76,20,"isStatement"],[125,33,76,18],[125,34,76,32,"replacement"],[125,45,76,18],[125,46,76,13],[125,48,76,46],[126,0,77,8,"replacement"],[126,10,77,8,"replacement"],[126,21,77,19],[126,24,77,22,"t"],[126,25,77,23],[126,26,77,24,"expressionStatement"],[126,45,77,22],[126,46,77,44,"replacement"],[126,57,77,22],[126,58,77,8],[127,0,78,7],[128,0,79,5],[128,7,69,4],[128,13,79,11],[129,0,80,6],[129,12,80,10,"replacement"],[129,23,80,21],[129,27,80,25],[129,28,80,26,"Array"],[129,33,80,31],[129,34,80,32,"isArray"],[129,41,80,26],[129,42,80,40,"replacement"],[129,53,80,26],[129,54,80,6],[129,56,80,54],[130,0,81,8],[130,14,81,12],[130,21,81,19,"replacement"],[130,32,81,12],[130,37,81,35],[130,45,81,8],[130,47,81,45],[131,0,82,10,"replacement"],[131,12,82,10,"replacement"],[131,23,82,21],[131,26,82,24,"t"],[131,27,82,25],[131,28,82,26,"identifier"],[131,38,82,24],[131,39,82,37,"replacement"],[131,50,82,24],[131,51,82,10],[132,0,83,9],[134,0,85,8],[134,14,85,12],[134,15,85,13,"t"],[134,16,85,14],[134,17,85,15,"isStatement"],[134,28,85,13],[134,29,85,27,"replacement"],[134,40,85,13],[134,41,85,8],[134,43,85,41],[135,0,86,10,"replacement"],[135,12,86,10,"replacement"],[135,23,86,21],[135,26,86,24,"t"],[135,27,86,25],[135,28,86,26,"expressionStatement"],[135,47,86,24],[135,48,86,46,"replacement"],[135,59,86,24],[135,60,86,10],[136,0,87,9],[137,0,88,7],[138,0,89,5],[139,0,90,3],[139,5,68,9],[139,11,90,9],[139,15,90,13,"placeholder"],[139,26,90,24],[139,27,90,25,"type"],[139,31,90,13],[139,36,90,34],[139,43,90,9],[139,45,90,43],[140,0,91,4],[140,10,91,8],[140,17,91,15,"replacement"],[140,28,91,8],[140,33,91,31],[140,41,91,4],[140,43,91,41],[141,0,92,6,"replacement"],[141,8,92,6,"replacement"],[141,19,92,17],[141,22,92,20,"t"],[141,23,92,21],[141,24,92,22,"identifier"],[141,34,92,20],[141,35,92,33,"replacement"],[141,46,92,20],[141,47,92,6],[142,0,93,5],[144,0,95,4],[144,10,95,8,"index"],[144,15,95,13],[144,20,95,18,"undefined"],[144,29,95,4],[144,31,95,29],[144,37,95,35],[144,41,95,39,"Error"],[144,46,95,35],[144,47,95,45],[144,67,95,35],[144,68,95,29],[145,0,96,3],[145,5,90,9],[145,11,96,9],[146,0,97,4],[146,10,97,8],[146,17,97,15,"replacement"],[146,28,97,8],[146,33,97,31],[146,41,97,4],[146,43,97,41],[147,0,98,6,"replacement"],[147,8,98,6,"replacement"],[147,19,98,17],[147,22,98,20,"t"],[147,23,98,21],[147,24,98,22,"identifier"],[147,34,98,20],[147,35,98,33,"replacement"],[147,46,98,20],[147,47,98,6],[148,0,99,5],[150,0,101,4],[150,10,101,8,"Array"],[150,15,101,13],[150,16,101,14,"isArray"],[150,23,101,8],[150,24,101,22,"replacement"],[150,35,101,8],[150,36,101,4],[150,38,101,36],[151,0,102,6],[151,14,102,12],[151,18,102,16,"Error"],[151,23,102,12],[151,24,102,22],[151,73,102,12],[151,74,102,6],[152,0,103,5],[153,0,104,3],[155,0,106,2],[155,8,106,6,"index"],[155,13,106,11],[155,18,106,16,"undefined"],[155,27,106,2],[155,29,106,27],[156,0,107,4,"t"],[156,6,107,4,"t"],[156,7,107,5],[156,8,107,6,"validate"],[156,16,107,4],[156,17,107,15,"parent"],[156,23,107,4],[156,25,107,23,"key"],[156,28,107,4],[156,30,107,28,"replacement"],[156,41,107,4],[157,0,108,4,"parent"],[157,6,108,4,"parent"],[157,12,108,10],[157,13,108,11,"key"],[157,16,108,10],[157,17,108,4],[157,20,108,18,"replacement"],[157,31,108,4],[158,0,109,3],[158,5,106,2],[158,11,109,9],[159,0,110,4],[159,10,110,10,"items"],[159,15,110,15],[159,18,110,18,"parent"],[159,24,110,24],[159,25,110,25,"key"],[159,28,110,24],[159,29,110,18],[159,30,110,30,"slice"],[159,35,110,18],[159,37,110,4],[161,0,112,4],[161,10,112,8,"placeholder"],[161,21,112,19],[161,22,112,20,"type"],[161,26,112,8],[161,31,112,29],[161,42,112,8],[161,46,112,44,"placeholder"],[161,57,112,55],[161,58,112,56,"type"],[161,62,112,44],[161,67,112,65],[161,74,112,4],[161,76,112,74],[162,0,113,6],[162,12,113,10,"replacement"],[162,23,113,21],[162,27,113,25],[162,31,113,6],[162,33,113,31],[163,0,114,8,"items"],[163,10,114,8,"items"],[163,15,114,13],[163,16,114,14,"splice"],[163,22,114,8],[163,23,114,21,"index"],[163,28,114,8],[163,30,114,28],[163,31,114,8],[164,0,115,7],[164,9,113,6],[164,15,115,13],[164,19,115,17,"Array"],[164,24,115,22],[164,25,115,23,"isArray"],[164,32,115,17],[164,33,115,31,"replacement"],[164,44,115,17],[164,45,115,13],[164,47,115,45],[165,0,116,8,"items"],[165,10,116,8,"items"],[165,15,116,13],[165,16,116,14,"splice"],[165,22,116,8],[165,29,116,8,"items"],[165,34,116,13],[165,37,116,21,"index"],[165,42,116,13],[165,44,116,28],[165,45,116,13],[165,73,116,34,"replacement"],[165,84,116,13],[165,87,116,8],[166,0,117,7],[166,9,115,13],[166,15,117,13],[167,0,118,8,"items"],[167,10,118,8,"items"],[167,15,118,13],[167,16,118,14,"index"],[167,21,118,13],[167,22,118,8],[167,25,118,23,"replacement"],[167,36,118,8],[168,0,119,7],[169,0,120,5],[169,7,112,4],[169,13,120,11],[170,0,121,6,"items"],[170,8,121,6,"items"],[170,13,121,11],[170,14,121,12,"index"],[170,19,121,11],[170,20,121,6],[170,23,121,21,"replacement"],[170,34,121,6],[171,0,122,5],[173,0,124,4,"t"],[173,6,124,4,"t"],[173,7,124,5],[173,8,124,6,"validate"],[173,16,124,4],[173,17,124,15,"parent"],[173,23,124,4],[173,25,124,23,"key"],[173,28,124,4],[173,30,124,28,"items"],[173,35,124,4],[174,0,125,4,"parent"],[174,6,125,4,"parent"],[174,12,125,10],[174,13,125,11,"key"],[174,16,125,10],[174,17,125,4],[174,20,125,18,"items"],[174,25,125,4],[175,0,126,3],[176,0,127,1]]},"type":"js/module"}]}