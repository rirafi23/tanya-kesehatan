{"dependencies":[{"name":"../definitions","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = traverseFast;\n\n  var _definitions = _$$_REQUIRE(_dependencyMap[0], \"../definitions\");\n\n  function traverseFast(node, enter, opts) {\n    if (!node) return;\n    var keys = _definitions.VISITOR_KEYS[node.type];\n    if (!keys) return;\n    opts = opts || {};\n    enter(node, opts);\n\n    for (var _iterator = keys, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _key = _ref;\n      var _subNode = node[_key];\n\n      if (Array.isArray(_subNode)) {\n        for (var _iterator2 = _subNode, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n          }\n\n          var _node2 = _ref2;\n          traverseFast(_node2, enter, opts);\n        }\n      } else {\n        traverseFast(_subNode, enter, opts);\n      }\n    }\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"traverseFast"],[7,32,6,0],[9,0,8,0],[9,6,8,4,"_definitions"],[9,18,8,16],[9,21,8,19,"require"],[9,32,8,26],[9,69,8,0],[11,0,10,0],[11,11,10,9,"traverseFast"],[11,23,10,0],[11,24,10,22,"node"],[11,28,10,0],[11,30,10,28,"enter"],[11,35,10,0],[11,37,10,35,"opts"],[11,41,10,0],[11,43,10,41],[12,0,11,2],[12,8,11,6],[12,9,11,7,"node"],[12,13,11,2],[12,15,11,13],[13,0,12,2],[13,8,12,8,"keys"],[13,12,12,12],[13,15,12,15,"_definitions"],[13,27,12,27],[13,28,12,28,"VISITOR_KEYS"],[13,40,12,15],[13,41,12,41,"node"],[13,45,12,45],[13,46,12,46,"type"],[13,50,12,15],[13,51,12,2],[14,0,13,2],[14,8,13,6],[14,9,13,7,"keys"],[14,13,13,2],[14,15,13,13],[15,0,14,2,"opts"],[15,4,14,2,"opts"],[15,8,14,6],[15,11,14,9,"opts"],[15,15,14,13],[15,19,14,17],[15,21,14,2],[16,0,15,2,"enter"],[16,4,15,2,"enter"],[16,9,15,7],[16,10,15,8,"node"],[16,14,15,7],[16,16,15,14,"opts"],[16,20,15,7],[16,21,15,2],[18,0,17,2],[18,25,17,20,"keys"],[18,29,17,2],[18,189,17,26],[19,0,17,26],[21,0,17,26],[22,0,17,26],[23,0,17,26],[24,0,17,26],[25,0,17,26],[26,0,17,26],[27,0,17,26],[28,0,17,26],[30,0,17,26],[30,10,17,13,"key"],[30,14,17,26],[31,0,18,4],[31,10,18,10,"subNode"],[31,18,18,17],[31,21,18,20,"node"],[31,25,18,24],[31,26,18,25,"key"],[31,30,18,24],[31,31,18,4],[33,0,20,4],[33,10,20,8,"Array"],[33,15,20,13],[33,16,20,14,"isArray"],[33,23,20,8],[33,24,20,22,"subNode"],[33,32,20,8],[33,33,20,4],[33,35,20,32],[34,0,21,6],[34,30,21,25,"subNode"],[34,38,21,6],[34,205,21,34],[35,0,21,34],[37,0,21,34],[38,0,21,34],[39,0,21,34],[40,0,21,34],[41,0,21,34],[42,0,21,34],[43,0,21,34],[44,0,21,34],[46,0,21,34],[46,14,21,17,"node"],[46,20,21,34],[47,0,22,8,"traverseFast"],[47,10,22,8,"traverseFast"],[47,22,22,20],[47,23,22,21,"node"],[47,29,22,20],[47,31,22,27,"enter"],[47,36,22,20],[47,38,22,34,"opts"],[47,42,22,20],[47,43,22,8],[48,0,23,7],[49,0,24,5],[49,7,20,4],[49,13,24,11],[50,0,25,6,"traverseFast"],[50,8,25,6,"traverseFast"],[50,20,25,18],[50,21,25,19,"subNode"],[50,29,25,18],[50,31,25,28,"enter"],[50,36,25,18],[50,38,25,35,"opts"],[50,42,25,18],[50,43,25,6],[51,0,26,5],[52,0,27,3],[53,0,28,1]]},"type":"js/module"}]}