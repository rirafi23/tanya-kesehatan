{"dependencies":[{"name":"@babel/helper-get-function-arity","data":{"isAsync":false}},{"name":"@babel/template","data":{"isAsync":false}},{"name":"@babel/types","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _default;\n\n  var _helperGetFunctionArity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"@babel/helper-get-function-arity\"));\n\n  var _template = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/template\"));\n\n  var t = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2], \"@babel/types\"));\n\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n\n    return cache;\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n\n    var cache = _getRequireWildcardCache();\n\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj.default = obj;\n\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n\n    return newObj;\n  }\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var buildPropertyMethodAssignmentWrapper = (0, _template.default)(\"\\n  (function (FUNCTION_KEY) {\\n    function FUNCTION_ID() {\\n      return FUNCTION_KEY.apply(this, arguments);\\n    }\\n\\n    FUNCTION_ID.toString = function () {\\n      return FUNCTION_KEY.toString();\\n    }\\n\\n    return FUNCTION_ID;\\n  })(FUNCTION)\\n\");\n  var buildGeneratorPropertyMethodAssignmentWrapper = (0, _template.default)(\"\\n  (function (FUNCTION_KEY) {\\n    function* FUNCTION_ID() {\\n      return yield* FUNCTION_KEY.apply(this, arguments);\\n    }\\n\\n    FUNCTION_ID.toString = function () {\\n      return FUNCTION_KEY.toString();\\n    };\\n\\n    return FUNCTION_ID;\\n  })(FUNCTION)\\n\");\n  var visitor = {\n    \"ReferencedIdentifier|BindingIdentifier\": function ReferencedIdentifierBindingIdentifier(path, state) {\n      if (path.node.name !== state.name) return;\n      var localDeclar = path.scope.getBindingIdentifier(state.name);\n      if (localDeclar !== state.outerDeclar) return;\n      state.selfReference = true;\n      path.stop();\n    }\n  };\n\n  function getNameFromLiteralId(id) {\n    if (t.isNullLiteral(id)) {\n      return \"null\";\n    }\n\n    if (t.isRegExpLiteral(id)) {\n      return \"_\" + id.pattern + \"_\" + id.flags;\n    }\n\n    if (t.isTemplateLiteral(id)) {\n      return id.quasis.map(function (quasi) {\n        return quasi.value.raw;\n      }).join(\"\");\n    }\n\n    if (id.value !== undefined) {\n      return id.value + \"\";\n    }\n\n    return \"\";\n  }\n\n  function wrap(state, method, id, scope) {\n    if (state.selfReference) {\n      if (scope.hasBinding(id.name) && !scope.hasGlobal(id.name)) {\n        scope.rename(id.name);\n      } else {\n        if (!t.isFunction(method)) return;\n        var build = buildPropertyMethodAssignmentWrapper;\n\n        if (method.generator) {\n          build = buildGeneratorPropertyMethodAssignmentWrapper;\n        }\n\n        var template = build({\n          FUNCTION: method,\n          FUNCTION_ID: id,\n          FUNCTION_KEY: scope.generateUidIdentifier(id.name)\n        }).expression;\n        var params = template.callee.body.body[0].params;\n\n        for (var i = 0, len = (0, _helperGetFunctionArity.default)(method); i < len; i++) {\n          params.push(scope.generateUidIdentifier(\"x\"));\n        }\n\n        return template;\n      }\n    }\n\n    method.id = id;\n    scope.getProgramParent().references[id.name] = true;\n  }\n\n  function visit(node, name, scope) {\n    var state = {\n      selfAssignment: false,\n      selfReference: false,\n      outerDeclar: scope.getBindingIdentifier(name),\n      references: [],\n      name: name\n    };\n    var binding = scope.getOwnBinding(name);\n\n    if (binding) {\n      if (binding.kind === \"param\") {\n        state.selfReference = true;\n      } else {}\n    } else if (state.outerDeclar || scope.hasGlobal(name)) {\n      scope.traverse(node, visitor, state);\n    }\n\n    return state;\n  }\n\n  function _default(_ref) {\n    var node = _ref.node,\n        parent = _ref.parent,\n        scope = _ref.scope,\n        id = _ref.id;\n    var localBinding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (node.id) return;\n\n    if ((t.isObjectProperty(parent) || t.isObjectMethod(parent, {\n      kind: \"method\"\n    })) && (!parent.computed || t.isLiteral(parent.key))) {\n      id = parent.key;\n    } else if (t.isVariableDeclarator(parent)) {\n      id = parent.id;\n\n      if (t.isIdentifier(id) && !localBinding) {\n        var binding = scope.parent.getBinding(id.name);\n\n        if (binding && binding.constant && scope.getBinding(id.name) === binding) {\n          node.id = t.cloneNode(id);\n          node.id[t.NOT_LOCAL_BINDING] = true;\n          return;\n        }\n      }\n    } else if (t.isAssignmentExpression(parent)) {\n      id = parent.left;\n    } else if (!id) {\n      return;\n    }\n\n    var name;\n\n    if (id && t.isLiteral(id)) {\n      name = getNameFromLiteralId(id);\n    } else if (id && t.isIdentifier(id)) {\n      name = id.name;\n    }\n\n    if (name === undefined) {\n      return;\n    }\n\n    name = t.toBindingIdentifierName(name);\n    id = t.identifier(name);\n    id[t.NOT_LOCAL_BINDING] = true;\n    var state = visit(node, name, scope);\n    return wrap(state, node, id, scope) || node;\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"_default"],[7,28,6,0],[9,0,8,0],[9,6,8,4,"_helperGetFunctionArity"],[9,29,8,27],[9,32,8,30,"_interopRequireDefault"],[9,54,8,52],[9,55,8,53,"require"],[9,66,8,60],[9,121,8,52],[9,122,8,0],[11,0,10,0],[11,6,10,4,"_template"],[11,15,10,13],[11,18,10,16,"_interopRequireDefault"],[11,40,10,38],[11,41,10,39,"require"],[11,52,10,46],[11,90,10,38],[11,91,10,0],[13,0,12,0],[13,6,12,4,"t"],[13,7,12,5],[13,10,12,8,"_interopRequireWildcard"],[13,33,12,31],[13,34,12,32,"require"],[13,45,12,39],[13,80,12,31],[13,81,12,0],[15,0,14,0],[15,11,14,9,"_getRequireWildcardCache"],[15,35,14,0],[15,38,14,36],[16,0,14,38],[16,8,14,42],[16,15,14,49,"WeakMap"],[16,22,14,42],[16,27,14,61],[16,37,14,38],[16,39,14,73],[16,46,14,80],[16,50,14,73],[17,0,14,86],[17,8,14,90,"cache"],[17,13,14,95],[17,16,14,98],[17,20,14,102,"WeakMap"],[17,27,14,98],[17,29,14,86],[19,0,14,113,"_getRequireWildcardCache"],[19,4,14,113,"_getRequireWildcardCache"],[19,28,14,137],[19,31,14,140],[19,67,14,152],[20,0,14,154],[20,13,14,161,"cache"],[20,18,14,154],[21,0,14,169],[21,5,14,113],[23,0,14,171],[23,11,14,178,"cache"],[23,16,14,171],[24,0,14,186],[26,0,16,0],[26,11,16,9,"_interopRequireWildcard"],[26,34,16,0],[26,35,16,33,"obj"],[26,38,16,0],[26,40,16,38],[27,0,16,40],[27,8,16,44,"obj"],[27,11,16,47],[27,15,16,51,"obj"],[27,18,16,54],[27,19,16,55,"__esModule"],[27,29,16,40],[27,31,16,67],[28,0,16,69],[28,13,16,76,"obj"],[28,16,16,69],[29,0,16,82],[31,0,16,83],[31,8,16,87,"obj"],[31,11,16,90],[31,16,16,95],[31,20,16,87],[31,24,16,103],[31,31,16,110,"obj"],[31,34,16,103],[31,39,16,118],[31,47,16,103],[31,51,16,130],[31,58,16,137,"obj"],[31,61,16,130],[31,66,16,145],[31,76,16,83],[31,78,16,157],[32,0,16,159],[32,13,16,166],[33,0,16,168,"default"],[33,8,16,168,"default"],[33,15,16,175],[33,17,16,177,"obj"],[34,0,16,166],[34,7,16,159],[35,0,16,185],[37,0,16,186],[37,8,16,190,"cache"],[37,13,16,195],[37,16,16,198,"_getRequireWildcardCache"],[37,40,16,222],[37,42,16,186],[39,0,16,226],[39,8,16,230,"cache"],[39,13,16,235],[39,17,16,239,"cache"],[39,22,16,244],[39,23,16,245,"has"],[39,26,16,239],[39,27,16,249,"obj"],[39,30,16,239],[39,31,16,226],[39,33,16,255],[40,0,16,257],[40,13,16,264,"cache"],[40,18,16,269],[40,19,16,270,"get"],[40,22,16,264],[40,23,16,274,"obj"],[40,26,16,264],[40,27,16,257],[41,0,16,281],[43,0,16,282],[43,8,16,286,"newObj"],[43,14,16,292],[43,17,16,295],[43,19,16,282],[44,0,16,299],[44,8,16,303,"hasPropertyDescriptor"],[44,29,16,324],[44,32,16,327,"Object"],[44,38,16,333],[44,39,16,334,"defineProperty"],[44,53,16,327],[44,57,16,352,"Object"],[44,63,16,358],[44,64,16,359,"getOwnPropertyDescriptor"],[44,88,16,299],[46,0,16,385],[46,9,16,390],[46,13,16,394,"key"],[46,16,16,385],[46,20,16,401,"obj"],[46,23,16,385],[46,25,16,406],[47,0,16,408],[47,10,16,412,"Object"],[47,16,16,418],[47,17,16,419,"prototype"],[47,26,16,412],[47,27,16,429,"hasOwnProperty"],[47,41,16,412],[47,42,16,444,"call"],[47,46,16,412],[47,47,16,449,"obj"],[47,50,16,412],[47,52,16,454,"key"],[47,55,16,412],[47,56,16,408],[47,58,16,460],[48,0,16,462],[48,12,16,466,"desc"],[48,16,16,470],[48,19,16,473,"hasPropertyDescriptor"],[48,40,16,494],[48,43,16,497,"Object"],[48,49,16,503],[48,50,16,504,"getOwnPropertyDescriptor"],[48,74,16,497],[48,75,16,529,"obj"],[48,78,16,497],[48,80,16,534,"key"],[48,83,16,497],[48,84,16,494],[48,87,16,541],[48,91,16,462],[50,0,16,547],[50,12,16,551,"desc"],[50,16,16,555],[50,21,16,560,"desc"],[50,25,16,564],[50,26,16,565,"get"],[50,29,16,560],[50,33,16,572,"desc"],[50,37,16,576],[50,38,16,577,"set"],[50,41,16,555],[50,42,16,547],[50,44,16,583],[51,0,16,585,"Object"],[51,10,16,585,"Object"],[51,16,16,591],[51,17,16,592,"defineProperty"],[51,31,16,585],[51,32,16,607,"newObj"],[51,38,16,585],[51,40,16,615,"key"],[51,43,16,585],[51,45,16,620,"desc"],[51,49,16,585],[52,0,16,628],[52,9,16,547],[52,15,16,634],[53,0,16,636,"newObj"],[53,10,16,636,"newObj"],[53,16,16,642],[53,17,16,643,"key"],[53,20,16,642],[53,21,16,636],[53,24,16,650,"obj"],[53,27,16,653],[53,28,16,654,"key"],[53,31,16,653],[53,32,16,636],[54,0,16,661],[55,0,16,663],[56,0,16,665],[58,0,16,666,"newObj"],[58,4,16,666,"newObj"],[58,10,16,672],[58,11,16,673,"default"],[58,18,16,666],[58,21,16,683,"obj"],[58,24,16,666],[60,0,16,688],[60,8,16,692,"cache"],[60,13,16,688],[60,15,16,699],[61,0,16,701,"cache"],[61,6,16,701,"cache"],[61,11,16,706],[61,12,16,707,"set"],[61,15,16,701],[61,16,16,711,"obj"],[61,19,16,701],[61,21,16,716,"newObj"],[61,27,16,701],[62,0,16,726],[64,0,16,727],[64,11,16,734,"newObj"],[64,17,16,727],[65,0,16,743],[67,0,18,0],[67,11,18,9,"_interopRequireDefault"],[67,33,18,0],[67,34,18,32,"obj"],[67,37,18,0],[67,39,18,37],[68,0,18,39],[68,11,18,46,"obj"],[68,14,18,49],[68,18,18,53,"obj"],[68,21,18,56],[68,22,18,57,"__esModule"],[68,32,18,46],[68,35,18,70,"obj"],[68,38,18,46],[68,41,18,76],[69,0,18,78,"default"],[69,6,18,78,"default"],[69,13,18,85],[69,15,18,87,"obj"],[70,0,18,76],[70,5,18,39],[71,0,18,95],[73,0,20,0],[73,6,20,6,"buildPropertyMethodAssignmentWrapper"],[73,42,20,42],[73,45,20,45],[73,46,20,46],[73,49,20,49,"_template"],[73,58,20,58],[73,59,20,59,"default"],[73,66,20,45],[73,324,20,0],[74,0,33,0],[74,6,33,6,"buildGeneratorPropertyMethodAssignmentWrapper"],[74,51,33,51],[74,54,33,54],[74,55,33,55],[74,58,33,58,"_template"],[74,67,33,67],[74,68,33,68,"default"],[74,75,33,54],[74,342,33,0],[75,0,46,0],[75,6,46,6,"visitor"],[75,13,46,13],[75,16,46,16],[76,0,47,2],[76,44,46,16],[76,93,47,43,"path"],[76,97,46,16],[76,99,47,49,"state"],[76,104,46,16],[76,106,47,56],[77,0,48,4],[77,10,48,8,"path"],[77,14,48,12],[77,15,48,13,"node"],[77,19,48,8],[77,20,48,18,"name"],[77,24,48,8],[77,29,48,27,"state"],[77,34,48,32],[77,35,48,33,"name"],[77,39,48,4],[77,41,48,39],[78,0,49,4],[78,10,49,10,"localDeclar"],[78,21,49,21],[78,24,49,24,"path"],[78,28,49,28],[78,29,49,29,"scope"],[78,34,49,24],[78,35,49,35,"getBindingIdentifier"],[78,55,49,24],[78,56,49,56,"state"],[78,61,49,61],[78,62,49,62,"name"],[78,66,49,24],[78,67,49,4],[79,0,50,4],[79,10,50,8,"localDeclar"],[79,21,50,19],[79,26,50,24,"state"],[79,31,50,29],[79,32,50,30,"outerDeclar"],[79,43,50,4],[79,45,50,43],[80,0,51,4,"state"],[80,6,51,4,"state"],[80,11,51,9],[80,12,51,10,"selfReference"],[80,25,51,4],[80,28,51,26],[80,32,51,4],[81,0,52,4,"path"],[81,6,52,4,"path"],[81,10,52,8],[81,11,52,9,"stop"],[81,15,52,4],[82,0,53,3],[83,0,46,16],[83,3,46,0],[85,0,57,0],[85,11,57,9,"getNameFromLiteralId"],[85,31,57,0],[85,32,57,30,"id"],[85,34,57,0],[85,36,57,34],[86,0,58,2],[86,8,58,6,"t"],[86,9,58,7],[86,10,58,8,"isNullLiteral"],[86,23,58,6],[86,24,58,22,"id"],[86,26,58,6],[86,27,58,2],[86,29,58,27],[87,0,59,4],[87,13,59,11],[87,19,59,4],[88,0,60,3],[90,0,62,2],[90,8,62,6,"t"],[90,9,62,7],[90,10,62,8,"isRegExpLiteral"],[90,25,62,6],[90,26,62,24,"id"],[90,28,62,6],[90,29,62,2],[90,31,62,29],[91,0,63,4],[91,19,63,15,"id"],[91,21,63,17],[91,22,63,18,"pattern"],[91,29,63,4],[91,38,63,29,"id"],[91,40,63,31],[91,41,63,32,"flags"],[91,46,63,4],[92,0,64,3],[94,0,66,2],[94,8,66,6,"t"],[94,9,66,7],[94,10,66,8,"isTemplateLiteral"],[94,27,66,6],[94,28,66,26,"id"],[94,30,66,6],[94,31,66,2],[94,33,66,31],[95,0,67,4],[95,13,67,11,"id"],[95,15,67,13],[95,16,67,14,"quasis"],[95,22,67,11],[95,23,67,21,"map"],[95,26,67,11],[95,27,67,25],[95,37,67,25,"quasi"],[95,42,67,30],[96,0,67,30],[96,15,67,34,"quasi"],[96,20,67,39],[96,21,67,40,"value"],[96,26,67,34],[96,27,67,46,"raw"],[96,30,67,30],[97,0,67,30],[97,7,67,11],[97,9,67,51,"join"],[97,13,67,11],[97,14,67,56],[97,16,67,11],[97,17,67,4],[98,0,68,3],[100,0,70,2],[100,8,70,6,"id"],[100,10,70,8],[100,11,70,9,"value"],[100,16,70,6],[100,21,70,19,"undefined"],[100,30,70,2],[100,32,70,30],[101,0,71,4],[101,13,71,11,"id"],[101,15,71,13],[101,16,71,14,"value"],[101,21,71,11],[101,24,71,22],[101,26,71,4],[102,0,72,3],[104,0,74,2],[104,11,74,9],[104,13,74,2],[105,0,75,1],[107,0,77,0],[107,11,77,9,"wrap"],[107,15,77,0],[107,16,77,14,"state"],[107,21,77,0],[107,23,77,21,"method"],[107,29,77,0],[107,31,77,29,"id"],[107,33,77,0],[107,35,77,33,"scope"],[107,40,77,0],[107,42,77,40],[108,0,78,2],[108,8,78,6,"state"],[108,13,78,11],[108,14,78,12,"selfReference"],[108,27,78,2],[108,29,78,27],[109,0,79,4],[109,10,79,8,"scope"],[109,15,79,13],[109,16,79,14,"hasBinding"],[109,26,79,8],[109,27,79,25,"id"],[109,29,79,27],[109,30,79,28,"name"],[109,34,79,8],[109,39,79,37],[109,40,79,38,"scope"],[109,45,79,43],[109,46,79,44,"hasGlobal"],[109,55,79,38],[109,56,79,54,"id"],[109,58,79,56],[109,59,79,57,"name"],[109,63,79,38],[109,64,79,4],[109,66,79,64],[110,0,80,6,"scope"],[110,8,80,6,"scope"],[110,13,80,11],[110,14,80,12,"rename"],[110,20,80,6],[110,21,80,19,"id"],[110,23,80,21],[110,24,80,22,"name"],[110,28,80,6],[111,0,81,5],[111,7,79,4],[111,13,81,11],[112,0,82,6],[112,12,82,10],[112,13,82,11,"t"],[112,14,82,12],[112,15,82,13,"isFunction"],[112,25,82,11],[112,26,82,24,"method"],[112,32,82,11],[112,33,82,6],[112,35,82,33],[113,0,83,6],[113,12,83,10,"build"],[113,17,83,15],[113,20,83,18,"buildPropertyMethodAssignmentWrapper"],[113,56,83,6],[115,0,85,6],[115,12,85,10,"method"],[115,18,85,16],[115,19,85,17,"generator"],[115,28,85,6],[115,30,85,28],[116,0,86,8,"build"],[116,10,86,8,"build"],[116,15,86,13],[116,18,86,16,"buildGeneratorPropertyMethodAssignmentWrapper"],[116,63,86,8],[117,0,87,7],[119,0,89,6],[119,12,89,12,"template"],[119,20,89,20],[119,23,89,23,"build"],[119,28,89,28],[119,29,89,29],[120,0,90,8,"FUNCTION"],[120,10,90,8,"FUNCTION"],[120,18,90,16],[120,20,90,18,"method"],[120,26,89,29],[121,0,91,8,"FUNCTION_ID"],[121,10,91,8,"FUNCTION_ID"],[121,21,91,19],[121,23,91,21,"id"],[121,25,89,29],[122,0,92,8,"FUNCTION_KEY"],[122,10,92,8,"FUNCTION_KEY"],[122,22,92,20],[122,24,92,22,"scope"],[122,29,92,27],[122,30,92,28,"generateUidIdentifier"],[122,51,92,22],[122,52,92,50,"id"],[122,54,92,52],[122,55,92,53,"name"],[122,59,92,22],[123,0,89,29],[123,9,89,28],[123,10,89,23],[123,11,93,9,"expression"],[123,21,89,6],[124,0,94,6],[124,12,94,12,"params"],[124,18,94,18],[124,21,94,21,"template"],[124,29,94,29],[124,30,94,30,"callee"],[124,36,94,21],[124,37,94,37,"body"],[124,41,94,21],[124,42,94,42,"body"],[124,46,94,21],[124,47,94,47],[124,48,94,21],[124,50,94,50,"params"],[124,56,94,6],[126,0,96,6],[126,13,96,11],[126,17,96,15,"i"],[126,18,96,16],[126,21,96,19],[126,22,96,11],[126,24,96,22,"len"],[126,27,96,25],[126,30,96,28],[126,31,96,29],[126,34,96,32,"_helperGetFunctionArity"],[126,57,96,55],[126,58,96,56,"default"],[126,65,96,28],[126,67,96,65,"method"],[126,73,96,28],[126,74,96,6],[126,76,96,74,"i"],[126,77,96,75],[126,80,96,78,"len"],[126,83,96,6],[126,85,96,83,"i"],[126,86,96,84],[126,88,96,6],[126,90,96,88],[127,0,97,8,"params"],[127,10,97,8,"params"],[127,16,97,14],[127,17,97,15,"push"],[127,21,97,8],[127,22,97,20,"scope"],[127,27,97,25],[127,28,97,26,"generateUidIdentifier"],[127,49,97,20],[127,50,97,48],[127,53,97,20],[127,54,97,8],[128,0,98,7],[130,0,100,6],[130,15,100,13,"template"],[130,23,100,6],[131,0,101,5],[132,0,102,3],[134,0,104,2,"method"],[134,4,104,2,"method"],[134,10,104,8],[134,11,104,9,"id"],[134,13,104,2],[134,16,104,14,"id"],[134,18,104,2],[135,0,105,2,"scope"],[135,4,105,2,"scope"],[135,9,105,7],[135,10,105,8,"getProgramParent"],[135,26,105,2],[135,29,105,27,"references"],[135,39,105,2],[135,40,105,38,"id"],[135,42,105,40],[135,43,105,41,"name"],[135,47,105,2],[135,51,105,49],[135,55,105,2],[136,0,106,1],[138,0,108,0],[138,11,108,9,"visit"],[138,16,108,0],[138,17,108,15,"node"],[138,21,108,0],[138,23,108,21,"name"],[138,27,108,0],[138,29,108,27,"scope"],[138,34,108,0],[138,36,108,34],[139,0,109,2],[139,8,109,8,"state"],[139,13,109,13],[139,16,109,16],[140,0,110,4,"selfAssignment"],[140,6,110,4,"selfAssignment"],[140,20,110,18],[140,22,110,20],[140,27,109,16],[141,0,111,4,"selfReference"],[141,6,111,4,"selfReference"],[141,19,111,17],[141,21,111,19],[141,26,109,16],[142,0,112,4,"outerDeclar"],[142,6,112,4,"outerDeclar"],[142,17,112,15],[142,19,112,17,"scope"],[142,24,112,22],[142,25,112,23,"getBindingIdentifier"],[142,45,112,17],[142,46,112,44,"name"],[142,50,112,17],[142,51,109,16],[143,0,113,4,"references"],[143,6,113,4,"references"],[143,16,113,14],[143,18,113,16],[143,20,109,16],[144,0,114,4,"name"],[144,6,114,4,"name"],[144,10,114,8],[144,12,114,10,"name"],[145,0,109,16],[145,5,109,2],[146,0,116,2],[146,8,116,8,"binding"],[146,15,116,15],[146,18,116,18,"scope"],[146,23,116,23],[146,24,116,24,"getOwnBinding"],[146,37,116,18],[146,38,116,38,"name"],[146,42,116,18],[146,43,116,2],[148,0,118,2],[148,8,118,6,"binding"],[148,15,118,2],[148,17,118,15],[149,0,119,4],[149,10,119,8,"binding"],[149,17,119,15],[149,18,119,16,"kind"],[149,22,119,8],[149,27,119,25],[149,34,119,4],[149,36,119,34],[150,0,120,6,"state"],[150,8,120,6,"state"],[150,13,120,11],[150,14,120,12,"selfReference"],[150,27,120,6],[150,30,120,28],[150,34,120,6],[151,0,121,5],[151,7,119,4],[151,13,121,11],[151,14,121,13],[152,0,122,3],[152,5,118,2],[152,11,122,9],[152,15,122,13,"state"],[152,20,122,18],[152,21,122,19,"outerDeclar"],[152,32,122,13],[152,36,122,34,"scope"],[152,41,122,39],[152,42,122,40,"hasGlobal"],[152,51,122,34],[152,52,122,50,"name"],[152,56,122,34],[152,57,122,9],[152,59,122,57],[153,0,123,4,"scope"],[153,6,123,4,"scope"],[153,11,123,9],[153,12,123,10,"traverse"],[153,20,123,4],[153,21,123,19,"node"],[153,25,123,4],[153,27,123,25,"visitor"],[153,34,123,4],[153,36,123,34,"state"],[153,41,123,4],[154,0,124,3],[156,0,126,2],[156,11,126,9,"state"],[156,16,126,2],[157,0,127,1],[159,0,129,0],[159,11,129,9,"_default"],[159,19,129,0],[159,26,134,25],[160,0,134,25],[160,8,130,2,"node"],[160,12,134,25],[160,20,130,2,"node"],[160,24,134,25],[161,0,134,25],[161,8,131,2,"parent"],[161,14,134,25],[161,22,131,2,"parent"],[161,28,134,25],[162,0,134,25],[162,8,132,2,"scope"],[162,13,134,25],[162,21,132,2,"scope"],[162,26,134,25],[163,0,134,25],[163,8,133,2,"id"],[163,10,134,25],[163,18,133,2,"id"],[163,20,134,25],[164,0,134,25],[164,8,134,3,"localBinding"],[164,20,134,25],[164,91,134,18],[164,96,134,25],[165,0,135,2],[165,8,135,6,"node"],[165,12,135,10],[165,13,135,11,"id"],[165,15,135,2],[165,17,135,15],[167,0,137,2],[167,8,137,6],[167,9,137,7,"t"],[167,10,137,8],[167,11,137,9,"isObjectProperty"],[167,27,137,7],[167,28,137,26,"parent"],[167,34,137,7],[167,39,137,37,"t"],[167,40,137,38],[167,41,137,39,"isObjectMethod"],[167,55,137,37],[167,56,137,54,"parent"],[167,62,137,37],[167,64,137,62],[168,0,138,4,"kind"],[168,6,138,4,"kind"],[168,10,138,8],[168,12,138,10],[169,0,137,62],[169,5,137,37],[169,6,137,6],[169,12,139,10],[169,13,139,11,"parent"],[169,19,139,17],[169,20,139,18,"computed"],[169,28,139,10],[169,32,139,30,"t"],[169,33,139,31],[169,34,139,32,"isLiteral"],[169,43,139,30],[169,44,139,42,"parent"],[169,50,139,48],[169,51,139,49,"key"],[169,54,139,30],[169,55,137,6],[169,56,137,2],[169,58,139,56],[170,0,140,4,"id"],[170,6,140,4,"id"],[170,8,140,6],[170,11,140,9,"parent"],[170,17,140,15],[170,18,140,16,"key"],[170,21,140,4],[171,0,141,3],[171,5,137,2],[171,11,141,9],[171,15,141,13,"t"],[171,16,141,14],[171,17,141,15,"isVariableDeclarator"],[171,37,141,13],[171,38,141,36,"parent"],[171,44,141,13],[171,45,141,9],[171,47,141,45],[172,0,142,4,"id"],[172,6,142,4,"id"],[172,8,142,6],[172,11,142,9,"parent"],[172,17,142,15],[172,18,142,16,"id"],[172,20,142,4],[174,0,144,4],[174,10,144,8,"t"],[174,11,144,9],[174,12,144,10,"isIdentifier"],[174,24,144,8],[174,25,144,23,"id"],[174,27,144,8],[174,32,144,30],[174,33,144,31,"localBinding"],[174,45,144,4],[174,47,144,45],[175,0,145,6],[175,12,145,12,"binding"],[175,19,145,19],[175,22,145,22,"scope"],[175,27,145,27],[175,28,145,28,"parent"],[175,34,145,22],[175,35,145,35,"getBinding"],[175,45,145,22],[175,46,145,46,"id"],[175,48,145,48],[175,49,145,49,"name"],[175,53,145,22],[175,54,145,6],[177,0,147,6],[177,12,147,10,"binding"],[177,19,147,17],[177,23,147,21,"binding"],[177,30,147,28],[177,31,147,29,"constant"],[177,39,147,10],[177,43,147,41,"scope"],[177,48,147,46],[177,49,147,47,"getBinding"],[177,59,147,41],[177,60,147,58,"id"],[177,62,147,60],[177,63,147,61,"name"],[177,67,147,41],[177,73,147,71,"binding"],[177,80,147,6],[177,82,147,80],[178,0,148,8,"node"],[178,10,148,8,"node"],[178,14,148,12],[178,15,148,13,"id"],[178,17,148,8],[178,20,148,18,"t"],[178,21,148,19],[178,22,148,20,"cloneNode"],[178,31,148,18],[178,32,148,30,"id"],[178,34,148,18],[178,35,148,8],[179,0,149,8,"node"],[179,10,149,8,"node"],[179,14,149,12],[179,15,149,13,"id"],[179,17,149,8],[179,18,149,16,"t"],[179,19,149,17],[179,20,149,18,"NOT_LOCAL_BINDING"],[179,37,149,8],[179,41,149,39],[179,45,149,8],[180,0,150,8],[181,0,151,7],[182,0,152,5],[183,0,153,3],[183,5,141,9],[183,11,153,9],[183,15,153,13,"t"],[183,16,153,14],[183,17,153,15,"isAssignmentExpression"],[183,39,153,13],[183,40,153,38,"parent"],[183,46,153,13],[183,47,153,9],[183,49,153,47],[184,0,154,4,"id"],[184,6,154,4,"id"],[184,8,154,6],[184,11,154,9,"parent"],[184,17,154,15],[184,18,154,16,"left"],[184,22,154,4],[185,0,155,3],[185,5,153,9],[185,11,155,9],[185,15,155,13],[185,16,155,14,"id"],[185,18,155,9],[185,20,155,18],[186,0,156,4],[187,0,157,3],[189,0,159,2],[189,8,159,6,"name"],[189,12,159,2],[191,0,161,2],[191,8,161,6,"id"],[191,10,161,8],[191,14,161,12,"t"],[191,15,161,13],[191,16,161,14,"isLiteral"],[191,25,161,12],[191,26,161,24,"id"],[191,28,161,12],[191,29,161,2],[191,31,161,29],[192,0,162,4,"name"],[192,6,162,4,"name"],[192,10,162,8],[192,13,162,11,"getNameFromLiteralId"],[192,33,162,31],[192,34,162,32,"id"],[192,36,162,31],[192,37,162,4],[193,0,163,3],[193,5,161,2],[193,11,163,9],[193,15,163,13,"id"],[193,17,163,15],[193,21,163,19,"t"],[193,22,163,20],[193,23,163,21,"isIdentifier"],[193,35,163,19],[193,36,163,34,"id"],[193,38,163,19],[193,39,163,9],[193,41,163,39],[194,0,164,4,"name"],[194,6,164,4,"name"],[194,10,164,8],[194,13,164,11,"id"],[194,15,164,13],[194,16,164,14,"name"],[194,20,164,4],[195,0,165,3],[197,0,167,2],[197,8,167,6,"name"],[197,12,167,10],[197,17,167,15,"undefined"],[197,26,167,2],[197,28,167,26],[198,0,168,4],[199,0,169,3],[201,0,171,2,"name"],[201,4,171,2,"name"],[201,8,171,6],[201,11,171,9,"t"],[201,12,171,10],[201,13,171,11,"toBindingIdentifierName"],[201,36,171,9],[201,37,171,35,"name"],[201,41,171,9],[201,42,171,2],[202,0,172,2,"id"],[202,4,172,2,"id"],[202,6,172,4],[202,9,172,7,"t"],[202,10,172,8],[202,11,172,9,"identifier"],[202,21,172,7],[202,22,172,20,"name"],[202,26,172,7],[202,27,172,2],[203,0,173,2,"id"],[203,4,173,2,"id"],[203,6,173,4],[203,7,173,5,"t"],[203,8,173,6],[203,9,173,7,"NOT_LOCAL_BINDING"],[203,26,173,4],[203,27,173,2],[203,30,173,28],[203,34,173,2],[204,0,174,2],[204,8,174,8,"state"],[204,13,174,13],[204,16,174,16,"visit"],[204,21,174,21],[204,22,174,22,"node"],[204,26,174,21],[204,28,174,28,"name"],[204,32,174,21],[204,34,174,34,"scope"],[204,39,174,21],[204,40,174,2],[205,0,175,2],[205,11,175,9,"wrap"],[205,15,175,13],[205,16,175,14,"state"],[205,21,175,13],[205,23,175,21,"node"],[205,27,175,13],[205,29,175,27,"id"],[205,31,175,13],[205,33,175,31,"scope"],[205,38,175,13],[205,39,175,9],[205,43,175,41,"node"],[205,47,175,2],[206,0,176,1]]},"type":"js/module"}]}