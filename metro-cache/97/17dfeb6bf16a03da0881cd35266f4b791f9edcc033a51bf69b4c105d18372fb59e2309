{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _extends = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.merge = merge;\n  exports.validate = validate;\n  exports.normalizeReplacements = normalizeReplacements;\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function merge(a, b) {\n    var _b$placeholderWhiteli = b.placeholderWhitelist,\n        placeholderWhitelist = _b$placeholderWhiteli === void 0 ? a.placeholderWhitelist : _b$placeholderWhiteli,\n        _b$placeholderPattern = b.placeholderPattern,\n        placeholderPattern = _b$placeholderPattern === void 0 ? a.placeholderPattern : _b$placeholderPattern,\n        _b$preserveComments = b.preserveComments,\n        preserveComments = _b$preserveComments === void 0 ? a.preserveComments : _b$preserveComments,\n        _b$syntacticPlacehold = b.syntacticPlaceholders,\n        syntacticPlaceholders = _b$syntacticPlacehold === void 0 ? a.syntacticPlaceholders : _b$syntacticPlacehold;\n    return {\n      parser: _extends({}, a.parser, {}, b.parser),\n      placeholderWhitelist: placeholderWhitelist,\n      placeholderPattern: placeholderPattern,\n      preserveComments: preserveComments,\n      syntacticPlaceholders: syntacticPlaceholders\n    };\n  }\n\n  function validate(opts) {\n    if (opts != null && typeof opts !== \"object\") {\n      throw new Error(\"Unknown template options.\");\n    }\n\n    var _ref = opts || {},\n        placeholderWhitelist = _ref.placeholderWhitelist,\n        placeholderPattern = _ref.placeholderPattern,\n        preserveComments = _ref.preserveComments,\n        syntacticPlaceholders = _ref.syntacticPlaceholders,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n    if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n      throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n    }\n\n    if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n      throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n    }\n\n    if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n      throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n    }\n\n    if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n      throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n    }\n\n    if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n      throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n    }\n\n    return {\n      parser: parser,\n      placeholderWhitelist: placeholderWhitelist || undefined,\n      placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n      preserveComments: preserveComments == null ? false : preserveComments,\n      syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n    };\n  }\n\n  function normalizeReplacements(replacements) {\n    if (Array.isArray(replacements)) {\n      return replacements.reduce(function (acc, replacement, i) {\n        acc[\"$\" + i] = replacement;\n        return acc;\n      }, {});\n    } else if (typeof replacements === \"object\" || replacements == null) {\n      return replacements || undefined;\n    }\n\n    throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n  }\n});","map":[[2,0,1,0],[6,0,3,0,"Object"],[6,2,3,0,"Object"],[6,8,3,6],[6,9,3,7,"defineProperty"],[6,23,3,0],[6,24,3,22,"exports"],[6,31,3,0],[6,33,3,31],[6,45,3,0],[6,47,3,45],[7,0,4,2,"value"],[7,4,4,2,"value"],[7,9,4,7],[7,11,4,9],[8,0,3,45],[8,3,3,0],[9,0,6,0,"exports"],[9,2,6,0,"exports"],[9,9,6,7],[9,10,6,8,"merge"],[9,15,6,0],[9,18,6,16,"merge"],[9,23,6,0],[10,0,7,0,"exports"],[10,2,7,0,"exports"],[10,9,7,7],[10,10,7,8,"validate"],[10,18,7,0],[10,21,7,19,"validate"],[10,29,7,0],[11,0,8,0,"exports"],[11,2,8,0,"exports"],[11,9,8,7],[11,10,8,8,"normalizeReplacements"],[11,31,8,0],[11,34,8,32,"normalizeReplacements"],[11,55,8,0],[13,0,10,0],[13,11,10,9,"_objectWithoutPropertiesLoose"],[13,40,10,0],[13,41,10,39,"source"],[13,47,10,0],[13,49,10,47,"excluded"],[13,57,10,0],[13,59,10,57],[14,0,10,59],[14,8,10,63,"source"],[14,14,10,69],[14,18,10,73],[14,22,10,59],[14,24,10,79],[14,31,10,86],[14,33,10,79],[15,0,10,90],[15,8,10,94,"target"],[15,14,10,100],[15,17,10,103],[15,19,10,90],[16,0,10,107],[16,8,10,111,"sourceKeys"],[16,18,10,121],[16,21,10,124,"Object"],[16,27,10,130],[16,28,10,131,"keys"],[16,32,10,124],[16,33,10,136,"source"],[16,39,10,124],[16,40,10,107],[17,0,10,145],[17,8,10,149,"key"],[17,11,10,145],[17,13,10,154,"i"],[17,14,10,145],[19,0,10,157],[19,9,10,162,"i"],[19,10,10,163],[19,13,10,166],[19,14,10,157],[19,16,10,169,"i"],[19,17,10,170],[19,20,10,173,"sourceKeys"],[19,30,10,183],[19,31,10,184,"length"],[19,37,10,157],[19,39,10,192,"i"],[19,40,10,193],[19,42,10,157],[19,44,10,197],[20,0,10,199,"key"],[20,6,10,199,"key"],[20,9,10,202],[20,12,10,205,"sourceKeys"],[20,22,10,215],[20,23,10,216,"i"],[20,24,10,215],[20,25,10,199],[21,0,10,220],[21,10,10,224,"excluded"],[21,18,10,232],[21,19,10,233,"indexOf"],[21,26,10,224],[21,27,10,241,"key"],[21,30,10,224],[21,35,10,249],[21,36,10,220],[21,38,10,252],[22,0,10,262,"target"],[22,6,10,262,"target"],[22,12,10,268],[22,13,10,269,"key"],[22,16,10,268],[22,17,10,262],[22,20,10,276,"source"],[22,26,10,282],[22,27,10,283,"key"],[22,30,10,282],[22,31,10,262],[23,0,10,290],[25,0,10,291],[25,11,10,298,"target"],[25,17,10,291],[26,0,10,307],[28,0,12,0],[28,11,12,9,"merge"],[28,16,12,0],[28,17,12,15,"a"],[28,18,12,0],[28,20,12,18,"b"],[28,21,12,0],[28,23,12,21],[29,0,12,21],[29,32,18,6,"b"],[29,33,12,21],[29,34,14,4,"placeholderWhitelist"],[29,54,12,21],[30,0,12,21],[30,8,14,4,"placeholderWhitelist"],[30,28,12,21],[30,66,14,27,"a"],[30,67,14,28],[30,68,14,29,"placeholderWhitelist"],[30,88,12,21],[31,0,12,21],[31,32,18,6,"b"],[31,33,12,21],[31,34,15,4,"placeholderPattern"],[31,52,12,21],[32,0,12,21],[32,8,15,4,"placeholderPattern"],[32,26,12,21],[32,64,15,25,"a"],[32,65,15,26],[32,66,15,27,"placeholderPattern"],[32,84,12,21],[33,0,12,21],[33,30,18,6,"b"],[33,31,12,21],[33,32,16,4,"preserveComments"],[33,48,12,21],[34,0,12,21],[34,8,16,4,"preserveComments"],[34,24,12,21],[34,60,16,23,"a"],[34,61,16,24],[34,62,16,25,"preserveComments"],[34,78,12,21],[35,0,12,21],[35,32,18,6,"b"],[35,33,12,21],[35,34,17,4,"syntacticPlaceholders"],[35,55,12,21],[36,0,12,21],[36,8,17,4,"syntacticPlaceholders"],[36,29,12,21],[36,67,17,28,"a"],[36,68,17,29],[36,69,17,30,"syntacticPlaceholders"],[36,90,12,21],[37,0,19,2],[37,11,19,9],[38,0,20,4,"parser"],[38,6,20,4,"parser"],[38,12,20,10],[38,14,20,12],[38,23,20,26],[38,25,20,12],[38,27,20,30,"a"],[38,28,20,31],[38,29,20,32,"parser"],[38,35,20,12],[38,37,20,40],[38,39,20,12],[38,41,20,44,"b"],[38,42,20,45],[38,43,20,46,"parser"],[38,49,20,12],[38,50,19,9],[39,0,21,4,"placeholderWhitelist"],[39,6,21,4,"placeholderWhitelist"],[39,26,21,24],[39,28,21,4,"placeholderWhitelist"],[39,48,19,9],[40,0,22,4,"placeholderPattern"],[40,6,22,4,"placeholderPattern"],[40,24,22,22],[40,26,22,4,"placeholderPattern"],[40,44,19,9],[41,0,23,4,"preserveComments"],[41,6,23,4,"preserveComments"],[41,22,23,20],[41,24,23,4,"preserveComments"],[41,40,19,9],[42,0,24,4,"syntacticPlaceholders"],[42,6,24,4,"syntacticPlaceholders"],[42,27,24,25],[42,29,24,4,"syntacticPlaceholders"],[43,0,19,9],[43,5,19,2],[44,0,26,1],[46,0,28,0],[46,11,28,9,"validate"],[46,19,28,0],[46,20,28,18,"opts"],[46,24,28,0],[46,26,28,24],[47,0,29,2],[47,8,29,6,"opts"],[47,12,29,10],[47,16,29,14],[47,20,29,6],[47,24,29,22],[47,31,29,29,"opts"],[47,35,29,22],[47,40,29,38],[47,48,29,2],[47,50,29,48],[48,0,30,4],[48,12,30,10],[48,16,30,14,"Error"],[48,21,30,10],[48,22,30,20],[48,49,30,10],[48,50,30,4],[49,0,31,3],[51,0,33,8],[51,8,33,8,"_ref"],[51,12,33,12],[51,15,33,15,"opts"],[51,19,33,19],[51,23,33,23],[51,25,33,8],[52,0,33,8],[52,8,35,4,"placeholderWhitelist"],[52,28,33,8],[52,31,39,6,"_ref"],[52,35,33,8],[52,36,35,4,"placeholderWhitelist"],[52,56,33,8],[53,0,33,8],[53,8,36,4,"placeholderPattern"],[53,26,33,8],[53,29,39,6,"_ref"],[53,33,33,8],[53,34,36,4,"placeholderPattern"],[53,52,33,8],[54,0,33,8],[54,8,37,4,"preserveComments"],[54,24,33,8],[54,27,39,6,"_ref"],[54,31,33,8],[54,32,37,4,"preserveComments"],[54,48,33,8],[55,0,33,8],[55,8,38,4,"syntacticPlaceholders"],[55,29,33,8],[55,32,39,6,"_ref"],[55,36,33,8],[55,37,38,4,"syntacticPlaceholders"],[55,58,33,8],[56,0,33,8],[56,8,40,8,"parser"],[56,14,33,8],[56,17,40,17,"_objectWithoutPropertiesLoose"],[56,46,40,46],[56,47,40,47,"_ref"],[56,51,40,46],[56,53,40,53],[56,54,40,54],[56,76,40,53],[56,78,40,78],[56,98,40,53],[56,100,40,100],[56,118,40,53],[56,120,40,120],[56,143,40,53],[56,144,40,46],[56,145,33,8],[58,0,42,2],[58,8,42,6,"placeholderWhitelist"],[58,28,42,26],[58,32,42,30],[58,36,42,6],[58,40,42,38],[58,42,42,40,"placeholderWhitelist"],[58,62,42,60],[58,74,42,72,"Set"],[58,77,42,38],[58,78,42,2],[58,80,42,78],[59,0,43,4],[59,12,43,10],[59,16,43,14,"Error"],[59,21,43,10],[59,22,43,20],[59,81,43,10],[59,82,43,4],[60,0,44,3],[62,0,46,2],[62,8,46,6,"placeholderPattern"],[62,26,46,24],[62,30,46,28],[62,34,46,6],[62,38,46,36],[62,40,46,38,"placeholderPattern"],[62,58,46,56],[62,70,46,68,"RegExp"],[62,76,46,36],[62,77,46,6],[62,81,46,79,"placeholderPattern"],[62,99,46,97],[62,104,46,102],[62,109,46,2],[62,111,46,109],[63,0,47,4],[63,12,47,10],[63,16,47,14,"Error"],[63,21,47,10],[63,22,47,20],[63,89,47,10],[63,90,47,4],[64,0,48,3],[66,0,50,2],[66,8,50,6,"preserveComments"],[66,24,50,22],[66,28,50,26],[66,32,50,6],[66,36,50,34],[66,43,50,41,"preserveComments"],[66,59,50,34],[66,64,50,62],[66,73,50,2],[66,75,50,73],[67,0,51,4],[67,12,51,10],[67,16,51,14,"Error"],[67,21,51,10],[67,22,51,20],[67,81,51,10],[67,82,51,4],[68,0,52,3],[70,0,54,2],[70,8,54,6,"syntacticPlaceholders"],[70,29,54,27],[70,33,54,31],[70,37,54,6],[70,41,54,39],[70,48,54,46,"syntacticPlaceholders"],[70,69,54,39],[70,74,54,72],[70,83,54,2],[70,85,54,83],[71,0,55,4],[71,12,55,10],[71,16,55,14,"Error"],[71,21,55,10],[71,22,55,20],[71,86,55,10],[71,87,55,4],[72,0,56,3],[74,0,58,2],[74,8,58,6,"syntacticPlaceholders"],[74,29,58,27],[74,34,58,32],[74,38,58,6],[74,43,58,41,"placeholderWhitelist"],[74,63,58,61],[74,67,58,65],[74,71,58,41],[74,75,58,73,"placeholderPattern"],[74,93,58,91],[74,97,58,95],[74,101,58,6],[74,102,58,2],[74,104,58,102],[75,0,59,4],[75,12,59,10],[75,16,59,14,"Error"],[75,21,59,10],[75,22,59,20],[75,94,59,92],[75,132,59,10],[75,133,59,4],[76,0,60,3],[78,0,62,2],[78,11,62,9],[79,0,63,4,"parser"],[79,6,63,4,"parser"],[79,12,63,10],[79,14,63,4,"parser"],[79,20,62,9],[80,0,64,4,"placeholderWhitelist"],[80,6,64,4,"placeholderWhitelist"],[80,26,64,24],[80,28,64,26,"placeholderWhitelist"],[80,48,64,46],[80,52,64,50,"undefined"],[80,61,62,9],[81,0,65,4,"placeholderPattern"],[81,6,65,4,"placeholderPattern"],[81,24,65,22],[81,26,65,24,"placeholderPattern"],[81,44,65,42],[81,48,65,46],[81,52,65,24],[81,55,65,53,"undefined"],[81,64,65,24],[81,67,65,65,"placeholderPattern"],[81,85,62,9],[82,0,66,4,"preserveComments"],[82,6,66,4,"preserveComments"],[82,22,66,20],[82,24,66,22,"preserveComments"],[82,40,66,38],[82,44,66,42],[82,48,66,22],[82,51,66,49],[82,56,66,22],[82,59,66,57,"preserveComments"],[82,75,62,9],[83,0,67,4,"syntacticPlaceholders"],[83,6,67,4,"syntacticPlaceholders"],[83,27,67,25],[83,29,67,27,"syntacticPlaceholders"],[83,50,67,48],[83,54,67,52],[83,58,67,27],[83,61,67,59,"undefined"],[83,70,67,27],[83,73,67,71,"syntacticPlaceholders"],[84,0,62,9],[84,5,62,2],[85,0,69,1],[87,0,71,0],[87,11,71,9,"normalizeReplacements"],[87,32,71,0],[87,33,71,31,"replacements"],[87,45,71,0],[87,47,71,45],[88,0,72,2],[88,8,72,6,"Array"],[88,13,72,11],[88,14,72,12,"isArray"],[88,21,72,6],[88,22,72,20,"replacements"],[88,34,72,6],[88,35,72,2],[88,37,72,35],[89,0,73,4],[89,13,73,11,"replacements"],[89,25,73,23],[89,26,73,24,"reduce"],[89,32,73,11],[89,33,73,31],[89,43,73,32,"acc"],[89,46,73,31],[89,48,73,37,"replacement"],[89,59,73,31],[89,61,73,50,"i"],[89,62,73,31],[89,64,73,56],[90,0,74,6,"acc"],[90,8,74,6,"acc"],[90,11,74,9],[90,12,74,10],[90,18,74,16,"i"],[90,19,74,9],[90,20,74,6],[90,23,74,21,"replacement"],[90,34,74,6],[91,0,75,6],[91,15,75,13,"acc"],[91,18,75,6],[92,0,76,5],[92,7,73,11],[92,9,76,7],[92,11,73,11],[92,12,73,4],[93,0,77,3],[93,5,72,2],[93,11,77,9],[93,15,77,13],[93,22,77,20,"replacements"],[93,34,77,13],[93,39,77,37],[93,47,77,13],[93,51,77,49,"replacements"],[93,63,77,61],[93,67,77,65],[93,71,77,9],[93,73,77,71],[94,0,78,4],[94,13,78,11,"replacements"],[94,25,78,23],[94,29,78,27,"undefined"],[94,38,78,4],[95,0,79,3],[97,0,81,2],[97,10,81,8],[97,14,81,12,"Error"],[97,19,81,8],[97,20,81,18],[97,88,81,8],[97,89,81,2],[98,0,82,1]]},"type":"js/module"}]}