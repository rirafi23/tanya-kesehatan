{"dependencies":[{"name":"./_SetCache","data":{"isAsync":false}},{"name":"./_arrayIncludes","data":{"isAsync":false}},{"name":"./_arrayIncludesWith","data":{"isAsync":false}},{"name":"./_cacheHas","data":{"isAsync":false}},{"name":"./_createSet","data":{"isAsync":false}},{"name":"./_setToArray","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var SetCache = _$$_REQUIRE(_dependencyMap[0], \"./_SetCache\"),\n      arrayIncludes = _$$_REQUIRE(_dependencyMap[1], \"./_arrayIncludes\"),\n      arrayIncludesWith = _$$_REQUIRE(_dependencyMap[2], \"./_arrayIncludesWith\"),\n      cacheHas = _$$_REQUIRE(_dependencyMap[3], \"./_cacheHas\"),\n      createSet = _$$_REQUIRE(_dependencyMap[4], \"./_createSet\"),\n      setToArray = _$$_REQUIRE(_dependencyMap[5], \"./_setToArray\");\n\n  var LARGE_ARRAY_SIZE = 200;\n\n  function baseUniq(array, iteratee, comparator) {\n    var index = -1,\n        includes = arrayIncludes,\n        length = array.length,\n        isCommon = true,\n        result = [],\n        seen = result;\n\n    if (comparator) {\n      isCommon = false;\n      includes = arrayIncludesWith;\n    } else if (length >= LARGE_ARRAY_SIZE) {\n      var set = iteratee ? null : createSet(array);\n\n      if (set) {\n        return setToArray(set);\n      }\n\n      isCommon = false;\n      includes = cacheHas;\n      seen = new SetCache();\n    } else {\n      seen = iteratee ? [] : result;\n    }\n\n    outer: while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value) : value;\n      value = comparator || value !== 0 ? value : 0;\n\n      if (isCommon && computed === computed) {\n        var seenIndex = seen.length;\n\n        while (seenIndex--) {\n          if (seen[seenIndex] === computed) {\n            continue outer;\n          }\n        }\n\n        if (iteratee) {\n          seen.push(computed);\n        }\n\n        result.push(value);\n      } else if (!includes(seen, computed, comparator)) {\n        if (seen !== result) {\n          seen.push(computed);\n        }\n\n        result.push(value);\n      }\n    }\n\n    return result;\n  }\n\n  module.exports = baseUniq;\n});","map":[[2,0,1,0],[2,6,1,4,"SetCache"],[2,14,1,12],[2,17,1,15,"require"],[2,28,1,22],[2,62,1,0],[3,0,1,0],[3,6,2,4,"arrayIncludes"],[3,19,2,17],[3,22,2,20,"require"],[3,33,2,27],[3,72,1,0],[4,0,1,0],[4,6,3,4,"arrayIncludesWith"],[4,23,3,21],[4,26,3,24,"require"],[4,37,3,31],[4,80,1,0],[5,0,1,0],[5,6,4,4,"cacheHas"],[5,14,4,12],[5,17,4,15,"require"],[5,28,4,22],[5,62,1,0],[6,0,1,0],[6,6,5,4,"createSet"],[6,15,5,13],[6,18,5,16,"require"],[6,29,5,23],[6,64,1,0],[7,0,1,0],[7,6,6,4,"setToArray"],[7,16,6,14],[7,19,6,17,"require"],[7,30,6,24],[7,66,1,0],[9,0,9,0],[9,6,9,4,"LARGE_ARRAY_SIZE"],[9,22,9,20],[9,25,9,23],[9,28,9,0],[11,0,20,0],[11,11,20,9,"baseUniq"],[11,19,20,0],[11,20,20,18,"array"],[11,25,20,0],[11,27,20,25,"iteratee"],[11,35,20,0],[11,37,20,35,"comparator"],[11,47,20,0],[11,49,20,47],[12,0,21,2],[12,8,21,6,"index"],[12,13,21,11],[12,16,21,14],[12,17,21,15],[12,18,21,2],[13,0,21,2],[13,8,22,6,"includes"],[13,16,22,14],[13,19,22,17,"arrayIncludes"],[13,32,21,2],[14,0,21,2],[14,8,23,6,"length"],[14,14,23,12],[14,17,23,15,"array"],[14,22,23,20],[14,23,23,21,"length"],[14,29,21,2],[15,0,21,2],[15,8,24,6,"isCommon"],[15,16,24,14],[15,19,24,17],[15,23,21,2],[16,0,21,2],[16,8,25,6,"result"],[16,14,25,12],[16,17,25,15],[16,19,21,2],[17,0,21,2],[17,8,26,6,"seen"],[17,12,26,10],[17,15,26,13,"result"],[17,21,21,2],[19,0,28,2],[19,8,28,6,"comparator"],[19,18,28,2],[19,20,28,18],[20,0,29,4,"isCommon"],[20,6,29,4,"isCommon"],[20,14,29,12],[20,17,29,15],[20,22,29,4],[21,0,30,4,"includes"],[21,6,30,4,"includes"],[21,14,30,12],[21,17,30,15,"arrayIncludesWith"],[21,34,30,4],[22,0,31,3],[22,5,28,2],[22,11,32,7],[22,15,32,11,"length"],[22,21,32,17],[22,25,32,21,"LARGE_ARRAY_SIZE"],[22,41,32,7],[22,43,32,39],[23,0,33,4],[23,10,33,8,"set"],[23,13,33,11],[23,16,33,14,"iteratee"],[23,24,33,22],[23,27,33,25],[23,31,33,22],[23,34,33,32,"createSet"],[23,43,33,41],[23,44,33,42,"array"],[23,49,33,41],[23,50,33,4],[25,0,34,4],[25,10,34,8,"set"],[25,13,34,4],[25,15,34,13],[26,0,35,6],[26,15,35,13,"setToArray"],[26,25,35,23],[26,26,35,24,"set"],[26,29,35,23],[26,30,35,6],[27,0,36,5],[29,0,37,4,"isCommon"],[29,6,37,4,"isCommon"],[29,14,37,12],[29,17,37,15],[29,22,37,4],[30,0,38,4,"includes"],[30,6,38,4,"includes"],[30,14,38,12],[30,17,38,15,"cacheHas"],[30,25,38,4],[31,0,39,4,"seen"],[31,6,39,4,"seen"],[31,10,39,8],[31,13,39,11],[31,17,39,15,"SetCache"],[31,25,39,11],[31,27,39,4],[32,0,40,3],[32,5,32,7],[32,11,41,7],[33,0,42,4,"seen"],[33,6,42,4,"seen"],[33,10,42,8],[33,13,42,11,"iteratee"],[33,21,42,19],[33,24,42,22],[33,26,42,19],[33,29,42,27,"result"],[33,35,42,4],[34,0,43,3],[36,0,44,2,"outer"],[36,4,44,2,"outer"],[36,9,44,7],[36,11,45,2],[36,18,45,9],[36,20,45,11,"index"],[36,25,45,9],[36,28,45,19,"length"],[36,34,45,2],[36,36,45,27],[37,0,46,4],[37,10,46,8,"value"],[37,15,46,13],[37,18,46,16,"array"],[37,23,46,21],[37,24,46,22,"index"],[37,29,46,21],[37,30,46,4],[38,0,46,4],[38,10,47,8,"computed"],[38,18,47,16],[38,21,47,19,"iteratee"],[38,29,47,27],[38,32,47,30,"iteratee"],[38,40,47,38],[38,41,47,39,"value"],[38,46,47,38],[38,47,47,27],[38,50,47,48,"value"],[38,55,46,4],[39,0,49,4,"value"],[39,6,49,4,"value"],[39,11,49,9],[39,14,49,13,"comparator"],[39,24,49,23],[39,28,49,27,"value"],[39,33,49,32],[39,38,49,37],[39,39,49,12],[39,42,49,42,"value"],[39,47,49,12],[39,50,49,50],[39,51,49,4],[41,0,50,4],[41,10,50,8,"isCommon"],[41,18,50,16],[41,22,50,20,"computed"],[41,30,50,28],[41,35,50,33,"computed"],[41,43,50,4],[41,45,50,43],[42,0,51,6],[42,12,51,10,"seenIndex"],[42,21,51,19],[42,24,51,22,"seen"],[42,28,51,26],[42,29,51,27,"length"],[42,35,51,6],[44,0,52,6],[44,15,52,13,"seenIndex"],[44,24,52,22],[44,26,52,6],[44,28,52,26],[45,0,53,8],[45,14,53,12,"seen"],[45,18,53,16],[45,19,53,17,"seenIndex"],[45,28,53,16],[45,29,53,12],[45,34,53,32,"computed"],[45,42,53,8],[45,44,53,42],[46,0,54,10],[46,21,54,19,"outer"],[46,26,54,10],[47,0,55,9],[48,0,56,7],[50,0,57,6],[50,12,57,10,"iteratee"],[50,20,57,6],[50,22,57,20],[51,0,58,8,"seen"],[51,10,58,8,"seen"],[51,14,58,12],[51,15,58,13,"push"],[51,19,58,8],[51,20,58,18,"computed"],[51,28,58,8],[52,0,59,7],[54,0,60,6,"result"],[54,8,60,6,"result"],[54,14,60,12],[54,15,60,13,"push"],[54,19,60,6],[54,20,60,18,"value"],[54,25,60,6],[55,0,61,5],[55,7,50,4],[55,13,62,9],[55,17,62,13],[55,18,62,14,"includes"],[55,26,62,22],[55,27,62,23,"seen"],[55,31,62,22],[55,33,62,29,"computed"],[55,41,62,22],[55,43,62,39,"comparator"],[55,53,62,22],[55,54,62,9],[55,56,62,52],[56,0,63,6],[56,12,63,10,"seen"],[56,16,63,14],[56,21,63,19,"result"],[56,27,63,6],[56,29,63,27],[57,0,64,8,"seen"],[57,10,64,8,"seen"],[57,14,64,12],[57,15,64,13,"push"],[57,19,64,8],[57,20,64,18,"computed"],[57,28,64,8],[58,0,65,7],[60,0,66,6,"result"],[60,8,66,6,"result"],[60,14,66,12],[60,15,66,13,"push"],[60,19,66,6],[60,20,66,18,"value"],[60,25,66,6],[61,0,67,5],[62,0,68,3],[64,0,69,2],[64,11,69,9,"result"],[64,17,69,2],[65,0,70,1],[67,0,72,0,"module"],[67,2,72,0,"module"],[67,8,72,6],[67,9,72,7,"exports"],[67,16,72,0],[67,19,72,17,"baseUniq"],[67,27,72,0]]},"type":"js/module"}]}