{"dependencies":[{"name":"../definitions","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = traverse;\n\n  var _definitions = _$$_REQUIRE(_dependencyMap[0], \"../definitions\");\n\n  function traverse(node, handlers, state) {\n    if (typeof handlers === \"function\") {\n      handlers = {\n        enter: handlers\n      };\n    }\n\n    var _handlers = handlers,\n        enter = _handlers.enter,\n        exit = _handlers.exit;\n    traverseSimpleImpl(node, enter, exit, state, []);\n  }\n\n  function traverseSimpleImpl(node, enter, exit, state, ancestors) {\n    var keys = _definitions.VISITOR_KEYS[node.type];\n    if (!keys) return;\n    if (enter) enter(node, ancestors, state);\n\n    for (var _iterator = keys, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _key = _ref;\n      var _subNode = node[_key];\n\n      if (Array.isArray(_subNode)) {\n        for (var i = 0; i < _subNode.length; i++) {\n          var child = _subNode[i];\n          if (!child) continue;\n          ancestors.push({\n            node: node,\n            key: _key,\n            index: i\n          });\n          traverseSimpleImpl(child, enter, exit, state, ancestors);\n          ancestors.pop();\n        }\n      } else if (_subNode) {\n        ancestors.push({\n          node: node,\n          key: _key\n        });\n        traverseSimpleImpl(_subNode, enter, exit, state, ancestors);\n        ancestors.pop();\n      }\n    }\n\n    if (exit) exit(node, ancestors, state);\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"traverse"],[7,28,6,0],[9,0,8,0],[9,6,8,4,"_definitions"],[9,18,8,16],[9,21,8,19,"require"],[9,32,8,26],[9,69,8,0],[11,0,10,0],[11,11,10,9,"traverse"],[11,19,10,0],[11,20,10,18,"node"],[11,24,10,0],[11,26,10,24,"handlers"],[11,34,10,0],[11,36,10,34,"state"],[11,41,10,0],[11,43,10,41],[12,0,11,2],[12,8,11,6],[12,15,11,13,"handlers"],[12,23,11,6],[12,28,11,26],[12,38,11,2],[12,40,11,38],[13,0,12,4,"handlers"],[13,6,12,4,"handlers"],[13,14,12,12],[13,17,12,15],[14,0,13,6,"enter"],[14,8,13,6,"enter"],[14,13,13,11],[14,15,13,13,"handlers"],[15,0,12,15],[15,7,12,4],[16,0,15,3],[18,0,10,41],[18,20,20,6,"handlers"],[18,28,10,41],[19,0,10,41],[19,8,18,4,"enter"],[19,13,10,41],[19,26,18,4,"enter"],[19,31,10,41],[20,0,10,41],[20,8,19,4,"exit"],[20,12,10,41],[20,25,19,4,"exit"],[20,29,10,41],[21,0,21,2,"traverseSimpleImpl"],[21,4,21,2,"traverseSimpleImpl"],[21,22,21,20],[21,23,21,21,"node"],[21,27,21,20],[21,29,21,27,"enter"],[21,34,21,20],[21,36,21,34,"exit"],[21,40,21,20],[21,42,21,40,"state"],[21,47,21,20],[21,49,21,47],[21,51,21,20],[21,52,21,2],[22,0,22,1],[24,0,24,0],[24,11,24,9,"traverseSimpleImpl"],[24,29,24,0],[24,30,24,28,"node"],[24,34,24,0],[24,36,24,34,"enter"],[24,41,24,0],[24,43,24,41,"exit"],[24,47,24,0],[24,49,24,47,"state"],[24,54,24,0],[24,56,24,54,"ancestors"],[24,65,24,0],[24,67,24,65],[25,0,25,2],[25,8,25,8,"keys"],[25,12,25,12],[25,15,25,15,"_definitions"],[25,27,25,27],[25,28,25,28,"VISITOR_KEYS"],[25,40,25,15],[25,41,25,41,"node"],[25,45,25,45],[25,46,25,46,"type"],[25,50,25,15],[25,51,25,2],[26,0,26,2],[26,8,26,6],[26,9,26,7,"keys"],[26,13,26,2],[26,15,26,13],[27,0,27,2],[27,8,27,6,"enter"],[27,13,27,2],[27,15,27,13,"enter"],[27,20,27,18],[27,21,27,19,"node"],[27,25,27,18],[27,27,27,25,"ancestors"],[27,36,27,18],[27,38,27,36,"state"],[27,43,27,18],[27,44,27,13],[29,0,29,2],[29,25,29,20,"keys"],[29,29,29,2],[29,189,29,26],[30,0,29,26],[32,0,29,26],[33,0,29,26],[34,0,29,26],[35,0,29,26],[36,0,29,26],[37,0,29,26],[38,0,29,26],[39,0,29,26],[41,0,29,26],[41,10,29,13,"key"],[41,14,29,26],[42,0,30,4],[42,10,30,10,"subNode"],[42,18,30,17],[42,21,30,20,"node"],[42,25,30,24],[42,26,30,25,"key"],[42,30,30,24],[42,31,30,4],[44,0,32,4],[44,10,32,8,"Array"],[44,15,32,13],[44,16,32,14,"isArray"],[44,23,32,8],[44,24,32,22,"subNode"],[44,32,32,8],[44,33,32,4],[44,35,32,32],[45,0,33,6],[45,13,33,11],[45,17,33,15,"i"],[45,18,33,16],[45,21,33,19],[45,22,33,6],[45,24,33,22,"i"],[45,25,33,23],[45,28,33,26,"subNode"],[45,36,33,33],[45,37,33,34,"length"],[45,43,33,6],[45,45,33,42,"i"],[45,46,33,43],[45,48,33,6],[45,50,33,47],[46,0,34,8],[46,14,34,14,"child"],[46,19,34,19],[46,22,34,22,"subNode"],[46,30,34,29],[46,31,34,30,"i"],[46,32,34,29],[46,33,34,8],[47,0,35,8],[47,14,35,12],[47,15,35,13,"child"],[47,20,35,8],[47,22,35,20],[48,0,36,8,"ancestors"],[48,10,36,8,"ancestors"],[48,19,36,17],[48,20,36,18,"push"],[48,24,36,8],[48,25,36,23],[49,0,37,10,"node"],[49,12,37,10,"node"],[49,16,37,14],[49,18,37,10,"node"],[49,22,36,23],[50,0,38,10,"key"],[50,12,38,10,"key"],[50,15,38,13],[50,17,38,10,"key"],[50,21,36,23],[51,0,39,10,"index"],[51,12,39,10,"index"],[51,17,39,15],[51,19,39,17,"i"],[52,0,36,23],[52,11,36,8],[53,0,41,8,"traverseSimpleImpl"],[53,10,41,8,"traverseSimpleImpl"],[53,28,41,26],[53,29,41,27,"child"],[53,34,41,26],[53,36,41,34,"enter"],[53,41,41,26],[53,43,41,41,"exit"],[53,47,41,26],[53,49,41,47,"state"],[53,54,41,26],[53,56,41,54,"ancestors"],[53,65,41,26],[53,66,41,8],[54,0,42,8,"ancestors"],[54,10,42,8,"ancestors"],[54,19,42,17],[54,20,42,18,"pop"],[54,23,42,8],[55,0,43,7],[56,0,44,5],[56,7,32,4],[56,13,44,11],[56,17,44,15,"subNode"],[56,25,44,11],[56,27,44,24],[57,0,45,6,"ancestors"],[57,8,45,6,"ancestors"],[57,17,45,15],[57,18,45,16,"push"],[57,22,45,6],[57,23,45,21],[58,0,46,8,"node"],[58,10,46,8,"node"],[58,14,46,12],[58,16,46,8,"node"],[58,20,45,21],[59,0,47,8,"key"],[59,10,47,8,"key"],[59,13,47,11],[59,15,47,8,"key"],[60,0,45,21],[60,9,45,6],[61,0,49,6,"traverseSimpleImpl"],[61,8,49,6,"traverseSimpleImpl"],[61,26,49,24],[61,27,49,25,"subNode"],[61,35,49,24],[61,37,49,34,"enter"],[61,42,49,24],[61,44,49,41,"exit"],[61,48,49,24],[61,50,49,47,"state"],[61,55,49,24],[61,57,49,54,"ancestors"],[61,66,49,24],[61,67,49,6],[62,0,50,6,"ancestors"],[62,8,50,6,"ancestors"],[62,17,50,15],[62,18,50,16,"pop"],[62,21,50,6],[63,0,51,5],[64,0,52,3],[66,0,54,2],[66,8,54,6,"exit"],[66,12,54,2],[66,14,54,12,"exit"],[66,18,54,16],[66,19,54,17,"node"],[66,23,54,16],[66,25,54,23,"ancestors"],[66,34,54,16],[66,36,54,34,"state"],[66,41,54,16],[66,42,54,12],[67,0,55,1]]},"type":"js/module"}]}