{"dependencies":[{"name":"debug","data":{"isAsync":false}},{"name":"path","data":{"isAsync":false}},{"name":"fs","data":{"isAsync":false}},{"name":"json5","data":{"isAsync":false}},{"name":"resolve","data":{"isAsync":false}},{"name":"../caching","data":{"isAsync":false}},{"name":"../helpers/config-api","data":{"isAsync":false}},{"name":"./utils","data":{"isAsync":false}},{"name":"../pattern-to-regex","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.findConfigUpwards = findConfigUpwards;\n  exports.findRelativeConfig = findRelativeConfig;\n  exports.findRootConfig = findRootConfig;\n  exports.loadConfig = loadConfig;\n  exports.ROOT_CONFIG_FILENAMES = void 0;\n\n  function _debug() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"debug\"));\n\n    _debug = function _debug() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _path() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"path\"));\n\n    _path = function _path() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _fs() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"fs\"));\n\n    _fs = function _fs() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _json() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"json5\"));\n\n    _json = function _json() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _resolve() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"resolve\"));\n\n    _resolve = function _resolve() {\n      return data;\n    };\n\n    return data;\n  }\n\n  var _caching = _$$_REQUIRE(_dependencyMap[5], \"../caching\");\n\n  var _configApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../helpers/config-api\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[7], \"./utils\");\n\n  var _patternToRegex = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../pattern-to-regex\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var debug = (0, _debug().default)(\"babel:config:loading:files:configuration\");\n  var ROOT_CONFIG_FILENAMES = [\"babel.config.js\", \"babel.config.cjs\", \"babel.config.json\"];\n  exports.ROOT_CONFIG_FILENAMES = ROOT_CONFIG_FILENAMES;\n  var RELATIVE_CONFIG_FILENAMES = [\".babelrc\", \".babelrc.js\", \".babelrc.cjs\"];\n  var BABELIGNORE_FILENAME = \".babelignore\";\n\n  function findConfigUpwards(rootDir) {\n    var dirname = rootDir;\n\n    while (true) {\n      var configFileFound = ROOT_CONFIG_FILENAMES.some(function (filename) {\n        return _fs().default.existsSync(_path().default.join(dirname, filename));\n      });\n      if (configFileFound) return dirname;\n\n      var nextDir = _path().default.dirname(dirname);\n\n      if (dirname === nextDir) break;\n      dirname = nextDir;\n    }\n\n    return null;\n  }\n\n  function findRelativeConfig(packageData, envName, caller) {\n    var config = null;\n    var ignore = null;\n\n    var dirname = _path().default.dirname(packageData.filepath);\n\n    for (var _iterator = packageData.directories, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _loc = _ref;\n\n      if (!config) {\n        config = loadOneConfig(RELATIVE_CONFIG_FILENAMES, _loc, envName, caller, packageData.pkg && packageData.pkg.dirname === _loc ? packageToBabelConfig(packageData.pkg) : null);\n      }\n\n      if (!ignore) {\n        var ignoreLoc = _path().default.join(_loc, BABELIGNORE_FILENAME);\n\n        ignore = readIgnoreConfig(ignoreLoc);\n\n        if (ignore) {\n          debug(\"Found ignore %o from %o.\", ignore.filepath, dirname);\n        }\n      }\n    }\n\n    return {\n      config: config,\n      ignore: ignore\n    };\n  }\n\n  function findRootConfig(dirname, envName, caller) {\n    return loadOneConfig(ROOT_CONFIG_FILENAMES, dirname, envName, caller);\n  }\n\n  function loadOneConfig(names, dirname, envName, caller) {\n    var previousConfig = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    var config = names.reduce(function (previousConfig, name) {\n      var filepath = _path().default.resolve(dirname, name);\n\n      var config = readConfig(filepath, envName, caller);\n\n      if (config && previousConfig) {\n        throw new Error(\"Multiple configuration files found. Please remove one:\\n\" + (\" - \" + _path().default.basename(previousConfig.filepath) + \"\\n\") + (\" - \" + name + \"\\n\") + (\"from \" + dirname));\n      }\n\n      return config || previousConfig;\n    }, previousConfig);\n\n    if (config) {\n      debug(\"Found configuration %o from %o.\", config.filepath, dirname);\n    }\n\n    return config;\n  }\n\n  function loadConfig(name, dirname, envName, caller) {\n    var filepath = _resolve().default.sync(name, {\n      basedir: dirname\n    });\n\n    var conf = readConfig(filepath, envName, caller);\n\n    if (!conf) {\n      throw new Error(\"Config file \" + filepath + \" contains no configuration data\");\n    }\n\n    debug(\"Loaded config %o from %o.\", name, dirname);\n    return conf;\n  }\n\n  function readConfig(filepath, envName, caller) {\n    var ext = _path().default.extname(filepath);\n\n    return ext === \".js\" || ext === \".cjs\" ? readConfigJS(filepath, {\n      envName: envName,\n      caller: caller\n    }) : readConfigJSON5(filepath);\n  }\n\n  var LOADING_CONFIGS = new Set();\n  var readConfigJS = (0, _caching.makeStrongCache)(function (filepath, cache) {\n    if (!_fs().default.existsSync(filepath)) {\n      cache.forever();\n      return null;\n    }\n\n    if (LOADING_CONFIGS.has(filepath)) {\n      cache.never();\n      debug(\"Auto-ignoring usage of config %o.\", filepath);\n      return {\n        filepath: filepath,\n        dirname: _path().default.dirname(filepath),\n        options: {}\n      };\n    }\n\n    var options;\n\n    try {\n      LOADING_CONFIGS.add(filepath);\n\n      var configModule = function (line) {\n        throw new Error('Dynamic require defined at line ' + line + '; not supported by Metro');\n      }(192);\n\n      options = configModule && configModule.__esModule ? configModule.default || undefined : configModule;\n    } catch (err) {\n      err.message = filepath + \": Error while loading config - \" + err.message;\n      throw err;\n    } finally {\n      LOADING_CONFIGS.delete(filepath);\n    }\n\n    if (typeof options === \"function\") {\n      options = options((0, _configApi.default)(cache));\n      if (!cache.configured()) throwConfigError();\n    }\n\n    if (!options || typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(filepath + \": Configuration should be an exported JavaScript object.\");\n    }\n\n    if (typeof options.then === \"function\") {\n      throw new Error(\"You appear to be using an async configuration, \" + \"which your current version of Babel does not support. \" + \"We may add support for this in the future, \" + \"but if you're on the most recent version of @babel/core and still \" + \"seeing this error, then you'll need to synchronously return your config.\");\n    }\n\n    return {\n      filepath: filepath,\n      dirname: _path().default.dirname(filepath),\n      options: options\n    };\n  });\n  var packageToBabelConfig = (0, _caching.makeWeakCache)(function (file) {\n    var babel = file.options[\"babel\"];\n    if (typeof babel === \"undefined\") return null;\n\n    if (typeof babel !== \"object\" || Array.isArray(babel) || babel === null) {\n      throw new Error(file.filepath + \": .babel property must be an object\");\n    }\n\n    return {\n      filepath: file.filepath,\n      dirname: file.dirname,\n      options: babel\n    };\n  });\n  var readConfigJSON5 = (0, _utils.makeStaticFileCache)(function (filepath, content) {\n    var options;\n\n    try {\n      options = _json().default.parse(content);\n    } catch (err) {\n      err.message = filepath + \": Error while parsing config - \" + err.message;\n      throw err;\n    }\n\n    if (!options) throw new Error(filepath + \": No config detected\");\n\n    if (typeof options !== \"object\") {\n      throw new Error(filepath + \": Config returned typeof \" + typeof options);\n    }\n\n    if (Array.isArray(options)) {\n      throw new Error(filepath + \": Expected config object but found array\");\n    }\n\n    return {\n      filepath: filepath,\n      dirname: _path().default.dirname(filepath),\n      options: options\n    };\n  });\n  var readIgnoreConfig = (0, _utils.makeStaticFileCache)(function (filepath, content) {\n    var ignoreDir = _path().default.dirname(filepath);\n\n    var ignorePatterns = content.split(\"\\n\").map(function (line) {\n      return line.replace(/#(.*?)$/, \"\").trim();\n    }).filter(function (line) {\n      return !!line;\n    });\n\n    for (var _iterator2 = ignorePatterns, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var _pattern = _ref2;\n\n      if (_pattern[0] === \"!\") {\n        throw new Error(\"Negation of file paths is not supported.\");\n      }\n    }\n\n    return {\n      filepath: filepath,\n      dirname: _path().default.dirname(filepath),\n      ignore: ignorePatterns.map(function (pattern) {\n        return (0, _patternToRegex.default)(pattern, ignoreDir);\n      })\n    };\n  });\n\n  function throwConfigError() {\n    throw new Error(\"Caching was left unconfigured. Babel's plugins, presets, and .babelrc.js files can be configured\\nfor various types of caching, using the first param of their handler functions:\\n\\nmodule.exports = function(api) {\\n  // The API exposes the following:\\n\\n  // Cache the returned value forever and don't call this function again.\\n  api.cache(true);\\n\\n  // Don't cache at all. Not recommended because it will be very slow.\\n  api.cache(false);\\n\\n  // Cached based on the value of some function. If this function returns a value different from\\n  // a previously-encountered value, the plugins will re-evaluate.\\n  var env = api.cache(() => process.env.NODE_ENV);\\n\\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\\n  // any possible NODE_ENV value that might come up during plugin execution.\\n  var isProd = api.cache(() => process.env.NODE_ENV === \\\"production\\\");\\n\\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\\n  // previous instance whenever something changes, you may use:\\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === \\\"production\\\");\\n\\n  // Note, we also expose the following more-verbose versions of the above examples:\\n  api.cache.forever(); // api.cache(true)\\n  api.cache.never();   // api.cache(false)\\n  api.cache.using(fn); // api.cache(fn)\\n\\n  // Return the value that will be cached.\\n  return { };\\n};\");\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"findConfigUpwards"],[7,27,6,0],[7,30,6,28,"findConfigUpwards"],[7,47,6,0],[8,0,7,0,"exports"],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"findRelativeConfig"],[8,28,7,0],[8,31,7,29,"findRelativeConfig"],[8,49,7,0],[9,0,8,0,"exports"],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"findRootConfig"],[9,24,8,0],[9,27,8,25,"findRootConfig"],[9,41,8,0],[10,0,9,0,"exports"],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"loadConfig"],[10,20,9,0],[10,23,9,21,"loadConfig"],[10,33,9,0],[11,0,10,0,"exports"],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"ROOT_CONFIG_FILENAMES"],[11,31,10,0],[11,34,10,32],[11,39,10,37],[11,40,10,0],[13,0,12,0],[13,11,12,9,"_debug"],[13,17,12,0],[13,20,12,18],[14,0,13,2],[14,8,13,8,"data"],[14,12,13,12],[14,15,13,15,"_interopRequireDefault"],[14,37,13,37],[14,38,13,38,"require"],[14,49,13,45],[14,77,13,37],[14,78,13,2],[16,0,15,2,"_debug"],[16,4,15,2,"_debug"],[16,10,15,8],[16,13,15,11],[16,31,15,23],[17,0,16,4],[17,13,16,11,"data"],[17,17,16,4],[18,0,17,3],[18,5,15,2],[20,0,19,2],[20,11,19,9,"data"],[20,15,19,2],[21,0,20,1],[23,0,22,0],[23,11,22,9,"_path"],[23,16,22,0],[23,19,22,17],[24,0,23,2],[24,8,23,8,"data"],[24,12,23,12],[24,15,23,15,"_interopRequireDefault"],[24,37,23,37],[24,38,23,38,"require"],[24,49,23,45],[24,76,23,37],[24,77,23,2],[26,0,25,2,"_path"],[26,4,25,2,"_path"],[26,9,25,7],[26,12,25,10],[26,29,25,22],[27,0,26,4],[27,13,26,11,"data"],[27,17,26,4],[28,0,27,3],[28,5,25,2],[30,0,29,2],[30,11,29,9,"data"],[30,15,29,2],[31,0,30,1],[33,0,32,0],[33,11,32,9,"_fs"],[33,14,32,0],[33,17,32,15],[34,0,33,2],[34,8,33,8,"data"],[34,12,33,12],[34,15,33,15,"_interopRequireDefault"],[34,37,33,37],[34,38,33,38,"require"],[34,49,33,45],[34,74,33,37],[34,75,33,2],[36,0,35,2,"_fs"],[36,4,35,2,"_fs"],[36,7,35,5],[36,10,35,8],[36,25,35,20],[37,0,36,4],[37,13,36,11,"data"],[37,17,36,4],[38,0,37,3],[38,5,35,2],[40,0,39,2],[40,11,39,9,"data"],[40,15,39,2],[41,0,40,1],[43,0,42,0],[43,11,42,9,"_json"],[43,16,42,0],[43,19,42,17],[44,0,43,2],[44,8,43,8,"data"],[44,12,43,12],[44,15,43,15,"_interopRequireDefault"],[44,37,43,37],[44,38,43,38,"require"],[44,49,43,45],[44,77,43,37],[44,78,43,2],[46,0,45,2,"_json"],[46,4,45,2,"_json"],[46,9,45,7],[46,12,45,10],[46,29,45,22],[47,0,46,4],[47,13,46,11,"data"],[47,17,46,4],[48,0,47,3],[48,5,45,2],[50,0,49,2],[50,11,49,9,"data"],[50,15,49,2],[51,0,50,1],[53,0,52,0],[53,11,52,9,"_resolve"],[53,19,52,0],[53,22,52,20],[54,0,53,2],[54,8,53,8,"data"],[54,12,53,12],[54,15,53,15,"_interopRequireDefault"],[54,37,53,37],[54,38,53,38,"require"],[54,49,53,45],[54,79,53,37],[54,80,53,2],[56,0,55,2,"_resolve"],[56,4,55,2,"_resolve"],[56,12,55,10],[56,15,55,13],[56,35,55,25],[57,0,56,4],[57,13,56,11,"data"],[57,17,56,4],[58,0,57,3],[58,5,55,2],[60,0,59,2],[60,11,59,9,"data"],[60,15,59,2],[61,0,60,1],[63,0,62,0],[63,6,62,4,"_caching"],[63,14,62,12],[63,17,62,15,"require"],[63,28,62,22],[63,61,62,0],[65,0,64,0],[65,6,64,4,"_configApi"],[65,16,64,14],[65,19,64,17,"_interopRequireDefault"],[65,41,64,39],[65,42,64,40,"require"],[65,53,64,47],[65,97,64,39],[65,98,64,0],[67,0,66,0],[67,6,66,4,"_utils"],[67,12,66,10],[67,15,66,13,"require"],[67,26,66,20],[67,56,66,0],[69,0,68,0],[69,6,68,4,"_patternToRegex"],[69,21,68,19],[69,24,68,22,"_interopRequireDefault"],[69,46,68,44],[69,47,68,45,"require"],[69,58,68,52],[69,100,68,44],[69,101,68,0],[71,0,70,0],[71,11,70,9,"_interopRequireDefault"],[71,33,70,0],[71,34,70,32,"obj"],[71,37,70,0],[71,39,70,37],[72,0,70,39],[72,11,70,46,"obj"],[72,14,70,49],[72,18,70,53,"obj"],[72,21,70,56],[72,22,70,57,"__esModule"],[72,32,70,46],[72,35,70,70,"obj"],[72,38,70,46],[72,41,70,76],[73,0,70,78,"default"],[73,6,70,78,"default"],[73,13,70,85],[73,15,70,87,"obj"],[74,0,70,76],[74,5,70,39],[75,0,70,95],[77,0,72,0],[77,6,72,6,"debug"],[77,11,72,11],[77,14,72,14],[77,15,72,15],[77,18,72,18,"_debug"],[77,24,72,24],[77,27,72,27,"default"],[77,34,72,14],[77,36,72,36],[77,78,72,14],[77,79,72,0],[78,0,73,0],[78,6,73,6,"ROOT_CONFIG_FILENAMES"],[78,27,73,27],[78,30,73,30],[78,31,73,31],[78,48,73,30],[78,50,73,50],[78,68,73,30],[78,70,73,70],[78,89,73,30],[78,90,73,0],[79,0,74,0,"exports"],[79,2,74,0,"exports"],[79,9,74,7],[79,10,74,8,"ROOT_CONFIG_FILENAMES"],[79,31,74,0],[79,34,74,32,"ROOT_CONFIG_FILENAMES"],[79,55,74,0],[80,0,75,0],[80,6,75,6,"RELATIVE_CONFIG_FILENAMES"],[80,31,75,31],[80,34,75,34],[80,35,75,35],[80,45,75,34],[80,47,75,47],[80,60,75,34],[80,62,75,62],[80,76,75,34],[80,77,75,0],[81,0,76,0],[81,6,76,6,"BABELIGNORE_FILENAME"],[81,26,76,26],[81,29,76,29],[81,43,76,0],[83,0,78,0],[83,11,78,9,"findConfigUpwards"],[83,28,78,0],[83,29,78,27,"rootDir"],[83,36,78,0],[83,38,78,36],[84,0,79,2],[84,8,79,6,"dirname"],[84,15,79,13],[84,18,79,16,"rootDir"],[84,25,79,2],[86,0,81,2],[86,11,81,9],[86,15,81,2],[86,17,81,15],[87,0,82,4],[87,10,82,10,"configFileFound"],[87,25,82,25],[87,28,82,28,"ROOT_CONFIG_FILENAMES"],[87,49,82,49],[87,50,82,50,"some"],[87,54,82,28],[87,55,82,55],[87,65,82,55,"filename"],[87,73,82,63],[88,0,82,63],[88,15,82,67,"_fs"],[88,18,82,70],[88,21,82,73,"default"],[88,28,82,67],[88,29,82,81,"existsSync"],[88,39,82,67],[88,40,82,92,"_path"],[88,45,82,97],[88,48,82,100,"default"],[88,55,82,92],[88,56,82,108,"join"],[88,60,82,92],[88,61,82,113,"dirname"],[88,68,82,92],[88,70,82,122,"filename"],[88,78,82,92],[88,79,82,67],[88,80,82,63],[89,0,82,63],[89,7,82,28],[89,8,82,4],[90,0,83,4],[90,10,83,8,"configFileFound"],[90,25,83,4],[90,27,83,25],[90,34,83,32,"dirname"],[90,41,83,25],[92,0,85,4],[92,10,85,10,"nextDir"],[92,17,85,17],[92,20,85,20,"_path"],[92,25,85,25],[92,28,85,28,"default"],[92,35,85,20],[92,36,85,36,"dirname"],[92,43,85,20],[92,44,85,44,"dirname"],[92,51,85,20],[92,52,85,4],[94,0,87,4],[94,10,87,8,"dirname"],[94,17,87,15],[94,22,87,20,"nextDir"],[94,29,87,4],[94,31,87,29],[95,0,88,4,"dirname"],[95,6,88,4,"dirname"],[95,13,88,11],[95,16,88,14,"nextDir"],[95,23,88,4],[96,0,89,3],[98,0,91,2],[98,11,91,9],[98,15,91,2],[99,0,92,1],[101,0,94,0],[101,11,94,9,"findRelativeConfig"],[101,29,94,0],[101,30,94,28,"packageData"],[101,41,94,0],[101,43,94,41,"envName"],[101,50,94,0],[101,52,94,50,"caller"],[101,58,94,0],[101,60,94,58],[102,0,95,2],[102,8,95,6,"config"],[102,14,95,12],[102,17,95,15],[102,21,95,2],[103,0,96,2],[103,8,96,6,"ignore"],[103,14,96,12],[103,17,96,15],[103,21,96,2],[105,0,98,2],[105,8,98,8,"dirname"],[105,15,98,15],[105,18,98,18,"_path"],[105,23,98,23],[105,26,98,26,"default"],[105,33,98,18],[105,34,98,34,"dirname"],[105,41,98,18],[105,42,98,42,"packageData"],[105,53,98,53],[105,54,98,54,"filepath"],[105,62,98,18],[105,63,98,2],[107,0,100,2],[107,25,100,20,"packageData"],[107,36,100,31],[107,37,100,32,"directories"],[107,48,100,2],[107,208,100,45],[108,0,100,45],[110,0,100,45],[111,0,100,45],[112,0,100,45],[113,0,100,45],[114,0,100,45],[115,0,100,45],[116,0,100,45],[117,0,100,45],[119,0,100,45],[119,10,100,13,"loc"],[119,14,100,45],[121,0,101,4],[121,10,101,8],[121,11,101,9,"config"],[121,17,101,4],[121,19,101,17],[122,0,102,6,"config"],[122,8,102,6,"config"],[122,14,102,12],[122,17,102,15,"loadOneConfig"],[122,30,102,28],[122,31,102,29,"RELATIVE_CONFIG_FILENAMES"],[122,56,102,28],[122,58,102,56,"loc"],[122,62,102,28],[122,64,102,61,"envName"],[122,71,102,28],[122,73,102,70,"caller"],[122,79,102,28],[122,81,102,78,"packageData"],[122,92,102,89],[122,93,102,90,"pkg"],[122,96,102,78],[122,100,102,97,"packageData"],[122,111,102,108],[122,112,102,109,"pkg"],[122,115,102,97],[122,116,102,113,"dirname"],[122,123,102,97],[122,128,102,125,"loc"],[122,132,102,78],[122,135,102,131,"packageToBabelConfig"],[122,155,102,151],[122,156,102,152,"packageData"],[122,167,102,163],[122,168,102,164,"pkg"],[122,171,102,151],[122,172,102,78],[122,175,102,171],[122,179,102,28],[122,180,102,6],[123,0,103,5],[125,0,105,4],[125,10,105,8],[125,11,105,9,"ignore"],[125,17,105,4],[125,19,105,17],[126,0,106,6],[126,12,106,12,"ignoreLoc"],[126,21,106,21],[126,24,106,24,"_path"],[126,29,106,29],[126,32,106,32,"default"],[126,39,106,24],[126,40,106,40,"join"],[126,44,106,24],[126,45,106,45,"loc"],[126,49,106,24],[126,51,106,50,"BABELIGNORE_FILENAME"],[126,71,106,24],[126,72,106,6],[128,0,108,6,"ignore"],[128,8,108,6,"ignore"],[128,14,108,12],[128,17,108,15,"readIgnoreConfig"],[128,33,108,31],[128,34,108,32,"ignoreLoc"],[128,43,108,31],[128,44,108,6],[130,0,110,6],[130,12,110,10,"ignore"],[130,18,110,6],[130,20,110,18],[131,0,111,8,"debug"],[131,10,111,8,"debug"],[131,15,111,13],[131,16,111,14],[131,42,111,13],[131,44,111,42,"ignore"],[131,50,111,48],[131,51,111,49,"filepath"],[131,59,111,13],[131,61,111,59,"dirname"],[131,68,111,13],[131,69,111,8],[132,0,112,7],[133,0,113,5],[134,0,114,3],[136,0,116,2],[136,11,116,9],[137,0,117,4,"config"],[137,6,117,4,"config"],[137,12,117,10],[137,14,117,4,"config"],[137,20,116,9],[138,0,118,4,"ignore"],[138,6,118,4,"ignore"],[138,12,118,10],[138,14,118,4,"ignore"],[139,0,116,9],[139,5,116,2],[140,0,120,1],[142,0,122,0],[142,11,122,9,"findRootConfig"],[142,25,122,0],[142,26,122,24,"dirname"],[142,33,122,0],[142,35,122,33,"envName"],[142,42,122,0],[142,44,122,42,"caller"],[142,50,122,0],[142,52,122,50],[143,0,123,2],[143,11,123,9,"loadOneConfig"],[143,24,123,22],[143,25,123,23,"ROOT_CONFIG_FILENAMES"],[143,46,123,22],[143,48,123,46,"dirname"],[143,55,123,22],[143,57,123,55,"envName"],[143,64,123,22],[143,66,123,64,"caller"],[143,72,123,22],[143,73,123,2],[144,0,124,1],[146,0,126,0],[146,11,126,9,"loadOneConfig"],[146,24,126,0],[146,25,126,23,"names"],[146,30,126,0],[146,32,126,30,"dirname"],[146,39,126,0],[146,41,126,39,"envName"],[146,48,126,0],[146,50,126,48,"caller"],[146,56,126,0],[146,58,126,79],[147,0,126,79],[147,8,126,56,"previousConfig"],[147,22,126,79],[147,93,126,73],[147,97,126,79],[148,0,127,2],[148,8,127,8,"config"],[148,14,127,14],[148,17,127,17,"names"],[148,22,127,22],[148,23,127,23,"reduce"],[148,29,127,17],[148,30,127,30],[148,40,127,31,"previousConfig"],[148,54,127,30],[148,56,127,47,"name"],[148,60,127,30],[148,62,127,56],[149,0,128,4],[149,10,128,10,"filepath"],[149,18,128,18],[149,21,128,21,"_path"],[149,26,128,26],[149,29,128,29,"default"],[149,36,128,21],[149,37,128,37,"resolve"],[149,44,128,21],[149,45,128,45,"dirname"],[149,52,128,21],[149,54,128,54,"name"],[149,58,128,21],[149,59,128,4],[151,0,130,4],[151,10,130,10,"config"],[151,16,130,16],[151,19,130,19,"readConfig"],[151,29,130,29],[151,30,130,30,"filepath"],[151,38,130,29],[151,40,130,40,"envName"],[151,47,130,29],[151,49,130,49,"caller"],[151,55,130,29],[151,56,130,4],[153,0,132,4],[153,10,132,8,"config"],[153,16,132,14],[153,20,132,18,"previousConfig"],[153,34,132,4],[153,36,132,34],[154,0,133,6],[154,14,133,12],[154,18,133,16,"Error"],[154,23,133,12],[154,24,133,22],[154,94,133,89,"_path"],[154,99,133,94],[154,102,133,97,"default"],[154,109,133,89],[154,110,133,105,"basename"],[154,118,133,89],[154,119,133,114,"previousConfig"],[154,133,133,128],[154,134,133,129,"filepath"],[154,142,133,89],[154,143,133,22],[154,163,133,151,"name"],[154,167,133,22],[154,189,133,170,"dirname"],[154,196,133,22],[154,197,133,12],[154,198,133,6],[155,0,134,5],[157,0,136,4],[157,13,136,11,"config"],[157,19,136,17],[157,23,136,21,"previousConfig"],[157,37,136,4],[158,0,137,3],[158,5,127,17],[158,7,137,5,"previousConfig"],[158,21,127,17],[158,22,127,2],[160,0,139,2],[160,8,139,6,"config"],[160,14,139,2],[160,16,139,14],[161,0,140,4,"debug"],[161,6,140,4,"debug"],[161,11,140,9],[161,12,140,10],[161,45,140,9],[161,47,140,45,"config"],[161,53,140,51],[161,54,140,52,"filepath"],[161,62,140,9],[161,64,140,62,"dirname"],[161,71,140,9],[161,72,140,4],[162,0,141,3],[164,0,143,2],[164,11,143,9,"config"],[164,17,143,2],[165,0,144,1],[167,0,146,0],[167,11,146,9,"loadConfig"],[167,21,146,0],[167,22,146,20,"name"],[167,26,146,0],[167,28,146,26,"dirname"],[167,35,146,0],[167,37,146,35,"envName"],[167,44,146,0],[167,46,146,44,"caller"],[167,52,146,0],[167,54,146,52],[168,0,147,2],[168,8,147,8,"filepath"],[168,16,147,16],[168,19,147,19,"_resolve"],[168,27,147,27],[168,30,147,30,"default"],[168,37,147,19],[168,38,147,38,"sync"],[168,42,147,19],[168,43,147,43,"name"],[168,47,147,19],[168,49,147,49],[169,0,148,4,"basedir"],[169,6,148,4,"basedir"],[169,13,148,11],[169,15,148,13,"dirname"],[170,0,147,49],[170,5,147,19],[170,6,147,2],[172,0,151,2],[172,8,151,8,"conf"],[172,12,151,12],[172,15,151,15,"readConfig"],[172,25,151,25],[172,26,151,26,"filepath"],[172,34,151,25],[172,36,151,36,"envName"],[172,43,151,25],[172,45,151,45,"caller"],[172,51,151,25],[172,52,151,2],[174,0,153,2],[174,8,153,6],[174,9,153,7,"conf"],[174,13,153,2],[174,15,153,13],[175,0,154,4],[175,12,154,10],[175,16,154,14,"Error"],[175,21,154,10],[175,39,154,35,"filepath"],[175,47,154,10],[175,84,154,4],[176,0,155,3],[178,0,157,2,"debug"],[178,4,157,2,"debug"],[178,9,157,7],[178,10,157,8],[178,37,157,7],[178,39,157,37,"name"],[178,43,157,7],[178,45,157,43,"dirname"],[178,52,157,7],[178,53,157,2],[179,0,158,2],[179,11,158,9,"conf"],[179,15,158,2],[180,0,159,1],[182,0,161,0],[182,11,161,9,"readConfig"],[182,21,161,0],[182,22,161,20,"filepath"],[182,30,161,0],[182,32,161,30,"envName"],[182,39,161,0],[182,41,161,39,"caller"],[182,47,161,0],[182,49,161,47],[183,0,162,2],[183,8,162,8,"ext"],[183,11,162,11],[183,14,162,14,"_path"],[183,19,162,19],[183,22,162,22,"default"],[183,29,162,14],[183,30,162,30,"extname"],[183,37,162,14],[183,38,162,38,"filepath"],[183,46,162,14],[183,47,162,2],[185,0,164,2],[185,11,164,9,"ext"],[185,14,164,12],[185,19,164,17],[185,24,164,9],[185,28,164,26,"ext"],[185,31,164,29],[185,36,164,34],[185,42,164,9],[185,45,164,43,"readConfigJS"],[185,57,164,55],[185,58,164,56,"filepath"],[185,66,164,55],[185,68,164,66],[186,0,165,4,"envName"],[186,6,165,4,"envName"],[186,13,165,11],[186,15,165,4,"envName"],[186,22,164,66],[187,0,166,4,"caller"],[187,6,166,4,"caller"],[187,12,166,10],[187,14,166,4,"caller"],[188,0,164,66],[188,5,164,55],[188,6,164,9],[188,9,167,7,"readConfigJSON5"],[188,24,167,22],[188,25,167,23,"filepath"],[188,33,167,22],[188,34,164,2],[189,0,168,1],[191,0,170,0],[191,6,170,6,"LOADING_CONFIGS"],[191,21,170,21],[191,24,170,24],[191,28,170,28,"Set"],[191,31,170,24],[191,33,170,0],[192,0,171,0],[192,6,171,6,"readConfigJS"],[192,18,171,18],[192,21,171,21],[192,22,171,22],[192,25,171,25,"_caching"],[192,33,171,33],[192,34,171,34,"makeStrongCache"],[192,49,171,21],[192,51,171,51],[192,61,171,52,"filepath"],[192,69,171,51],[192,71,171,62,"cache"],[192,76,171,51],[192,78,171,72],[193,0,172,2],[193,8,172,6],[193,9,172,7,"_fs"],[193,12,172,10],[193,15,172,13,"default"],[193,22,172,7],[193,23,172,21,"existsSync"],[193,33,172,7],[193,34,172,32,"filepath"],[193,42,172,7],[193,43,172,2],[193,45,172,43],[194,0,173,4,"cache"],[194,6,173,4,"cache"],[194,11,173,9],[194,12,173,10,"forever"],[194,19,173,4],[195,0,174,4],[195,13,174,11],[195,17,174,4],[196,0,175,3],[198,0,177,2],[198,8,177,6,"LOADING_CONFIGS"],[198,23,177,21],[198,24,177,22,"has"],[198,27,177,6],[198,28,177,26,"filepath"],[198,36,177,6],[198,37,177,2],[198,39,177,37],[199,0,178,4,"cache"],[199,6,178,4,"cache"],[199,11,178,9],[199,12,178,10,"never"],[199,17,178,4],[200,0,179,4,"debug"],[200,6,179,4,"debug"],[200,11,179,9],[200,12,179,10],[200,47,179,9],[200,49,179,47,"filepath"],[200,57,179,9],[200,58,179,4],[201,0,180,4],[201,13,180,11],[202,0,181,6,"filepath"],[202,8,181,6,"filepath"],[202,16,181,14],[202,18,181,6,"filepath"],[202,26,180,11],[203,0,182,6,"dirname"],[203,8,182,6,"dirname"],[203,15,182,13],[203,17,182,15,"_path"],[203,22,182,20],[203,25,182,23,"default"],[203,32,182,15],[203,33,182,31,"dirname"],[203,40,182,15],[203,41,182,39,"filepath"],[203,49,182,15],[203,50,180,11],[204,0,183,6,"options"],[204,8,183,6,"options"],[204,15,183,13],[204,17,183,15],[205,0,180,11],[205,7,180,4],[206,0,185,3],[208,0,187,2],[208,8,187,6,"options"],[208,15,187,2],[210,0,189,2],[210,8,189,6],[211,0,190,4,"LOADING_CONFIGS"],[211,6,190,4,"LOADING_CONFIGS"],[211,21,190,19],[211,22,190,20,"add"],[211,25,190,4],[211,26,190,24,"filepath"],[211,34,190,4],[213,0,192,4],[213,10,192,10,"configModule"],[213,22,192,22],[214,0,192,22],[215,0,192,22],[215,12,192,4],[217,0,194,4,"options"],[217,6,194,4,"options"],[217,13,194,11],[217,16,194,14,"configModule"],[217,28,194,26],[217,32,194,30,"configModule"],[217,44,194,42],[217,45,194,43,"__esModule"],[217,55,194,14],[217,58,194,56,"configModule"],[217,70,194,68],[217,71,194,69,"default"],[217,78,194,56],[217,82,194,80,"undefined"],[217,91,194,14],[217,94,194,92,"configModule"],[217,106,194,4],[218,0,195,3],[218,5,189,2],[218,6,195,4],[218,13,195,11,"err"],[218,16,195,4],[218,18,195,16],[219,0,196,4,"err"],[219,6,196,4,"err"],[219,9,196,7],[219,10,196,8,"message"],[219,17,196,4],[219,20,196,21,"filepath"],[219,28,196,4],[219,67,196,63,"err"],[219,70,196,66],[219,71,196,67,"message"],[219,78,196,4],[220,0,197,4],[220,12,197,10,"err"],[220,15,197,4],[221,0,198,3],[221,5,189,2],[221,14,198,12],[222,0,199,4,"LOADING_CONFIGS"],[222,6,199,4,"LOADING_CONFIGS"],[222,21,199,19],[222,22,199,20,"delete"],[222,28,199,4],[222,29,199,27,"filepath"],[222,37,199,4],[223,0,200,3],[225,0,202,2],[225,8,202,6],[225,15,202,13,"options"],[225,22,202,6],[225,27,202,25],[225,37,202,2],[225,39,202,37],[226,0,203,4,"options"],[226,6,203,4,"options"],[226,13,203,11],[226,16,203,14,"options"],[226,23,203,21],[226,24,203,22],[226,25,203,23],[226,28,203,26,"_configApi"],[226,38,203,36],[226,39,203,37,"default"],[226,46,203,22],[226,48,203,46,"cache"],[226,53,203,22],[226,54,203,21],[226,55,203,4],[227,0,204,4],[227,10,204,8],[227,11,204,9,"cache"],[227,16,204,14],[227,17,204,15,"configured"],[227,27,204,9],[227,29,204,4],[227,31,204,29,"throwConfigError"],[227,47,204,45],[228,0,205,3],[230,0,207,2],[230,8,207,6],[230,9,207,7,"options"],[230,16,207,6],[230,20,207,18],[230,27,207,25,"options"],[230,34,207,18],[230,39,207,37],[230,47,207,6],[230,51,207,49,"Array"],[230,56,207,54],[230,57,207,55,"isArray"],[230,64,207,49],[230,65,207,63,"options"],[230,72,207,49],[230,73,207,2],[230,75,207,73],[231,0,208,4],[231,12,208,10],[231,16,208,14,"Error"],[231,21,208,10],[231,22,208,23,"filepath"],[231,30,208,10],[231,92,208,4],[232,0,209,3],[234,0,211,2],[234,8,211,6],[234,15,211,13,"options"],[234,22,211,20],[234,23,211,21,"then"],[234,27,211,6],[234,32,211,30],[234,42,211,2],[234,44,211,42],[235,0,212,4],[235,12,212,10],[235,16,212,14,"Error"],[235,21,212,10],[235,22,212,20],[235,326,212,10],[235,327,212,4],[236,0,213,3],[238,0,215,2],[238,11,215,9],[239,0,216,4,"filepath"],[239,6,216,4,"filepath"],[239,14,216,12],[239,16,216,4,"filepath"],[239,24,215,9],[240,0,217,4,"dirname"],[240,6,217,4,"dirname"],[240,13,217,11],[240,15,217,13,"_path"],[240,20,217,18],[240,23,217,21,"default"],[240,30,217,13],[240,31,217,29,"dirname"],[240,38,217,13],[240,39,217,37,"filepath"],[240,47,217,13],[240,48,215,9],[241,0,218,4,"options"],[241,6,218,4,"options"],[241,13,218,11],[241,15,218,4,"options"],[242,0,215,9],[242,5,215,2],[243,0,220,1],[243,3,171,21],[243,4,171,0],[244,0,221,0],[244,6,221,6,"packageToBabelConfig"],[244,26,221,26],[244,29,221,29],[244,30,221,30],[244,33,221,33,"_caching"],[244,41,221,41],[244,42,221,42,"makeWeakCache"],[244,55,221,29],[244,57,221,57],[244,67,221,57,"file"],[244,71,221,61],[244,73,221,65],[245,0,222,2],[245,8,222,8,"babel"],[245,13,222,13],[245,16,222,16,"file"],[245,20,222,20],[245,21,222,21,"options"],[245,28,222,16],[245,29,222,29],[245,36,222,16],[245,37,222,2],[246,0,223,2],[246,8,223,6],[246,15,223,13,"babel"],[246,20,223,6],[246,25,223,23],[246,36,223,2],[246,38,223,36],[246,45,223,43],[246,49,223,36],[248,0,225,2],[248,8,225,6],[248,15,225,13,"babel"],[248,20,225,6],[248,25,225,23],[248,33,225,6],[248,37,225,35,"Array"],[248,42,225,40],[248,43,225,41,"isArray"],[248,50,225,35],[248,51,225,49,"babel"],[248,56,225,35],[248,57,225,6],[248,61,225,59,"babel"],[248,66,225,64],[248,71,225,69],[248,75,225,2],[248,77,225,75],[249,0,226,4],[249,12,226,10],[249,16,226,14,"Error"],[249,21,226,10],[249,22,226,23,"file"],[249,26,226,27],[249,27,226,28,"filepath"],[249,35,226,10],[249,76,226,4],[250,0,227,3],[252,0,229,2],[252,11,229,9],[253,0,230,4,"filepath"],[253,6,230,4,"filepath"],[253,14,230,12],[253,16,230,14,"file"],[253,20,230,18],[253,21,230,19,"filepath"],[253,29,229,9],[254,0,231,4,"dirname"],[254,6,231,4,"dirname"],[254,13,231,11],[254,15,231,13,"file"],[254,19,231,17],[254,20,231,18,"dirname"],[254,27,229,9],[255,0,232,4,"options"],[255,6,232,4,"options"],[255,13,232,11],[255,15,232,13,"babel"],[256,0,229,9],[256,5,229,2],[257,0,234,1],[257,3,221,29],[257,4,221,0],[258,0,235,0],[258,6,235,6,"readConfigJSON5"],[258,21,235,21],[258,24,235,24],[258,25,235,25],[258,28,235,28,"_utils"],[258,34,235,34],[258,35,235,35,"makeStaticFileCache"],[258,54,235,24],[258,56,235,56],[258,66,235,57,"filepath"],[258,74,235,56],[258,76,235,67,"content"],[258,83,235,56],[258,85,235,79],[259,0,236,2],[259,8,236,6,"options"],[259,15,236,2],[261,0,238,2],[261,8,238,6],[262,0,239,4,"options"],[262,6,239,4,"options"],[262,13,239,11],[262,16,239,14,"_json"],[262,21,239,19],[262,24,239,22,"default"],[262,31,239,14],[262,32,239,30,"parse"],[262,37,239,14],[262,38,239,36,"content"],[262,45,239,14],[262,46,239,4],[263,0,240,3],[263,5,238,2],[263,6,240,4],[263,13,240,11,"err"],[263,16,240,4],[263,18,240,16],[264,0,241,4,"err"],[264,6,241,4,"err"],[264,9,241,7],[264,10,241,8,"message"],[264,17,241,4],[264,20,241,21,"filepath"],[264,28,241,4],[264,67,241,63,"err"],[264,70,241,66],[264,71,241,67,"message"],[264,78,241,4],[265,0,242,4],[265,12,242,10,"err"],[265,15,242,4],[266,0,243,3],[268,0,245,2],[268,8,245,6],[268,9,245,7,"options"],[268,16,245,2],[268,18,245,16],[268,24,245,22],[268,28,245,26,"Error"],[268,33,245,22],[268,34,245,35,"filepath"],[268,42,245,22],[268,68,245,16],[270,0,247,2],[270,8,247,6],[270,15,247,13,"options"],[270,22,247,6],[270,27,247,25],[270,35,247,2],[270,37,247,35],[271,0,248,4],[271,12,248,10],[271,16,248,14,"Error"],[271,21,248,10],[271,22,248,23,"filepath"],[271,30,248,10],[271,63,248,59],[271,70,248,66,"options"],[271,77,248,10],[271,78,248,4],[272,0,249,3],[274,0,251,2],[274,8,251,6,"Array"],[274,13,251,11],[274,14,251,12,"isArray"],[274,21,251,6],[274,22,251,20,"options"],[274,29,251,6],[274,30,251,2],[274,32,251,30],[275,0,252,4],[275,12,252,10],[275,16,252,14,"Error"],[275,21,252,10],[275,22,252,23,"filepath"],[275,30,252,10],[275,76,252,4],[276,0,253,3],[278,0,255,2],[278,11,255,9],[279,0,256,4,"filepath"],[279,6,256,4,"filepath"],[279,14,256,12],[279,16,256,4,"filepath"],[279,24,255,9],[280,0,257,4,"dirname"],[280,6,257,4,"dirname"],[280,13,257,11],[280,15,257,13,"_path"],[280,20,257,18],[280,23,257,21,"default"],[280,30,257,13],[280,31,257,29,"dirname"],[280,38,257,13],[280,39,257,37,"filepath"],[280,47,257,13],[280,48,255,9],[281,0,258,4,"options"],[281,6,258,4,"options"],[281,13,258,11],[281,15,258,4,"options"],[282,0,255,9],[282,5,255,2],[283,0,260,1],[283,3,235,24],[283,4,235,0],[284,0,261,0],[284,6,261,6,"readIgnoreConfig"],[284,22,261,22],[284,25,261,25],[284,26,261,26],[284,29,261,29,"_utils"],[284,35,261,35],[284,36,261,36,"makeStaticFileCache"],[284,55,261,25],[284,57,261,57],[284,67,261,58,"filepath"],[284,75,261,57],[284,77,261,68,"content"],[284,84,261,57],[284,86,261,80],[285,0,262,2],[285,8,262,8,"ignoreDir"],[285,17,262,17],[285,20,262,20,"_path"],[285,25,262,25],[285,28,262,28,"default"],[285,35,262,20],[285,36,262,36,"dirname"],[285,43,262,20],[285,44,262,44,"filepath"],[285,52,262,20],[285,53,262,2],[287,0,264,2],[287,8,264,8,"ignorePatterns"],[287,22,264,22],[287,25,264,25,"content"],[287,32,264,32],[287,33,264,33,"split"],[287,38,264,25],[287,39,264,39],[287,43,264,25],[287,45,264,45,"map"],[287,48,264,25],[287,49,264,49],[287,59,264,49,"line"],[287,63,264,53],[288,0,264,53],[288,13,264,57,"line"],[288,17,264,61],[288,18,264,62,"replace"],[288,25,264,57],[288,26,264,70],[288,35,264,57],[288,37,264,81],[288,39,264,57],[288,41,264,85,"trim"],[288,45,264,57],[288,47,264,53],[289,0,264,53],[289,5,264,25],[289,7,264,93,"filter"],[289,13,264,25],[289,14,264,100],[289,24,264,100,"line"],[289,28,264,104],[290,0,264,104],[290,13,264,108],[290,14,264,109],[290,15,264,110,"line"],[290,19,264,104],[291,0,264,104],[291,5,264,25],[291,6,264,2],[293,0,266,2],[293,26,266,24,"ignorePatterns"],[293,40,266,2],[293,207,266,40],[294,0,266,40],[296,0,266,40],[297,0,266,40],[298,0,266,40],[299,0,266,40],[300,0,266,40],[301,0,266,40],[302,0,266,40],[303,0,266,40],[305,0,266,40],[305,10,266,13,"pattern"],[305,18,266,40],[307,0,267,4],[307,10,267,8,"pattern"],[307,18,267,15],[307,19,267,16],[307,20,267,15],[307,21,267,8],[307,26,267,23],[307,29,267,4],[307,31,267,28],[308,0,268,6],[308,14,268,12],[308,18,268,16,"Error"],[308,23,268,12],[308,67,268,6],[309,0,269,5],[310,0,270,3],[312,0,272,2],[312,11,272,9],[313,0,273,4,"filepath"],[313,6,273,4,"filepath"],[313,14,273,12],[313,16,273,4,"filepath"],[313,24,272,9],[314,0,274,4,"dirname"],[314,6,274,4,"dirname"],[314,13,274,11],[314,15,274,13,"_path"],[314,20,274,18],[314,23,274,21,"default"],[314,30,274,13],[314,31,274,29,"dirname"],[314,38,274,13],[314,39,274,37,"filepath"],[314,47,274,13],[314,48,272,9],[315,0,275,4,"ignore"],[315,6,275,4,"ignore"],[315,12,275,10],[315,14,275,12,"ignorePatterns"],[315,28,275,26],[315,29,275,27,"map"],[315,32,275,12],[315,33,275,31],[315,43,275,31,"pattern"],[315,50,275,38],[316,0,275,38],[316,15,275,42],[316,16,275,43],[316,19,275,46,"_patternToRegex"],[316,34,275,61],[316,35,275,62,"default"],[316,42,275,42],[316,44,275,71,"pattern"],[316,51,275,42],[316,53,275,80,"ignoreDir"],[316,62,275,42],[316,63,275,38],[317,0,275,38],[317,7,275,12],[318,0,272,9],[318,5,272,2],[319,0,277,1],[319,3,261,25],[319,4,261,0],[321,0,279,0],[321,11,279,9,"throwConfigError"],[321,27,279,0],[321,30,279,28],[322,0,280,2],[322,10,280,8],[322,14,280,12,"Error"],[322,19,280,8],[322,1562,280,2],[323,0,314,1]]},"type":"js/module"}]}