{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"./utils","data":{"isAsync":false}},{"name":"./placeholders","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n\n  var _utils = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"./utils\"));\n\n  var _placeholders = _$$_REQUIRE(_dependencyMap[2], \"./placeholders\");\n\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n\n    return cache;\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n\n    var cache = _getRequireWildcardCache();\n\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj.default = obj;\n\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n\n    return newObj;\n  }\n\n  (0, _utils.default)(\"Noop\", {\n    visitor: []\n  });\n  (0, _utils.default)(\"Placeholder\", {\n    visitor: [],\n    builder: [\"expectedNode\", \"name\"],\n    fields: {\n      name: {\n        validate: (0, _utils.assertNodeType)(\"Identifier\")\n      },\n      expectedNode: {\n        validate: (0, _utils.assertOneOf).apply(void 0, _toConsumableArray(_placeholders.PLACEHOLDERS))\n      }\n    }\n  });\n  (0, _utils.default)(\"V8IntrinsicIdentifier\", {\n    builder: [\"name\"],\n    fields: {\n      name: {\n        validate: (0, _utils.assertValueType)(\"string\")\n      }\n    }\n  });\n});","map":[[2,0,1,0],[6,0,3,0],[6,6,3,4,"_utils"],[6,12,3,10],[6,15,3,13,"_interopRequireWildcard"],[6,38,3,36],[6,39,3,37,"require"],[6,50,3,44],[6,80,3,36],[6,81,3,0],[8,0,5,0],[8,6,5,4,"_placeholders"],[8,19,5,17],[8,22,5,20,"require"],[8,33,5,27],[8,70,5,0],[10,0,7,0],[10,11,7,9,"_getRequireWildcardCache"],[10,35,7,0],[10,38,7,36],[11,0,7,38],[11,8,7,42],[11,15,7,49,"WeakMap"],[11,22,7,42],[11,27,7,61],[11,37,7,38],[11,39,7,73],[11,46,7,80],[11,50,7,73],[12,0,7,86],[12,8,7,90,"cache"],[12,13,7,95],[12,16,7,98],[12,20,7,102,"WeakMap"],[12,27,7,98],[12,29,7,86],[14,0,7,113,"_getRequireWildcardCache"],[14,4,7,113,"_getRequireWildcardCache"],[14,28,7,137],[14,31,7,140],[14,67,7,152],[15,0,7,154],[15,13,7,161,"cache"],[15,18,7,154],[16,0,7,169],[16,5,7,113],[18,0,7,171],[18,11,7,178,"cache"],[18,16,7,171],[19,0,7,186],[21,0,9,0],[21,11,9,9,"_interopRequireWildcard"],[21,34,9,0],[21,35,9,33,"obj"],[21,38,9,0],[21,40,9,38],[22,0,9,40],[22,8,9,44,"obj"],[22,11,9,47],[22,15,9,51,"obj"],[22,18,9,54],[22,19,9,55,"__esModule"],[22,29,9,40],[22,31,9,67],[23,0,9,69],[23,13,9,76,"obj"],[23,16,9,69],[24,0,9,82],[26,0,9,83],[26,8,9,87,"obj"],[26,11,9,90],[26,16,9,95],[26,20,9,87],[26,24,9,103],[26,31,9,110,"obj"],[26,34,9,103],[26,39,9,118],[26,47,9,103],[26,51,9,130],[26,58,9,137,"obj"],[26,61,9,130],[26,66,9,145],[26,76,9,83],[26,78,9,157],[27,0,9,159],[27,13,9,166],[28,0,9,168,"default"],[28,8,9,168,"default"],[28,15,9,175],[28,17,9,177,"obj"],[29,0,9,166],[29,7,9,159],[30,0,9,185],[32,0,9,186],[32,8,9,190,"cache"],[32,13,9,195],[32,16,9,198,"_getRequireWildcardCache"],[32,40,9,222],[32,42,9,186],[34,0,9,226],[34,8,9,230,"cache"],[34,13,9,235],[34,17,9,239,"cache"],[34,22,9,244],[34,23,9,245,"has"],[34,26,9,239],[34,27,9,249,"obj"],[34,30,9,239],[34,31,9,226],[34,33,9,255],[35,0,9,257],[35,13,9,264,"cache"],[35,18,9,269],[35,19,9,270,"get"],[35,22,9,264],[35,23,9,274,"obj"],[35,26,9,264],[35,27,9,257],[36,0,9,281],[38,0,9,282],[38,8,9,286,"newObj"],[38,14,9,292],[38,17,9,295],[38,19,9,282],[39,0,9,299],[39,8,9,303,"hasPropertyDescriptor"],[39,29,9,324],[39,32,9,327,"Object"],[39,38,9,333],[39,39,9,334,"defineProperty"],[39,53,9,327],[39,57,9,352,"Object"],[39,63,9,358],[39,64,9,359,"getOwnPropertyDescriptor"],[39,88,9,299],[41,0,9,385],[41,9,9,390],[41,13,9,394,"key"],[41,16,9,385],[41,20,9,401,"obj"],[41,23,9,385],[41,25,9,406],[42,0,9,408],[42,10,9,412,"Object"],[42,16,9,418],[42,17,9,419,"prototype"],[42,26,9,412],[42,27,9,429,"hasOwnProperty"],[42,41,9,412],[42,42,9,444,"call"],[42,46,9,412],[42,47,9,449,"obj"],[42,50,9,412],[42,52,9,454,"key"],[42,55,9,412],[42,56,9,408],[42,58,9,460],[43,0,9,462],[43,12,9,466,"desc"],[43,16,9,470],[43,19,9,473,"hasPropertyDescriptor"],[43,40,9,494],[43,43,9,497,"Object"],[43,49,9,503],[43,50,9,504,"getOwnPropertyDescriptor"],[43,74,9,497],[43,75,9,529,"obj"],[43,78,9,497],[43,80,9,534,"key"],[43,83,9,497],[43,84,9,494],[43,87,9,541],[43,91,9,462],[45,0,9,547],[45,12,9,551,"desc"],[45,16,9,555],[45,21,9,560,"desc"],[45,25,9,564],[45,26,9,565,"get"],[45,29,9,560],[45,33,9,572,"desc"],[45,37,9,576],[45,38,9,577,"set"],[45,41,9,555],[45,42,9,547],[45,44,9,583],[46,0,9,585,"Object"],[46,10,9,585,"Object"],[46,16,9,591],[46,17,9,592,"defineProperty"],[46,31,9,585],[46,32,9,607,"newObj"],[46,38,9,585],[46,40,9,615,"key"],[46,43,9,585],[46,45,9,620,"desc"],[46,49,9,585],[47,0,9,628],[47,9,9,547],[47,15,9,634],[48,0,9,636,"newObj"],[48,10,9,636,"newObj"],[48,16,9,642],[48,17,9,643,"key"],[48,20,9,642],[48,21,9,636],[48,24,9,650,"obj"],[48,27,9,653],[48,28,9,654,"key"],[48,31,9,653],[48,32,9,636],[49,0,9,661],[50,0,9,663],[51,0,9,665],[53,0,9,666,"newObj"],[53,4,9,666,"newObj"],[53,10,9,672],[53,11,9,673,"default"],[53,18,9,666],[53,21,9,683,"obj"],[53,24,9,666],[55,0,9,688],[55,8,9,692,"cache"],[55,13,9,688],[55,15,9,699],[56,0,9,701,"cache"],[56,6,9,701,"cache"],[56,11,9,706],[56,12,9,707,"set"],[56,15,9,701],[56,16,9,711,"obj"],[56,19,9,701],[56,21,9,716,"newObj"],[56,27,9,701],[57,0,9,726],[59,0,9,727],[59,11,9,734,"newObj"],[59,17,9,727],[60,0,9,743],[62,0,11,0],[62,3,11,1],[62,6,11,4,"_utils"],[62,12,11,10],[62,13,11,11,"default"],[62,20,11,0],[62,22,11,20],[62,28,11,0],[62,30,11,28],[63,0,12,2,"visitor"],[63,4,12,2,"visitor"],[63,11,12,9],[63,13,12,11],[64,0,11,28],[64,3,11,0],[65,0,14,0],[65,3,14,1],[65,6,14,4,"_utils"],[65,12,14,10],[65,13,14,11,"default"],[65,20,14,0],[65,22,14,20],[65,35,14,0],[65,37,14,35],[66,0,15,2,"visitor"],[66,4,15,2,"visitor"],[66,11,15,9],[66,13,15,11],[66,15,14,35],[67,0,16,2,"builder"],[67,4,16,2,"builder"],[67,11,16,9],[67,13,16,11],[67,14,16,12],[67,28,16,11],[67,30,16,28],[67,36,16,11],[67,37,14,35],[68,0,17,2,"fields"],[68,4,17,2,"fields"],[68,10,17,8],[68,12,17,10],[69,0,18,4,"name"],[69,6,18,4,"name"],[69,10,18,8],[69,12,18,10],[70,0,19,6,"validate"],[70,8,19,6,"validate"],[70,16,19,14],[70,18,19,16],[70,19,19,17],[70,22,19,20,"_utils"],[70,28,19,26],[70,29,19,27,"assertNodeType"],[70,43,19,16],[70,45,19,43],[70,57,19,16],[71,0,18,10],[71,7,17,10],[72,0,21,4,"expectedNode"],[72,6,21,4,"expectedNode"],[72,18,21,16],[72,20,21,18],[73,0,22,6,"validate"],[73,8,22,6,"validate"],[73,16,22,14],[73,18,22,16],[73,19,22,17],[73,22,22,20,"_utils"],[73,28,22,26],[73,29,22,27,"assertOneOf"],[73,40,22,16],[73,75,22,43,"_placeholders"],[73,88,22,56],[73,89,22,57,"PLACEHOLDERS"],[73,101,22,16],[74,0,21,18],[75,0,17,10],[76,0,14,35],[76,3,14,0],[77,0,26,0],[77,3,26,1],[77,6,26,4,"_utils"],[77,12,26,10],[77,13,26,11,"default"],[77,20,26,0],[77,22,26,20],[77,45,26,0],[77,47,26,45],[78,0,27,2,"builder"],[78,4,27,2,"builder"],[78,11,27,9],[78,13,27,11],[78,14,27,12],[78,20,27,11],[78,21,26,45],[79,0,28,2,"fields"],[79,4,28,2,"fields"],[79,10,28,8],[79,12,28,10],[80,0,29,4,"name"],[80,6,29,4,"name"],[80,10,29,8],[80,12,29,10],[81,0,30,6,"validate"],[81,8,30,6,"validate"],[81,16,30,14],[81,18,30,16],[81,19,30,17],[81,22,30,20,"_utils"],[81,28,30,26],[81,29,30,27,"assertValueType"],[81,44,30,16],[81,46,30,44],[81,54,30,16],[82,0,29,10],[83,0,28,10],[84,0,26,45],[84,3,26,0]]},"type":"js/module"}]}