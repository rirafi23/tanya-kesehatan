{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"lodash/isInteger","data":{"isAsync":false}},{"name":"lodash/repeat","data":{"isAsync":false}},{"name":"./buffer","data":{"isAsync":false}},{"name":"./node","data":{"isAsync":false}},{"name":"@babel/types","data":{"isAsync":false}},{"name":"./generators","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _extends = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _isInteger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"lodash/isInteger\"));\n\n  var _repeat = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"lodash/repeat\"));\n\n  var _buffer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./buffer\"));\n\n  var n = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"./node\"));\n\n  var t = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7], \"@babel/types\"));\n\n  var generatorFunctions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"./generators\"));\n\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n\n    return cache;\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n\n    var cache = _getRequireWildcardCache();\n\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj.default = obj;\n\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n\n    return newObj;\n  }\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var SCIENTIFIC_NOTATION = /e/i;\n  var ZERO_DECIMAL_INTEGER = /\\.0+$/;\n  var NON_DECIMAL_LITERAL = /^0[box]/;\n\n  var Printer = function () {\n    function Printer(format, map) {\n      _classCallCheck(this, Printer);\n\n      this.inForStatementInitCounter = 0;\n      this._printStack = [];\n      this._indent = 0;\n      this._insideAux = false;\n      this._printedCommentStarts = {};\n      this._parenPushNewlineState = null;\n      this._noLineTerminator = false;\n      this._printAuxAfterOnNextUserNode = false;\n      this._printedComments = new WeakSet();\n      this._endsWithInteger = false;\n      this._endsWithWord = false;\n      this.format = format || {};\n      this._buf = new _buffer.default(map);\n    }\n\n    _createClass(Printer, [{\n      key: \"generate\",\n      value: function generate(ast) {\n        this.print(ast);\n\n        this._maybeAddAuxComment();\n\n        return this._buf.get();\n      }\n    }, {\n      key: \"indent\",\n      value: function indent() {\n        if (this.format.compact || this.format.concise) return;\n        this._indent++;\n      }\n    }, {\n      key: \"dedent\",\n      value: function dedent() {\n        if (this.format.compact || this.format.concise) return;\n        this._indent--;\n      }\n    }, {\n      key: \"semicolon\",\n      value: function semicolon() {\n        var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        this._maybeAddAuxComment();\n\n        this._append(\";\", !force);\n      }\n    }, {\n      key: \"rightBrace\",\n      value: function rightBrace() {\n        if (this.format.minified) {\n          this._buf.removeLastSemicolon();\n        }\n\n        this.token(\"}\");\n      }\n    }, {\n      key: \"space\",\n      value: function space() {\n        var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        if (this.format.compact) return;\n\n        if (this._buf.hasContent() && !this.endsWith(\" \") && !this.endsWith(\"\\n\") || force) {\n          this._space();\n        }\n      }\n    }, {\n      key: \"word\",\n      value: function word(str) {\n        if (this._endsWithWord || this.endsWith(\"/\") && str.indexOf(\"/\") === 0) {\n          this._space();\n        }\n\n        this._maybeAddAuxComment();\n\n        this._append(str);\n\n        this._endsWithWord = true;\n      }\n    }, {\n      key: \"number\",\n      value: function number(str) {\n        this.word(str);\n        this._endsWithInteger = (0, _isInteger.default)(+str) && !NON_DECIMAL_LITERAL.test(str) && !SCIENTIFIC_NOTATION.test(str) && !ZERO_DECIMAL_INTEGER.test(str) && str[str.length - 1] !== \".\";\n      }\n    }, {\n      key: \"token\",\n      value: function token(str) {\n        if (str === \"--\" && this.endsWith(\"!\") || str[0] === \"+\" && this.endsWith(\"+\") || str[0] === \"-\" && this.endsWith(\"-\") || str[0] === \".\" && this._endsWithInteger) {\n          this._space();\n        }\n\n        this._maybeAddAuxComment();\n\n        this._append(str);\n      }\n    }, {\n      key: \"newline\",\n      value: function newline(i) {\n        if (this.format.retainLines || this.format.compact) return;\n\n        if (this.format.concise) {\n          this.space();\n          return;\n        }\n\n        if (this.endsWith(\"\\n\\n\")) return;\n        if (typeof i !== \"number\") i = 1;\n        i = Math.min(2, i);\n        if (this.endsWith(\"{\\n\") || this.endsWith(\":\\n\")) i--;\n        if (i <= 0) return;\n\n        for (var j = 0; j < i; j++) {\n          this._newline();\n        }\n      }\n    }, {\n      key: \"endsWith\",\n      value: function endsWith(str) {\n        return this._buf.endsWith(str);\n      }\n    }, {\n      key: \"removeTrailingNewline\",\n      value: function removeTrailingNewline() {\n        this._buf.removeTrailingNewline();\n      }\n    }, {\n      key: \"exactSource\",\n      value: function exactSource(loc, cb) {\n        this._catchUp(\"start\", loc);\n\n        this._buf.exactSource(loc, cb);\n      }\n    }, {\n      key: \"source\",\n      value: function source(prop, loc) {\n        this._catchUp(prop, loc);\n\n        this._buf.source(prop, loc);\n      }\n    }, {\n      key: \"withSource\",\n      value: function withSource(prop, loc, cb) {\n        this._catchUp(prop, loc);\n\n        this._buf.withSource(prop, loc, cb);\n      }\n    }, {\n      key: \"_space\",\n      value: function _space() {\n        this._append(\" \", true);\n      }\n    }, {\n      key: \"_newline\",\n      value: function _newline() {\n        this._append(\"\\n\", true);\n      }\n    }, {\n      key: \"_append\",\n      value: function _append(str) {\n        var queue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        this._maybeAddParen(str);\n\n        this._maybeIndent(str);\n\n        if (queue) this._buf.queue(str);else this._buf.append(str);\n        this._endsWithWord = false;\n        this._endsWithInteger = false;\n      }\n    }, {\n      key: \"_maybeIndent\",\n      value: function _maybeIndent(str) {\n        if (this._indent && this.endsWith(\"\\n\") && str[0] !== \"\\n\") {\n          this._buf.queue(this._getIndent());\n        }\n      }\n    }, {\n      key: \"_maybeAddParen\",\n      value: function _maybeAddParen(str) {\n        var parenPushNewlineState = this._parenPushNewlineState;\n        if (!parenPushNewlineState) return;\n        this._parenPushNewlineState = null;\n        var i;\n\n        for (i = 0; i < str.length && str[i] === \" \"; i++) {\n          continue;\n        }\n\n        if (i === str.length) return;\n        var cha = str[i];\n\n        if (cha !== \"\\n\") {\n          if (cha !== \"/\") return;\n          if (i + 1 === str.length) return;\n          var chaPost = str[i + 1];\n          if (chaPost !== \"/\" && chaPost !== \"*\") return;\n        }\n\n        this.token(\"(\");\n        this.indent();\n        parenPushNewlineState.printed = true;\n      }\n    }, {\n      key: \"_catchUp\",\n      value: function _catchUp(prop, loc) {\n        if (!this.format.retainLines) return;\n        var pos = loc ? loc[prop] : null;\n\n        if (pos && pos.line !== null) {\n          var count = pos.line - this._buf.getCurrentLine();\n\n          for (var i = 0; i < count; i++) {\n            this._newline();\n          }\n        }\n      }\n    }, {\n      key: \"_getIndent\",\n      value: function _getIndent() {\n        return (0, _repeat.default)(this.format.indent.style, this._indent);\n      }\n    }, {\n      key: \"startTerminatorless\",\n      value: function startTerminatorless() {\n        var isLabel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        if (isLabel) {\n          this._noLineTerminator = true;\n          return null;\n        } else {\n          return this._parenPushNewlineState = {\n            printed: false\n          };\n        }\n      }\n    }, {\n      key: \"endTerminatorless\",\n      value: function endTerminatorless(state) {\n        this._noLineTerminator = false;\n\n        if (state && state.printed) {\n          this.dedent();\n          this.newline();\n          this.token(\")\");\n        }\n      }\n    }, {\n      key: \"print\",\n      value: function print(node, parent) {\n        var _this = this;\n\n        if (!node) return;\n        var oldConcise = this.format.concise;\n\n        if (node._compact) {\n          this.format.concise = true;\n        }\n\n        var printMethod = this[node.type];\n\n        if (!printMethod) {\n          throw new ReferenceError(\"unknown node of type \" + JSON.stringify(node.type) + \" with constructor \" + JSON.stringify(node && node.constructor.name));\n        }\n\n        this._printStack.push(node);\n\n        var oldInAux = this._insideAux;\n        this._insideAux = !node.loc;\n\n        this._maybeAddAuxComment(this._insideAux && !oldInAux);\n\n        var needsParens = n.needsParens(node, parent, this._printStack);\n\n        if (this.format.retainFunctionParens && node.type === \"FunctionExpression\" && node.extra && node.extra.parenthesized) {\n          needsParens = true;\n        }\n\n        if (needsParens) this.token(\"(\");\n\n        this._printLeadingComments(node);\n\n        var loc = t.isProgram(node) || t.isFile(node) ? null : node.loc;\n        this.withSource(\"start\", loc, function () {\n          printMethod.call(_this, node, parent);\n        });\n\n        this._printTrailingComments(node);\n\n        if (needsParens) this.token(\")\");\n\n        this._printStack.pop();\n\n        this.format.concise = oldConcise;\n        this._insideAux = oldInAux;\n      }\n    }, {\n      key: \"_maybeAddAuxComment\",\n      value: function _maybeAddAuxComment(enteredPositionlessNode) {\n        if (enteredPositionlessNode) this._printAuxBeforeComment();\n        if (!this._insideAux) this._printAuxAfterComment();\n      }\n    }, {\n      key: \"_printAuxBeforeComment\",\n      value: function _printAuxBeforeComment() {\n        if (this._printAuxAfterOnNextUserNode) return;\n        this._printAuxAfterOnNextUserNode = true;\n        var comment = this.format.auxiliaryCommentBefore;\n\n        if (comment) {\n          this._printComment({\n            type: \"CommentBlock\",\n            value: comment\n          });\n        }\n      }\n    }, {\n      key: \"_printAuxAfterComment\",\n      value: function _printAuxAfterComment() {\n        if (!this._printAuxAfterOnNextUserNode) return;\n        this._printAuxAfterOnNextUserNode = false;\n        var comment = this.format.auxiliaryCommentAfter;\n\n        if (comment) {\n          this._printComment({\n            type: \"CommentBlock\",\n            value: comment\n          });\n        }\n      }\n    }, {\n      key: \"getPossibleRaw\",\n      value: function getPossibleRaw(node) {\n        var extra = node.extra;\n\n        if (extra && extra.raw != null && extra.rawValue != null && node.value === extra.rawValue) {\n          return extra.raw;\n        }\n      }\n    }, {\n      key: \"printJoin\",\n      value: function printJoin(nodes, parent) {\n        var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        if (!nodes || !nodes.length) return;\n        if (opts.indent) this.indent();\n        var newlineOpts = {\n          addNewlines: opts.addNewlines\n        };\n\n        for (var i = 0; i < nodes.length; i++) {\n          var node = nodes[i];\n          if (!node) continue;\n          if (opts.statement) this._printNewline(true, node, parent, newlineOpts);\n          this.print(node, parent);\n\n          if (opts.iterator) {\n            opts.iterator(node, i);\n          }\n\n          if (opts.separator && i < nodes.length - 1) {\n            opts.separator.call(this);\n          }\n\n          if (opts.statement) this._printNewline(false, node, parent, newlineOpts);\n        }\n\n        if (opts.indent) this.dedent();\n      }\n    }, {\n      key: \"printAndIndentOnComments\",\n      value: function printAndIndentOnComments(node, parent) {\n        var indent = node.leadingComments && node.leadingComments.length > 0;\n        if (indent) this.indent();\n        this.print(node, parent);\n        if (indent) this.dedent();\n      }\n    }, {\n      key: \"printBlock\",\n      value: function printBlock(parent) {\n        var node = parent.body;\n\n        if (!t.isEmptyStatement(node)) {\n          this.space();\n        }\n\n        this.print(node, parent);\n      }\n    }, {\n      key: \"_printTrailingComments\",\n      value: function _printTrailingComments(node) {\n        this._printComments(this._getComments(false, node));\n      }\n    }, {\n      key: \"_printLeadingComments\",\n      value: function _printLeadingComments(node) {\n        this._printComments(this._getComments(true, node));\n      }\n    }, {\n      key: \"printInnerComments\",\n      value: function printInnerComments(node) {\n        var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        if (!node.innerComments || !node.innerComments.length) return;\n        if (indent) this.indent();\n\n        this._printComments(node.innerComments);\n\n        if (indent) this.dedent();\n      }\n    }, {\n      key: \"printSequence\",\n      value: function printSequence(nodes, parent) {\n        var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        opts.statement = true;\n        return this.printJoin(nodes, parent, opts);\n      }\n    }, {\n      key: \"printList\",\n      value: function printList(items, parent) {\n        var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        if (opts.separator == null) {\n          opts.separator = commaSeparator;\n        }\n\n        return this.printJoin(items, parent, opts);\n      }\n    }, {\n      key: \"_printNewline\",\n      value: function _printNewline(leading, node, parent, opts) {\n        if (this.format.retainLines || this.format.compact) return;\n\n        if (this.format.concise) {\n          this.space();\n          return;\n        }\n\n        var lines = 0;\n\n        if (this._buf.hasContent()) {\n          if (!leading) lines++;\n          if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;\n          var needs = leading ? n.needsWhitespaceBefore : n.needsWhitespaceAfter;\n          if (needs(node, parent)) lines++;\n        }\n\n        this.newline(lines);\n      }\n    }, {\n      key: \"_getComments\",\n      value: function _getComments(leading, node) {\n        return node && (leading ? node.leadingComments : node.trailingComments) || [];\n      }\n    }, {\n      key: \"_printComment\",\n      value: function _printComment(comment) {\n        var _this2 = this;\n\n        if (!this.format.shouldPrintComment(comment.value)) return;\n        if (comment.ignore) return;\n        if (this._printedComments.has(comment)) return;\n\n        this._printedComments.add(comment);\n\n        if (comment.start != null) {\n          if (this._printedCommentStarts[comment.start]) return;\n          this._printedCommentStarts[comment.start] = true;\n        }\n\n        var isBlockComment = comment.type === \"CommentBlock\";\n        this.newline(this._buf.hasContent() && !this._noLineTerminator && isBlockComment ? 1 : 0);\n        if (!this.endsWith(\"[\") && !this.endsWith(\"{\")) this.space();\n        var val = !isBlockComment && !this._noLineTerminator ? \"//\" + comment.value + \"\\n\" : \"/*\" + comment.value + \"*/\";\n\n        if (isBlockComment && this.format.indent.adjustMultilineComment) {\n          var offset = comment.loc && comment.loc.start.column;\n\n          if (offset) {\n            var newlineRegex = new RegExp(\"\\\\n\\\\s{1,\" + offset + \"}\", \"g\");\n            val = val.replace(newlineRegex, \"\\n\");\n          }\n\n          var indentSize = Math.max(this._getIndent().length, this._buf.getCurrentColumn());\n          val = val.replace(/\\n(?!$)/g, \"\\n\" + (0, _repeat.default)(\" \", indentSize));\n        }\n\n        if (this.endsWith(\"/\")) this._space();\n        this.withSource(\"start\", comment.loc, function () {\n          _this2._append(val);\n        });\n        this.newline(isBlockComment && !this._noLineTerminator ? 1 : 0);\n      }\n    }, {\n      key: \"_printComments\",\n      value: function _printComments(comments) {\n        if (!comments || !comments.length) return;\n\n        for (var _iterator = comments, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var _comment = _ref;\n\n          this._printComment(_comment);\n        }\n      }\n    }]);\n\n    return Printer;\n  }();\n\n  exports.default = Printer;\n\n  _extends(Printer.prototype, generatorFunctions);\n\n  function commaSeparator() {\n    this.token(\",\");\n    this.space();\n  }\n});","map":[[2,0,1,0],[10,0,3,0,"Object"],[10,2,3,0,"Object"],[10,8,3,6],[10,9,3,7,"defineProperty"],[10,23,3,0],[10,24,3,22,"exports"],[10,31,3,0],[10,33,3,31],[10,45,3,0],[10,47,3,45],[11,0,4,2,"value"],[11,4,4,2,"value"],[11,9,4,7],[11,11,4,9],[12,0,3,45],[12,3,3,0],[13,0,6,0,"exports"],[13,2,6,0,"exports"],[13,9,6,7],[13,10,6,8,"default"],[13,17,6,0],[13,20,6,18],[13,25,6,23],[13,26,6,0],[15,0,8,0],[15,6,8,4,"_isInteger"],[15,16,8,14],[15,19,8,17,"_interopRequireDefault"],[15,41,8,39],[15,42,8,40,"require"],[15,53,8,47],[15,92,8,39],[15,93,8,0],[17,0,10,0],[17,6,10,4,"_repeat"],[17,13,10,11],[17,16,10,14,"_interopRequireDefault"],[17,38,10,36],[17,39,10,37,"require"],[17,50,10,44],[17,86,10,36],[17,87,10,0],[19,0,12,0],[19,6,12,4,"_buffer"],[19,13,12,11],[19,16,12,14,"_interopRequireDefault"],[19,38,12,36],[19,39,12,37,"require"],[19,50,12,44],[19,81,12,36],[19,82,12,0],[21,0,14,0],[21,6,14,4,"n"],[21,7,14,5],[21,10,14,8,"_interopRequireWildcard"],[21,33,14,31],[21,34,14,32,"require"],[21,45,14,39],[21,74,14,31],[21,75,14,0],[23,0,16,0],[23,6,16,4,"t"],[23,7,16,5],[23,10,16,8,"_interopRequireWildcard"],[23,33,16,31],[23,34,16,32,"require"],[23,45,16,39],[23,80,16,31],[23,81,16,0],[25,0,18,0],[25,6,18,4,"generatorFunctions"],[25,24,18,22],[25,27,18,25,"_interopRequireWildcard"],[25,50,18,48],[25,51,18,49,"require"],[25,62,18,56],[25,97,18,48],[25,98,18,0],[27,0,20,0],[27,11,20,9,"_getRequireWildcardCache"],[27,35,20,0],[27,38,20,36],[28,0,20,38],[28,8,20,42],[28,15,20,49,"WeakMap"],[28,22,20,42],[28,27,20,61],[28,37,20,38],[28,39,20,73],[28,46,20,80],[28,50,20,73],[29,0,20,86],[29,8,20,90,"cache"],[29,13,20,95],[29,16,20,98],[29,20,20,102,"WeakMap"],[29,27,20,98],[29,29,20,86],[31,0,20,113,"_getRequireWildcardCache"],[31,4,20,113,"_getRequireWildcardCache"],[31,28,20,137],[31,31,20,140],[31,67,20,152],[32,0,20,154],[32,13,20,161,"cache"],[32,18,20,154],[33,0,20,169],[33,5,20,113],[35,0,20,171],[35,11,20,178,"cache"],[35,16,20,171],[36,0,20,186],[38,0,22,0],[38,11,22,9,"_interopRequireWildcard"],[38,34,22,0],[38,35,22,33,"obj"],[38,38,22,0],[38,40,22,38],[39,0,22,40],[39,8,22,44,"obj"],[39,11,22,47],[39,15,22,51,"obj"],[39,18,22,54],[39,19,22,55,"__esModule"],[39,29,22,40],[39,31,22,67],[40,0,22,69],[40,13,22,76,"obj"],[40,16,22,69],[41,0,22,82],[43,0,22,83],[43,8,22,87,"obj"],[43,11,22,90],[43,16,22,95],[43,20,22,87],[43,24,22,103],[43,31,22,110,"obj"],[43,34,22,103],[43,39,22,118],[43,47,22,103],[43,51,22,130],[43,58,22,137,"obj"],[43,61,22,130],[43,66,22,145],[43,76,22,83],[43,78,22,157],[44,0,22,159],[44,13,22,166],[45,0,22,168,"default"],[45,8,22,168,"default"],[45,15,22,175],[45,17,22,177,"obj"],[46,0,22,166],[46,7,22,159],[47,0,22,185],[49,0,22,186],[49,8,22,190,"cache"],[49,13,22,195],[49,16,22,198,"_getRequireWildcardCache"],[49,40,22,222],[49,42,22,186],[51,0,22,226],[51,8,22,230,"cache"],[51,13,22,235],[51,17,22,239,"cache"],[51,22,22,244],[51,23,22,245,"has"],[51,26,22,239],[51,27,22,249,"obj"],[51,30,22,239],[51,31,22,226],[51,33,22,255],[52,0,22,257],[52,13,22,264,"cache"],[52,18,22,269],[52,19,22,270,"get"],[52,22,22,264],[52,23,22,274,"obj"],[52,26,22,264],[52,27,22,257],[53,0,22,281],[55,0,22,282],[55,8,22,286,"newObj"],[55,14,22,292],[55,17,22,295],[55,19,22,282],[56,0,22,299],[56,8,22,303,"hasPropertyDescriptor"],[56,29,22,324],[56,32,22,327,"Object"],[56,38,22,333],[56,39,22,334,"defineProperty"],[56,53,22,327],[56,57,22,352,"Object"],[56,63,22,358],[56,64,22,359,"getOwnPropertyDescriptor"],[56,88,22,299],[58,0,22,385],[58,9,22,390],[58,13,22,394,"key"],[58,16,22,385],[58,20,22,401,"obj"],[58,23,22,385],[58,25,22,406],[59,0,22,408],[59,10,22,412,"Object"],[59,16,22,418],[59,17,22,419,"prototype"],[59,26,22,412],[59,27,22,429,"hasOwnProperty"],[59,41,22,412],[59,42,22,444,"call"],[59,46,22,412],[59,47,22,449,"obj"],[59,50,22,412],[59,52,22,454,"key"],[59,55,22,412],[59,56,22,408],[59,58,22,460],[60,0,22,462],[60,12,22,466,"desc"],[60,16,22,470],[60,19,22,473,"hasPropertyDescriptor"],[60,40,22,494],[60,43,22,497,"Object"],[60,49,22,503],[60,50,22,504,"getOwnPropertyDescriptor"],[60,74,22,497],[60,75,22,529,"obj"],[60,78,22,497],[60,80,22,534,"key"],[60,83,22,497],[60,84,22,494],[60,87,22,541],[60,91,22,462],[62,0,22,547],[62,12,22,551,"desc"],[62,16,22,555],[62,21,22,560,"desc"],[62,25,22,564],[62,26,22,565,"get"],[62,29,22,560],[62,33,22,572,"desc"],[62,37,22,576],[62,38,22,577,"set"],[62,41,22,555],[62,42,22,547],[62,44,22,583],[63,0,22,585,"Object"],[63,10,22,585,"Object"],[63,16,22,591],[63,17,22,592,"defineProperty"],[63,31,22,585],[63,32,22,607,"newObj"],[63,38,22,585],[63,40,22,615,"key"],[63,43,22,585],[63,45,22,620,"desc"],[63,49,22,585],[64,0,22,628],[64,9,22,547],[64,15,22,634],[65,0,22,636,"newObj"],[65,10,22,636,"newObj"],[65,16,22,642],[65,17,22,643,"key"],[65,20,22,642],[65,21,22,636],[65,24,22,650,"obj"],[65,27,22,653],[65,28,22,654,"key"],[65,31,22,653],[65,32,22,636],[66,0,22,661],[67,0,22,663],[68,0,22,665],[70,0,22,666,"newObj"],[70,4,22,666,"newObj"],[70,10,22,672],[70,11,22,673,"default"],[70,18,22,666],[70,21,22,683,"obj"],[70,24,22,666],[72,0,22,688],[72,8,22,692,"cache"],[72,13,22,688],[72,15,22,699],[73,0,22,701,"cache"],[73,6,22,701,"cache"],[73,11,22,706],[73,12,22,707,"set"],[73,15,22,701],[73,16,22,711,"obj"],[73,19,22,701],[73,21,22,716,"newObj"],[73,27,22,701],[74,0,22,726],[76,0,22,727],[76,11,22,734,"newObj"],[76,17,22,727],[77,0,22,743],[79,0,24,0],[79,11,24,9,"_interopRequireDefault"],[79,33,24,0],[79,34,24,32,"obj"],[79,37,24,0],[79,39,24,37],[80,0,24,39],[80,11,24,46,"obj"],[80,14,24,49],[80,18,24,53,"obj"],[80,21,24,56],[80,22,24,57,"__esModule"],[80,32,24,46],[80,35,24,70,"obj"],[80,38,24,46],[80,41,24,76],[81,0,24,78,"default"],[81,6,24,78,"default"],[81,13,24,85],[81,15,24,87,"obj"],[82,0,24,76],[82,5,24,39],[83,0,24,95],[85,0,26,0],[85,6,26,6,"SCIENTIFIC_NOTATION"],[85,25,26,25],[85,28,26,28],[85,32,26,0],[86,0,27,0],[86,6,27,6,"ZERO_DECIMAL_INTEGER"],[86,26,27,26],[86,29,27,29],[86,36,27,0],[87,0,28,0],[87,6,28,6,"NON_DECIMAL_LITERAL"],[87,25,28,25],[87,28,28,28],[87,37,28,0],[89,6,30,6,"Printer"],[89,13],[90,0,31,2],[90,21,31,14,"format"],[90,27,31,2],[90,29,31,22,"map"],[90,32,31,2],[90,34,31,27],[91,0,31,27],[93,0,32,4],[93,11,32,9,"inForStatementInitCounter"],[93,36,32,4],[93,39,32,37],[93,40,32,4],[94,0,33,4],[94,11,33,9,"_printStack"],[94,22,33,4],[94,25,33,23],[94,27,33,4],[95,0,34,4],[95,11,34,9,"_indent"],[95,18,34,4],[95,21,34,19],[95,22,34,4],[96,0,35,4],[96,11,35,9,"_insideAux"],[96,21,35,4],[96,24,35,22],[96,29,35,4],[97,0,36,4],[97,11,36,9,"_printedCommentStarts"],[97,32,36,4],[97,35,36,33],[97,37,36,4],[98,0,37,4],[98,11,37,9,"_parenPushNewlineState"],[98,33,37,4],[98,36,37,34],[98,40,37,4],[99,0,38,4],[99,11,38,9,"_noLineTerminator"],[99,28,38,4],[99,31,38,29],[99,36,38,4],[100,0,39,4],[100,11,39,9,"_printAuxAfterOnNextUserNode"],[100,39,39,4],[100,42,39,40],[100,47,39,4],[101,0,40,4],[101,11,40,9,"_printedComments"],[101,27,40,4],[101,30,40,28],[101,34,40,32,"WeakSet"],[101,41,40,28],[101,43,40,4],[102,0,41,4],[102,11,41,9,"_endsWithInteger"],[102,27,41,4],[102,30,41,28],[102,35,41,4],[103,0,42,4],[103,11,42,9,"_endsWithWord"],[103,24,42,4],[103,27,42,25],[103,32,42,4],[104,0,43,4],[104,11,43,9,"format"],[104,17,43,4],[104,20,43,18,"format"],[104,26,43,24],[104,30,43,28],[104,32,43,4],[105,0,44,4],[105,11,44,9,"_buf"],[105,15,44,4],[105,18,44,16],[105,22,44,20,"_buffer"],[105,29,44,27],[105,30,44,28,"default"],[105,37,44,16],[105,38,44,36,"map"],[105,41,44,16],[105,42,44,4],[106,0,45,3],[110,31,47,11,"ast"],[110,34],[110,36,47,16],[111,0,48,4],[111,13,48,9,"print"],[111,18,48,4],[111,19,48,15,"ast"],[111,22,48,4],[113,0,50,4],[113,13,50,9,"_maybeAddAuxComment"],[113,32,50,4],[115,0,52,4],[115,15,52,11],[115,20,52,16,"_buf"],[115,24,52,11],[115,25,52,21,"get"],[115,28,52,11],[115,30,52,4],[116,0,53,3],[119,31,55,11],[120,0,56,4],[120,12,56,8],[120,17,56,13,"format"],[120,23,56,8],[120,24,56,20,"compact"],[120,31,56,8],[120,35,56,31],[120,40,56,36,"format"],[120,46,56,31],[120,47,56,43,"concise"],[120,54,56,4],[120,56,56,52],[121,0,57,4],[121,13,57,9,"_indent"],[121,20,57,4],[122,0,58,3],[125,31,60,11],[126,0,61,4],[126,12,61,8],[126,17,61,13,"format"],[126,23,61,8],[126,24,61,20,"compact"],[126,31,61,8],[126,35,61,31],[126,40,61,36,"format"],[126,46,61,31],[126,47,61,43,"concise"],[126,54,61,4],[126,56,61,52],[127,0,62,4],[127,13,62,9,"_indent"],[127,20,62,4],[128,0,63,3],[131,34,65,27],[132,0,65,27],[132,12,65,12,"force"],[132,17,65,27],[132,88,65,20],[132,93,65,27],[134,0,66,4],[134,13,66,9,"_maybeAddAuxComment"],[134,32,66,4],[136,0,68,4],[136,13,68,9,"_append"],[136,20,68,4],[136,21,68,17],[136,24,68,4],[136,26,68,22],[136,27,68,23,"force"],[136,32,68,4],[137,0,69,3],[140,35,71,15],[141,0,72,4],[141,12,72,8],[141,17,72,13,"format"],[141,23,72,8],[141,24,72,20,"minified"],[141,32,72,4],[141,34,72,30],[142,0,73,6],[142,15,73,11,"_buf"],[142,19,73,6],[142,20,73,16,"removeLastSemicolon"],[142,39,73,6],[143,0,74,5],[145,0,76,4],[145,13,76,9,"token"],[145,18,76,4],[145,19,76,15],[145,22,76,4],[146,0,77,3],[149,30,79,23],[150,0,79,23],[150,12,79,8,"force"],[150,17,79,23],[150,88,79,16],[150,93,79,23],[151,0,80,4],[151,12,80,8],[151,17,80,13,"format"],[151,23,80,8],[151,24,80,20,"compact"],[151,31,80,4],[151,33,80,29],[153,0,82,4],[153,12,82,8],[153,17,82,13,"_buf"],[153,21,82,8],[153,22,82,18,"hasContent"],[153,32,82,8],[153,38,82,34],[153,39,82,35],[153,44,82,40,"endsWith"],[153,52,82,35],[153,53,82,49],[153,56,82,35],[153,57,82,8],[153,61,82,57],[153,62,82,58],[153,67,82,63,"endsWith"],[153,75,82,58],[153,76,82,72],[153,80,82,58],[153,81,82,8],[153,85,82,81,"force"],[153,90,82,4],[153,92,82,88],[154,0,83,6],[154,15,83,11,"_space"],[154,21,83,6],[155,0,84,5],[156,0,85,3],[159,27,87,7,"str"],[159,30],[159,32,87,12],[160,0,88,4],[160,12,88,8],[160,17,88,13,"_endsWithWord"],[160,30,88,8],[160,34,88,30],[160,39,88,35,"endsWith"],[160,47,88,30],[160,48,88,44],[160,51,88,30],[160,56,88,52,"str"],[160,59,88,55],[160,60,88,56,"indexOf"],[160,67,88,52],[160,68,88,64],[160,71,88,52],[160,77,88,73],[160,78,88,4],[160,80,88,76],[161,0,89,6],[161,15,89,11,"_space"],[161,21,89,6],[162,0,90,5],[164,0,92,4],[164,13,92,9,"_maybeAddAuxComment"],[164,32,92,4],[166,0,94,4],[166,13,94,9,"_append"],[166,20,94,4],[166,21,94,17,"str"],[166,24,94,4],[168,0,96,4],[168,13,96,9,"_endsWithWord"],[168,26,96,4],[168,29,96,25],[168,33,96,4],[169,0,97,3],[172,29,99,9,"str"],[172,32],[172,34,99,14],[173,0,100,4],[173,13,100,9,"word"],[173,17,100,4],[173,18,100,14,"str"],[173,21,100,4],[174,0,101,4],[174,13,101,9,"_endsWithInteger"],[174,29,101,4],[174,32,101,28],[174,33,101,29],[174,36,101,32,"_isInteger"],[174,46,101,42],[174,47,101,43,"default"],[174,54,101,28],[174,56,101,52],[174,57,101,53,"str"],[174,60,101,28],[174,65,101,61],[174,66,101,62,"NON_DECIMAL_LITERAL"],[174,85,101,81],[174,86,101,82,"test"],[174,90,101,62],[174,91,101,87,"str"],[174,94,101,62],[174,95,101,28],[174,99,101,95],[174,100,101,96,"SCIENTIFIC_NOTATION"],[174,119,101,115],[174,120,101,116,"test"],[174,124,101,96],[174,125,101,121,"str"],[174,128,101,96],[174,129,101,28],[174,133,101,129],[174,134,101,130,"ZERO_DECIMAL_INTEGER"],[174,154,101,150],[174,155,101,151,"test"],[174,159,101,130],[174,160,101,156,"str"],[174,163,101,130],[174,164,101,28],[174,168,101,164,"str"],[174,171,101,167],[174,172,101,168,"str"],[174,175,101,171],[174,176,101,172,"length"],[174,182,101,168],[174,185,101,181],[174,186,101,167],[174,187,101,164],[174,192,101,188],[174,195,101,4],[175,0,102,3],[178,28,104,8,"str"],[178,31],[178,33,104,13],[179,0,105,4],[179,12,105,8,"str"],[179,15,105,11],[179,20,105,16],[179,24,105,8],[179,28,105,24],[179,33,105,29,"endsWith"],[179,41,105,24],[179,42,105,38],[179,45,105,24],[179,46,105,8],[179,50,105,46,"str"],[179,53,105,49],[179,54,105,50],[179,55,105,49],[179,56,105,46],[179,61,105,57],[179,64,105,46],[179,68,105,64],[179,73,105,69,"endsWith"],[179,81,105,64],[179,82,105,78],[179,85,105,64],[179,86,105,8],[179,90,105,86,"str"],[179,93,105,89],[179,94,105,90],[179,95,105,89],[179,96,105,86],[179,101,105,97],[179,104,105,86],[179,108,105,104],[179,113,105,109,"endsWith"],[179,121,105,104],[179,122,105,118],[179,125,105,104],[179,126,105,8],[179,130,105,126,"str"],[179,133,105,129],[179,134,105,130],[179,135,105,129],[179,136,105,126],[179,141,105,137],[179,144,105,126],[179,148,105,144],[179,153,105,149,"_endsWithInteger"],[179,169,105,4],[179,171,105,167],[180,0,106,6],[180,15,106,11,"_space"],[180,21,106,6],[181,0,107,5],[183,0,109,4],[183,13,109,9,"_maybeAddAuxComment"],[183,32,109,4],[185,0,111,4],[185,13,111,9,"_append"],[185,20,111,4],[185,21,111,17,"str"],[185,24,111,4],[186,0,112,3],[189,30,114,10,"i"],[189,31],[189,33,114,13],[190,0,115,4],[190,12,115,8],[190,17,115,13,"format"],[190,23,115,8],[190,24,115,20,"retainLines"],[190,35,115,8],[190,39,115,35],[190,44,115,40,"format"],[190,50,115,35],[190,51,115,47,"compact"],[190,58,115,4],[190,60,115,56],[192,0,117,4],[192,12,117,8],[192,17,117,13,"format"],[192,23,117,8],[192,24,117,20,"concise"],[192,31,117,4],[192,33,117,29],[193,0,118,6],[193,15,118,11,"space"],[193,20,118,6],[194,0,119,6],[195,0,120,5],[197,0,122,4],[197,12,122,8],[197,17,122,13,"endsWith"],[197,25,122,8],[197,26,122,22],[197,32,122,8],[197,33,122,4],[197,35,122,31],[198,0,123,4],[198,12,123,8],[198,19,123,15,"i"],[198,20,123,8],[198,25,123,21],[198,33,123,4],[198,35,123,31,"i"],[198,36,123,32],[198,39,123,35],[198,40,123,31],[199,0,124,4,"i"],[199,8,124,4,"i"],[199,9,124,5],[199,12,124,8,"Math"],[199,16,124,12],[199,17,124,13,"min"],[199,20,124,8],[199,21,124,17],[199,22,124,8],[199,24,124,20,"i"],[199,25,124,8],[199,26,124,4],[200,0,125,4],[200,12,125,8],[200,17,125,13,"endsWith"],[200,25,125,8],[200,26,125,22],[200,31,125,8],[200,36,125,32],[200,41,125,37,"endsWith"],[200,49,125,32],[200,50,125,46],[200,55,125,32],[200,56,125,4],[200,58,125,54,"i"],[200,59,125,55],[201,0,126,4],[201,12,126,8,"i"],[201,13,126,9],[201,17,126,13],[201,18,126,4],[201,20,126,16],[203,0,128,4],[203,13,128,9],[203,17,128,13,"j"],[203,18,128,14],[203,21,128,17],[203,22,128,4],[203,24,128,20,"j"],[203,25,128,21],[203,28,128,24,"i"],[203,29,128,4],[203,31,128,27,"j"],[203,32,128,28],[203,34,128,4],[203,36,128,32],[204,0,129,6],[204,15,129,11,"_newline"],[204,23,129,6],[205,0,130,5],[206,0,131,3],[209,31,133,11,"str"],[209,34],[209,36,133,16],[210,0,134,4],[210,15,134,11],[210,20,134,16,"_buf"],[210,24,134,11],[210,25,134,21,"endsWith"],[210,33,134,11],[210,34,134,30,"str"],[210,37,134,11],[210,38,134,4],[211,0,135,3],[214,46,137,26],[215,0,138,4],[215,13,138,9,"_buf"],[215,17,138,4],[215,18,138,14,"removeTrailingNewline"],[215,39,138,4],[216,0,139,3],[219,34,141,14,"loc"],[219,37],[219,39,141,19,"cb"],[219,41],[219,43,141,23],[220,0,142,4],[220,13,142,9,"_catchUp"],[220,21,142,4],[220,22,142,18],[220,29,142,4],[220,31,142,27,"loc"],[220,34,142,4],[222,0,144,4],[222,13,144,9,"_buf"],[222,17,144,4],[222,18,144,14,"exactSource"],[222,29,144,4],[222,30,144,26,"loc"],[222,33,144,4],[222,35,144,31,"cb"],[222,37,144,4],[223,0,145,3],[226,29,147,9,"prop"],[226,33],[226,35,147,15,"loc"],[226,38],[226,40,147,20],[227,0,148,4],[227,13,148,9,"_catchUp"],[227,21,148,4],[227,22,148,18,"prop"],[227,26,148,4],[227,28,148,24,"loc"],[227,31,148,4],[229,0,150,4],[229,13,150,9,"_buf"],[229,17,150,4],[229,18,150,14,"source"],[229,24,150,4],[229,25,150,21,"prop"],[229,29,150,4],[229,31,150,27,"loc"],[229,34,150,4],[230,0,151,3],[233,33,153,13,"prop"],[233,37],[233,39,153,19,"loc"],[233,42],[233,44,153,24,"cb"],[233,46],[233,48,153,28],[234,0,154,4],[234,13,154,9,"_catchUp"],[234,21,154,4],[234,22,154,18,"prop"],[234,26,154,4],[234,28,154,24,"loc"],[234,31,154,4],[236,0,156,4],[236,13,156,9,"_buf"],[236,17,156,4],[236,18,156,14,"withSource"],[236,28,156,4],[236,29,156,25,"prop"],[236,33,156,4],[236,35,156,31,"loc"],[236,38,156,4],[236,40,156,36,"cb"],[236,42,156,4],[237,0,157,3],[240,31,159,11],[241,0,160,4],[241,13,160,9,"_append"],[241,20,160,4],[241,21,160,17],[241,24,160,4],[241,26,160,22],[241,30,160,4],[242,0,161,3],[245,33,163,13],[246,0,164,4],[246,13,164,9,"_append"],[246,20,164,4],[246,21,164,17],[246,25,164,4],[246,27,164,23],[246,31,164,4],[247,0,165,3],[250,30,167,10,"str"],[250,33],[250,35,167,30],[251,0,167,30],[251,12,167,15,"queue"],[251,17,167,30],[251,88,167,23],[251,93,167,30],[253,0,168,4],[253,13,168,9,"_maybeAddParen"],[253,27,168,4],[253,28,168,24,"str"],[253,31,168,4],[255,0,170,4],[255,13,170,9,"_maybeIndent"],[255,25,170,4],[255,26,170,22,"str"],[255,29,170,4],[257,0,172,4],[257,12,172,8,"queue"],[257,17,172,4],[257,19,172,15],[257,24,172,20,"_buf"],[257,28,172,15],[257,29,172,25,"queue"],[257,34,172,15],[257,35,172,31,"str"],[257,38,172,15],[257,40,172,4],[257,45,172,41],[257,50,172,46,"_buf"],[257,54,172,41],[257,55,172,51,"append"],[257,61,172,41],[257,62,172,58,"str"],[257,65,172,41],[258,0,173,4],[258,13,173,9,"_endsWithWord"],[258,26,173,4],[258,29,173,25],[258,34,173,4],[259,0,174,4],[259,13,174,9,"_endsWithInteger"],[259,29,174,4],[259,32,174,28],[259,37,174,4],[260,0,175,3],[263,35,177,15,"str"],[263,38],[263,40,177,20],[264,0,178,4],[264,12,178,8],[264,17,178,13,"_indent"],[264,24,178,8],[264,28,178,24],[264,33,178,29,"endsWith"],[264,41,178,24],[264,42,178,38],[264,46,178,24],[264,47,178,8],[264,51,178,47,"str"],[264,54,178,50],[264,55,178,51],[264,56,178,50],[264,57,178,47],[264,62,178,58],[264,66,178,4],[264,68,178,64],[265,0,179,6],[265,15,179,11,"_buf"],[265,19,179,6],[265,20,179,16,"queue"],[265,25,179,6],[265,26,179,22],[265,31,179,27,"_getIndent"],[265,41,179,22],[265,43,179,6],[266,0,180,5],[267,0,181,3],[270,37,183,17,"str"],[270,40],[270,42,183,22],[271,0,184,4],[271,12,184,10,"parenPushNewlineState"],[271,33,184,31],[271,36,184,34],[271,41,184,39,"_parenPushNewlineState"],[271,63,184,4],[272,0,185,4],[272,12,185,8],[272,13,185,9,"parenPushNewlineState"],[272,34,185,4],[272,36,185,32],[273,0,186,4],[273,13,186,9,"_parenPushNewlineState"],[273,35,186,4],[273,38,186,34],[273,42,186,4],[274,0,187,4],[274,12,187,8,"i"],[274,13,187,4],[276,0,189,4],[276,13,189,9,"i"],[276,14,189,10],[276,17,189,13],[276,18,189,4],[276,20,189,16,"i"],[276,21,189,17],[276,24,189,20,"str"],[276,27,189,23],[276,28,189,24,"length"],[276,34,189,16],[276,38,189,34,"str"],[276,41,189,37],[276,42,189,38,"i"],[276,43,189,37],[276,44,189,34],[276,49,189,45],[276,52,189,4],[276,54,189,50,"i"],[276,55,189,51],[276,57,189,4],[277,0,189,55],[278,0,189,4],[280,0,191,4],[280,12,191,8,"i"],[280,13,191,9],[280,18,191,14,"str"],[280,21,191,17],[280,22,191,18,"length"],[280,28,191,4],[280,30,191,26],[281,0,192,4],[281,12,192,10,"cha"],[281,15,192,13],[281,18,192,16,"str"],[281,21,192,19],[281,22,192,20,"i"],[281,23,192,19],[281,24,192,4],[283,0,194,4],[283,12,194,8,"cha"],[283,15,194,11],[283,20,194,16],[283,24,194,4],[283,26,194,22],[284,0,195,6],[284,14,195,10,"cha"],[284,17,195,13],[284,22,195,18],[284,25,195,6],[284,27,195,23],[285,0,196,6],[285,14,196,10,"i"],[285,15,196,11],[285,18,196,14],[285,19,196,10],[285,24,196,20,"str"],[285,27,196,23],[285,28,196,24,"length"],[285,34,196,6],[285,36,196,32],[286,0,197,6],[286,14,197,12,"chaPost"],[286,21,197,19],[286,24,197,22,"str"],[286,27,197,25],[286,28,197,26,"i"],[286,29,197,27],[286,32,197,30],[286,33,197,25],[286,34,197,6],[287,0,198,6],[287,14,198,10,"chaPost"],[287,21,198,17],[287,26,198,22],[287,29,198,10],[287,33,198,29,"chaPost"],[287,40,198,36],[287,45,198,41],[287,48,198,6],[287,50,198,46],[288,0,199,5],[290,0,201,4],[290,13,201,9,"token"],[290,18,201,4],[290,19,201,15],[290,22,201,4],[291,0,202,4],[291,13,202,9,"indent"],[291,19,202,4],[292,0,203,4,"parenPushNewlineState"],[292,8,203,4,"parenPushNewlineState"],[292,29,203,25],[292,30,203,26,"printed"],[292,37,203,4],[292,40,203,36],[292,44,203,4],[293,0,204,3],[296,31,206,11,"prop"],[296,35],[296,37,206,17,"loc"],[296,40],[296,42,206,22],[297,0,207,4],[297,12,207,8],[297,13,207,9],[297,18,207,14,"format"],[297,24,207,9],[297,25,207,21,"retainLines"],[297,36,207,4],[297,38,207,34],[298,0,208,4],[298,12,208,10,"pos"],[298,15,208,13],[298,18,208,16,"loc"],[298,21,208,19],[298,24,208,22,"loc"],[298,27,208,25],[298,28,208,26,"prop"],[298,32,208,25],[298,33,208,19],[298,36,208,34],[298,40,208,4],[300,0,210,4],[300,12,210,8,"pos"],[300,15,210,11],[300,19,210,15,"pos"],[300,22,210,18],[300,23,210,19,"line"],[300,27,210,15],[300,32,210,28],[300,36,210,4],[300,38,210,34],[301,0,211,6],[301,14,211,12,"count"],[301,19,211,17],[301,22,211,20,"pos"],[301,25,211,23],[301,26,211,24,"line"],[301,30,211,20],[301,33,211,31],[301,38,211,36,"_buf"],[301,42,211,31],[301,43,211,41,"getCurrentLine"],[301,57,211,31],[301,59,211,6],[303,0,213,6],[303,15,213,11],[303,19,213,15,"i"],[303,20,213,16],[303,23,213,19],[303,24,213,6],[303,26,213,22,"i"],[303,27,213,23],[303,30,213,26,"count"],[303,35,213,6],[303,37,213,33,"i"],[303,38,213,34],[303,40,213,6],[303,42,213,38],[304,0,214,8],[304,17,214,13,"_newline"],[304,25,214,8],[305,0,215,7],[306,0,216,5],[307,0,217,3],[310,35,219,15],[311,0,220,4],[311,15,220,11],[311,16,220,12],[311,19,220,15,"_repeat"],[311,26,220,22],[311,27,220,23,"default"],[311,34,220,11],[311,36,220,32],[311,41,220,37,"format"],[311,47,220,32],[311,48,220,44,"indent"],[311,54,220,32],[311,55,220,51,"style"],[311,60,220,11],[311,62,220,58],[311,67,220,63,"_indent"],[311,74,220,11],[311,75,220,4],[312,0,221,3],[315,44,223,39],[316,0,223,39],[316,12,223,22,"isLabel"],[316,19,223,39],[316,90,223,32],[316,95,223,39],[318,0,224,4],[318,12,224,8,"isLabel"],[318,19,224,4],[318,21,224,17],[319,0,225,6],[319,15,225,11,"_noLineTerminator"],[319,32,225,6],[319,35,225,31],[319,39,225,6],[320,0,226,6],[320,17,226,13],[320,21,226,6],[321,0,227,5],[321,9,224,4],[321,15,227,11],[322,0,228,6],[322,17,228,13],[322,22,228,18,"_parenPushNewlineState"],[322,44,228,13],[322,47,228,43],[323,0,229,8,"printed"],[323,12,229,8,"printed"],[323,19,229,15],[323,21,229,17],[324,0,228,43],[324,11,228,6],[325,0,231,5],[326,0,232,3],[329,40,234,20,"state"],[329,45],[329,47,234,27],[330,0,235,4],[330,13,235,9,"_noLineTerminator"],[330,30,235,4],[330,33,235,29],[330,38,235,4],[332,0,237,4],[332,12,237,8,"state"],[332,17,237,13],[332,21,237,17,"state"],[332,26,237,22],[332,27,237,23,"printed"],[332,34,237,4],[332,36,237,32],[333,0,238,6],[333,15,238,11,"dedent"],[333,21,238,6],[334,0,239,6],[334,15,239,11,"newline"],[334,22,239,6],[335,0,240,6],[335,15,240,11,"token"],[335,20,240,6],[335,21,240,17],[335,24,240,6],[336,0,241,5],[337,0,242,3],[340,28,244,8,"node"],[340,32],[340,34,244,14,"parent"],[340,40],[340,42,244,22],[341,0,244,22],[343,0,245,4],[343,12,245,8],[343,13,245,9,"node"],[343,17,245,4],[343,19,245,15],[344,0,246,4],[344,12,246,10,"oldConcise"],[344,22,246,20],[344,25,246,23],[344,30,246,28,"format"],[344,36,246,23],[344,37,246,35,"concise"],[344,44,246,4],[346,0,248,4],[346,12,248,8,"node"],[346,16,248,12],[346,17,248,13,"_compact"],[346,25,248,4],[346,27,248,23],[347,0,249,6],[347,15,249,11,"format"],[347,21,249,6],[347,22,249,18,"concise"],[347,29,249,6],[347,32,249,28],[347,36,249,6],[348,0,250,5],[350,0,252,4],[350,12,252,10,"printMethod"],[350,23,252,21],[350,26,252,24],[350,31,252,29,"node"],[350,35,252,33],[350,36,252,34,"type"],[350,40,252,24],[350,41,252,4],[352,0,254,4],[352,12,254,8],[352,13,254,9,"printMethod"],[352,24,254,4],[352,26,254,22],[353,0,255,6],[353,16,255,12],[353,20,255,16,"ReferenceError"],[353,34,255,12],[353,61,255,55,"JSON"],[353,65,255,59],[353,66,255,60,"stringify"],[353,75,255,55],[353,76,255,70,"node"],[353,80,255,74],[353,81,255,75,"type"],[353,85,255,55],[353,86,255,12],[353,112,255,101,"JSON"],[353,116,255,105],[353,117,255,106,"stringify"],[353,126,255,101],[353,127,255,116,"node"],[353,131,255,120],[353,135,255,124,"node"],[353,139,255,128],[353,140,255,129,"constructor"],[353,151,255,124],[353,152,255,141,"name"],[353,156,255,101],[353,157,255,12],[353,158,255,6],[354,0,256,5],[356,0,258,4],[356,13,258,9,"_printStack"],[356,24,258,4],[356,25,258,21,"push"],[356,29,258,4],[356,30,258,26,"node"],[356,34,258,4],[358,0,260,4],[358,12,260,10,"oldInAux"],[358,20,260,18],[358,23,260,21],[358,28,260,26,"_insideAux"],[358,38,260,4],[359,0,261,4],[359,13,261,9,"_insideAux"],[359,23,261,4],[359,26,261,22],[359,27,261,23,"node"],[359,31,261,27],[359,32,261,28,"loc"],[359,35,261,4],[361,0,263,4],[361,13,263,9,"_maybeAddAuxComment"],[361,32,263,4],[361,33,263,29],[361,38,263,34,"_insideAux"],[361,48,263,29],[361,52,263,48],[361,53,263,49,"oldInAux"],[361,61,263,4],[363,0,265,4],[363,12,265,8,"needsParens"],[363,23,265,19],[363,26,265,22,"n"],[363,27,265,23],[363,28,265,24,"needsParens"],[363,39,265,22],[363,40,265,36,"node"],[363,44,265,22],[363,46,265,42,"parent"],[363,52,265,22],[363,54,265,50],[363,59,265,55,"_printStack"],[363,70,265,22],[363,71,265,4],[365,0,267,4],[365,12,267,8],[365,17,267,13,"format"],[365,23,267,8],[365,24,267,20,"retainFunctionParens"],[365,44,267,8],[365,48,267,44,"node"],[365,52,267,48],[365,53,267,49,"type"],[365,57,267,44],[365,62,267,58],[365,82,267,8],[365,86,267,82,"node"],[365,90,267,86],[365,91,267,87,"extra"],[365,96,267,8],[365,100,267,96,"node"],[365,104,267,100],[365,105,267,101,"extra"],[365,110,267,96],[365,111,267,107,"parenthesized"],[365,124,267,4],[365,126,267,122],[366,0,268,6,"needsParens"],[366,10,268,6,"needsParens"],[366,21,268,17],[366,24,268,20],[366,28,268,6],[367,0,269,5],[369,0,271,4],[369,12,271,8,"needsParens"],[369,23,271,4],[369,25,271,21],[369,30,271,26,"token"],[369,35,271,21],[369,36,271,32],[369,39,271,21],[371,0,273,4],[371,13,273,9,"_printLeadingComments"],[371,34,273,4],[371,35,273,31,"node"],[371,39,273,4],[373,0,275,4],[373,12,275,10,"loc"],[373,15,275,13],[373,18,275,16,"t"],[373,19,275,17],[373,20,275,18,"isProgram"],[373,29,275,16],[373,30,275,28,"node"],[373,34,275,16],[373,39,275,37,"t"],[373,40,275,38],[373,41,275,39,"isFile"],[373,47,275,37],[373,48,275,46,"node"],[373,52,275,37],[373,53,275,16],[373,56,275,54],[373,60,275,16],[373,63,275,61,"node"],[373,67,275,65],[373,68,275,66,"loc"],[373,71,275,4],[374,0,276,4],[374,13,276,9,"withSource"],[374,23,276,4],[374,24,276,20],[374,31,276,4],[374,33,276,29,"loc"],[374,36,276,4],[374,38,276,34],[374,50,276,40],[375,0,277,6,"printMethod"],[375,10,277,6,"printMethod"],[375,21,277,17],[375,22,277,18,"call"],[375,26,277,6],[375,27,277,23],[375,32,277,6],[375,34,277,29,"node"],[375,38,277,6],[375,40,277,35,"parent"],[375,46,277,6],[376,0,278,5],[376,9,276,4],[378,0,280,4],[378,13,280,9,"_printTrailingComments"],[378,35,280,4],[378,36,280,32,"node"],[378,40,280,4],[380,0,282,4],[380,12,282,8,"needsParens"],[380,23,282,4],[380,25,282,21],[380,30,282,26,"token"],[380,35,282,21],[380,36,282,32],[380,39,282,21],[382,0,284,4],[382,13,284,9,"_printStack"],[382,24,284,4],[382,25,284,21,"pop"],[382,28,284,4],[384,0,286,4],[384,13,286,9,"format"],[384,19,286,4],[384,20,286,16,"concise"],[384,27,286,4],[384,30,286,26,"oldConcise"],[384,40,286,4],[385,0,287,4],[385,13,287,9,"_insideAux"],[385,23,287,4],[385,26,287,22,"oldInAux"],[385,34,287,4],[386,0,288,3],[389,42,290,22,"enteredPositionlessNode"],[389,65],[389,67,290,47],[390,0,291,4],[390,12,291,8,"enteredPositionlessNode"],[390,35,291,4],[390,37,291,33],[390,42,291,38,"_printAuxBeforeComment"],[390,64,291,33],[391,0,292,4],[391,12,292,8],[391,13,292,9],[391,18,292,14,"_insideAux"],[391,28,292,4],[391,30,292,26],[391,35,292,31,"_printAuxAfterComment"],[391,56,292,26],[392,0,293,3],[395,47,295,27],[396,0,296,4],[396,12,296,8],[396,17,296,13,"_printAuxAfterOnNextUserNode"],[396,45,296,4],[396,47,296,43],[397,0,297,4],[397,13,297,9,"_printAuxAfterOnNextUserNode"],[397,41,297,4],[397,44,297,40],[397,48,297,4],[398,0,298,4],[398,12,298,10,"comment"],[398,19,298,17],[398,22,298,20],[398,27,298,25,"format"],[398,33,298,20],[398,34,298,32,"auxiliaryCommentBefore"],[398,56,298,4],[400,0,300,4],[400,12,300,8,"comment"],[400,19,300,4],[400,21,300,17],[401,0,301,6],[401,15,301,11,"_printComment"],[401,28,301,6],[401,29,301,25],[402,0,302,8,"type"],[402,12,302,8,"type"],[402,16,302,12],[402,18,302,14],[402,32,301,25],[403,0,303,8,"value"],[403,12,303,8,"value"],[403,17,303,13],[403,19,303,15,"comment"],[404,0,301,25],[404,11,301,6],[405,0,305,5],[406,0,306,3],[409,46,308,26],[410,0,309,4],[410,12,309,8],[410,13,309,9],[410,18,309,14,"_printAuxAfterOnNextUserNode"],[410,46,309,4],[410,48,309,44],[411,0,310,4],[411,13,310,9,"_printAuxAfterOnNextUserNode"],[411,41,310,4],[411,44,310,40],[411,49,310,4],[412,0,311,4],[412,12,311,10,"comment"],[412,19,311,17],[412,22,311,20],[412,27,311,25,"format"],[412,33,311,20],[412,34,311,32,"auxiliaryCommentAfter"],[412,55,311,4],[414,0,313,4],[414,12,313,8,"comment"],[414,19,313,4],[414,21,313,17],[415,0,314,6],[415,15,314,11,"_printComment"],[415,28,314,6],[415,29,314,25],[416,0,315,8,"type"],[416,12,315,8,"type"],[416,16,315,12],[416,18,315,14],[416,32,314,25],[417,0,316,8,"value"],[417,12,316,8,"value"],[417,17,316,13],[417,19,316,15,"comment"],[418,0,314,25],[418,11,314,6],[419,0,318,5],[420,0,319,3],[423,37,321,17,"node"],[423,41],[423,43,321,23],[424,0,322,4],[424,12,322,10,"extra"],[424,17,322,15],[424,20,322,18,"node"],[424,24,322,22],[424,25,322,23,"extra"],[424,30,322,4],[426,0,324,4],[426,12,324,8,"extra"],[426,17,324,13],[426,21,324,17,"extra"],[426,26,324,22],[426,27,324,23,"raw"],[426,30,324,17],[426,34,324,30],[426,38,324,8],[426,42,324,38,"extra"],[426,47,324,43],[426,48,324,44,"rawValue"],[426,56,324,38],[426,60,324,56],[426,64,324,8],[426,68,324,64,"node"],[426,72,324,68],[426,73,324,69,"value"],[426,78,324,64],[426,83,324,79,"extra"],[426,88,324,84],[426,89,324,85,"rawValue"],[426,97,324,4],[426,99,324,95],[427,0,325,6],[427,17,325,13,"extra"],[427,22,325,18],[427,23,325,19,"raw"],[427,26,325,6],[428,0,326,5],[429,0,327,3],[432,32,329,12,"nodes"],[432,37],[432,39,329,19,"parent"],[432,45],[432,47,329,38],[433,0,329,38],[433,12,329,27,"opts"],[433,16,329,38],[433,87,329,34],[433,89,329,38],[434,0,330,4],[434,12,330,8],[434,13,330,9,"nodes"],[434,18,330,8],[434,22,330,18],[434,23,330,19,"nodes"],[434,28,330,24],[434,29,330,25,"length"],[434,35,330,4],[434,37,330,33],[435,0,331,4],[435,12,331,8,"opts"],[435,16,331,12],[435,17,331,13,"indent"],[435,23,331,4],[435,25,331,21],[435,30,331,26,"indent"],[435,36,331,21],[436,0,332,4],[436,12,332,10,"newlineOpts"],[436,23,332,21],[436,26,332,24],[437,0,333,6,"addNewlines"],[437,10,333,6,"addNewlines"],[437,21,333,17],[437,23,333,19,"opts"],[437,27,333,23],[437,28,333,24,"addNewlines"],[438,0,332,24],[438,9,332,4],[440,0,336,4],[440,13,336,9],[440,17,336,13,"i"],[440,18,336,14],[440,21,336,17],[440,22,336,4],[440,24,336,20,"i"],[440,25,336,21],[440,28,336,24,"nodes"],[440,33,336,29],[440,34,336,30,"length"],[440,40,336,4],[440,42,336,38,"i"],[440,43,336,39],[440,45,336,4],[440,47,336,43],[441,0,337,6],[441,14,337,12,"node"],[441,18,337,16],[441,21,337,19,"nodes"],[441,26,337,24],[441,27,337,25,"i"],[441,28,337,24],[441,29,337,6],[442,0,338,6],[442,14,338,10],[442,15,338,11,"node"],[442,19,338,6],[442,21,338,17],[443,0,339,6],[443,14,339,10,"opts"],[443,18,339,14],[443,19,339,15,"statement"],[443,28,339,6],[443,30,339,26],[443,35,339,31,"_printNewline"],[443,48,339,26],[443,49,339,45],[443,53,339,26],[443,55,339,51,"node"],[443,59,339,26],[443,61,339,57,"parent"],[443,67,339,26],[443,69,339,65,"newlineOpts"],[443,80,339,26],[444,0,340,6],[444,15,340,11,"print"],[444,20,340,6],[444,21,340,17,"node"],[444,25,340,6],[444,27,340,23,"parent"],[444,33,340,6],[446,0,342,6],[446,14,342,10,"opts"],[446,18,342,14],[446,19,342,15,"iterator"],[446,27,342,6],[446,29,342,25],[447,0,343,8,"opts"],[447,12,343,8,"opts"],[447,16,343,12],[447,17,343,13,"iterator"],[447,25,343,8],[447,26,343,22,"node"],[447,30,343,8],[447,32,343,28,"i"],[447,33,343,8],[448,0,344,7],[450,0,346,6],[450,14,346,10,"opts"],[450,18,346,14],[450,19,346,15,"separator"],[450,28,346,10],[450,32,346,28,"i"],[450,33,346,29],[450,36,346,32,"nodes"],[450,41,346,37],[450,42,346,38,"length"],[450,48,346,32],[450,51,346,47],[450,52,346,6],[450,54,346,50],[451,0,347,8,"opts"],[451,12,347,8,"opts"],[451,16,347,12],[451,17,347,13,"separator"],[451,26,347,8],[451,27,347,23,"call"],[451,31,347,8],[451,32,347,28],[451,36,347,8],[452,0,348,7],[454,0,350,6],[454,14,350,10,"opts"],[454,18,350,14],[454,19,350,15,"statement"],[454,28,350,6],[454,30,350,26],[454,35,350,31,"_printNewline"],[454,48,350,26],[454,49,350,45],[454,54,350,26],[454,56,350,52,"node"],[454,60,350,26],[454,62,350,58,"parent"],[454,68,350,26],[454,70,350,66,"newlineOpts"],[454,81,350,26],[455,0,351,5],[457,0,353,4],[457,12,353,8,"opts"],[457,16,353,12],[457,17,353,13,"indent"],[457,23,353,4],[457,25,353,21],[457,30,353,26,"dedent"],[457,36,353,21],[458,0,354,3],[461,47,356,27,"node"],[461,51],[461,53,356,33,"parent"],[461,59],[461,61,356,41],[462,0,357,4],[462,12,357,10,"indent"],[462,18,357,16],[462,21,357,19,"node"],[462,25,357,23],[462,26,357,24,"leadingComments"],[462,41,357,19],[462,45,357,43,"node"],[462,49,357,47],[462,50,357,48,"leadingComments"],[462,65,357,43],[462,66,357,64,"length"],[462,72,357,43],[462,75,357,73],[462,76,357,4],[463,0,358,4],[463,12,358,8,"indent"],[463,18,358,4],[463,20,358,16],[463,25,358,21,"indent"],[463,31,358,16],[464,0,359,4],[464,13,359,9,"print"],[464,18,359,4],[464,19,359,15,"node"],[464,23,359,4],[464,25,359,21,"parent"],[464,31,359,4],[465,0,360,4],[465,12,360,8,"indent"],[465,18,360,4],[465,20,360,16],[465,25,360,21,"dedent"],[465,31,360,16],[466,0,361,3],[469,33,363,13,"parent"],[469,39],[469,41,363,21],[470,0,364,4],[470,12,364,10,"node"],[470,16,364,14],[470,19,364,17,"parent"],[470,25,364,23],[470,26,364,24,"body"],[470,30,364,4],[472,0,366,4],[472,12,366,8],[472,13,366,9,"t"],[472,14,366,10],[472,15,366,11,"isEmptyStatement"],[472,31,366,9],[472,32,366,28,"node"],[472,36,366,9],[472,37,366,4],[472,39,366,35],[473,0,367,6],[473,15,367,11,"space"],[473,20,367,6],[474,0,368,5],[476,0,370,4],[476,13,370,9,"print"],[476,18,370,4],[476,19,370,15,"node"],[476,23,370,4],[476,25,370,21,"parent"],[476,31,370,4],[477,0,371,3],[480,45,373,25,"node"],[480,49],[480,51,373,31],[481,0,374,4],[481,13,374,9,"_printComments"],[481,27,374,4],[481,28,374,24],[481,33,374,29,"_getComments"],[481,45,374,24],[481,46,374,42],[481,51,374,24],[481,53,374,49,"node"],[481,57,374,24],[481,58,374,4],[482,0,375,3],[485,44,377,24,"node"],[485,48],[485,50,377,30],[486,0,378,4],[486,13,378,9,"_printComments"],[486,27,378,4],[486,28,378,24],[486,33,378,29,"_getComments"],[486,45,378,24],[486,46,378,42],[486,50,378,24],[486,52,378,48,"node"],[486,56,378,24],[486,57,378,4],[487,0,379,3],[490,41,381,21,"node"],[490,45],[490,47,381,42],[491,0,381,42],[491,12,381,27,"indent"],[491,18,381,42],[491,89,381,36],[491,93,381,42],[492,0,382,4],[492,12,382,8],[492,13,382,9,"node"],[492,17,382,13],[492,18,382,14,"innerComments"],[492,31,382,8],[492,35,382,31],[492,36,382,32,"node"],[492,40,382,36],[492,41,382,37,"innerComments"],[492,54,382,32],[492,55,382,51,"length"],[492,61,382,4],[492,63,382,59],[493,0,383,4],[493,12,383,8,"indent"],[493,18,383,4],[493,20,383,16],[493,25,383,21,"indent"],[493,31,383,16],[495,0,385,4],[495,13,385,9,"_printComments"],[495,27,385,4],[495,28,385,24,"node"],[495,32,385,28],[495,33,385,29,"innerComments"],[495,46,385,4],[497,0,387,4],[497,12,387,8,"indent"],[497,18,387,4],[497,20,387,16],[497,25,387,21,"dedent"],[497,31,387,16],[498,0,388,3],[501,36,390,16,"nodes"],[501,41],[501,43,390,23,"parent"],[501,49],[501,51,390,42],[502,0,390,42],[502,12,390,31,"opts"],[502,16,390,42],[502,87,390,38],[502,89,390,42],[503,0,391,4,"opts"],[503,8,391,4,"opts"],[503,12,391,8],[503,13,391,9,"statement"],[503,22,391,4],[503,25,391,21],[503,29,391,4],[504,0,392,4],[504,15,392,11],[504,20,392,16,"printJoin"],[504,29,392,11],[504,30,392,26,"nodes"],[504,35,392,11],[504,37,392,33,"parent"],[504,43,392,11],[504,45,392,41,"opts"],[504,49,392,11],[504,50,392,4],[505,0,393,3],[508,32,395,12,"items"],[508,37],[508,39,395,19,"parent"],[508,45],[508,47,395,38],[509,0,395,38],[509,12,395,27,"opts"],[509,16,395,38],[509,87,395,34],[509,89,395,38],[511,0,396,4],[511,12,396,8,"opts"],[511,16,396,12],[511,17,396,13,"separator"],[511,26,396,8],[511,30,396,26],[511,34,396,4],[511,36,396,32],[512,0,397,6,"opts"],[512,10,397,6,"opts"],[512,14,397,10],[512,15,397,11,"separator"],[512,24,397,6],[512,27,397,23,"commaSeparator"],[512,41,397,6],[513,0,398,5],[515,0,400,4],[515,15,400,11],[515,20,400,16,"printJoin"],[515,29,400,11],[515,30,400,26,"items"],[515,35,400,11],[515,37,400,33,"parent"],[515,43,400,11],[515,45,400,41,"opts"],[515,49,400,11],[515,50,400,4],[516,0,401,3],[519,36,403,16,"leading"],[519,43],[519,45,403,25,"node"],[519,49],[519,51,403,31,"parent"],[519,57],[519,59,403,39,"opts"],[519,63],[519,65,403,45],[520,0,404,4],[520,12,404,8],[520,17,404,13,"format"],[520,23,404,8],[520,24,404,20,"retainLines"],[520,35,404,8],[520,39,404,35],[520,44,404,40,"format"],[520,50,404,35],[520,51,404,47,"compact"],[520,58,404,4],[520,60,404,56],[522,0,406,4],[522,12,406,8],[522,17,406,13,"format"],[522,23,406,8],[522,24,406,20,"concise"],[522,31,406,4],[522,33,406,29],[523,0,407,6],[523,15,407,11,"space"],[523,20,407,6],[524,0,408,6],[525,0,409,5],[527,0,411,4],[527,12,411,8,"lines"],[527,17,411,13],[527,20,411,16],[527,21,411,4],[529,0,413,4],[529,12,413,8],[529,17,413,13,"_buf"],[529,21,413,8],[529,22,413,18,"hasContent"],[529,32,413,8],[529,34,413,4],[529,36,413,32],[530,0,414,6],[530,14,414,10],[530,15,414,11,"leading"],[530,22,414,6],[530,24,414,20,"lines"],[530,29,414,25],[531,0,415,6],[531,14,415,10,"opts"],[531,18,415,14],[531,19,415,15,"addNewlines"],[531,30,415,6],[531,32,415,28,"lines"],[531,37,415,33],[531,41,415,37,"opts"],[531,45,415,41],[531,46,415,42,"addNewlines"],[531,57,415,37],[531,58,415,54,"leading"],[531,65,415,37],[531,67,415,63,"node"],[531,71,415,37],[531,76,415,72],[531,77,415,28],[532,0,416,6],[532,14,416,12,"needs"],[532,19,416,17],[532,22,416,20,"leading"],[532,29,416,27],[532,32,416,30,"n"],[532,33,416,31],[532,34,416,32,"needsWhitespaceBefore"],[532,55,416,27],[532,58,416,56,"n"],[532,59,416,57],[532,60,416,58,"needsWhitespaceAfter"],[532,80,416,6],[533,0,417,6],[533,14,417,10,"needs"],[533,19,417,15],[533,20,417,16,"node"],[533,24,417,15],[533,26,417,22,"parent"],[533,32,417,15],[533,33,417,6],[533,35,417,31,"lines"],[533,40,417,36],[534,0,418,5],[536,0,420,4],[536,13,420,9,"newline"],[536,20,420,4],[536,21,420,17,"lines"],[536,26,420,4],[537,0,421,3],[540,35,423,15,"leading"],[540,42],[540,44,423,24,"node"],[540,48],[540,50,423,30],[541,0,424,4],[541,15,424,11,"node"],[541,19,424,15],[541,24,424,20,"leading"],[541,31,424,27],[541,34,424,30,"node"],[541,38,424,34],[541,39,424,35,"leadingComments"],[541,54,424,27],[541,57,424,53,"node"],[541,61,424,57],[541,62,424,58,"trailingComments"],[541,78,424,15],[541,79,424,11],[541,83,424,79],[541,85,424,4],[542,0,425,3],[545,36,427,16,"comment"],[545,43],[545,45,427,25],[546,0,427,25],[548,0,428,4],[548,12,428,8],[548,13,428,9],[548,18,428,14,"format"],[548,24,428,9],[548,25,428,21,"shouldPrintComment"],[548,43,428,9],[548,44,428,40,"comment"],[548,51,428,47],[548,52,428,48,"value"],[548,57,428,9],[548,58,428,4],[548,60,428,56],[549,0,429,4],[549,12,429,8,"comment"],[549,19,429,15],[549,20,429,16,"ignore"],[549,26,429,4],[549,28,429,24],[550,0,430,4],[550,12,430,8],[550,17,430,13,"_printedComments"],[550,33,430,8],[550,34,430,30,"has"],[550,37,430,8],[550,38,430,34,"comment"],[550,45,430,8],[550,46,430,4],[550,48,430,44],[552,0,432,4],[552,13,432,9,"_printedComments"],[552,29,432,4],[552,30,432,26,"add"],[552,33,432,4],[552,34,432,30,"comment"],[552,41,432,4],[554,0,434,4],[554,12,434,8,"comment"],[554,19,434,15],[554,20,434,16,"start"],[554,25,434,8],[554,29,434,25],[554,33,434,4],[554,35,434,31],[555,0,435,6],[555,14,435,10],[555,19,435,15,"_printedCommentStarts"],[555,40,435,10],[555,41,435,37,"comment"],[555,48,435,44],[555,49,435,45,"start"],[555,54,435,10],[555,55,435,6],[555,57,435,53],[556,0,436,6],[556,15,436,11,"_printedCommentStarts"],[556,36,436,6],[556,37,436,33,"comment"],[556,44,436,40],[556,45,436,41,"start"],[556,50,436,6],[556,54,436,50],[556,58,436,6],[557,0,437,5],[559,0,439,4],[559,12,439,10,"isBlockComment"],[559,26,439,24],[559,29,439,27,"comment"],[559,36,439,34],[559,37,439,35,"type"],[559,41,439,27],[559,46,439,44],[559,60,439,4],[560,0,440,4],[560,13,440,9,"newline"],[560,20,440,4],[560,21,440,17],[560,26,440,22,"_buf"],[560,30,440,17],[560,31,440,27,"hasContent"],[560,41,440,17],[560,47,440,43],[560,48,440,44],[560,53,440,49,"_noLineTerminator"],[560,70,440,17],[560,74,440,70,"isBlockComment"],[560,88,440,17],[560,91,440,87],[560,92,440,17],[560,95,440,91],[560,96,440,4],[561,0,441,4],[561,12,441,8],[561,13,441,9],[561,18,441,14,"endsWith"],[561,26,441,9],[561,27,441,23],[561,30,441,9],[561,31,441,8],[561,35,441,31],[561,36,441,32],[561,41,441,37,"endsWith"],[561,49,441,32],[561,50,441,46],[561,53,441,32],[561,54,441,4],[561,56,441,52],[561,61,441,57,"space"],[561,66,441,52],[562,0,442,4],[562,12,442,8,"val"],[562,15,442,11],[562,18,442,14],[562,19,442,15,"isBlockComment"],[562,33,442,14],[562,37,442,33],[562,38,442,34],[562,43,442,39,"_noLineTerminator"],[562,60,442,14],[562,70,442,64,"comment"],[562,77,442,71],[562,78,442,72,"value"],[562,83,442,14],[562,100,442,89,"comment"],[562,107,442,96],[562,108,442,97,"value"],[562,113,442,14],[562,120,442,4],[564,0,444,4],[564,12,444,8,"isBlockComment"],[564,26,444,22],[564,30,444,26],[564,35,444,31,"format"],[564,41,444,26],[564,42,444,38,"indent"],[564,48,444,26],[564,49,444,45,"adjustMultilineComment"],[564,71,444,4],[564,73,444,69],[565,0,445,6],[565,14,445,12,"offset"],[565,20,445,18],[565,23,445,21,"comment"],[565,30,445,28],[565,31,445,29,"loc"],[565,34,445,21],[565,38,445,36,"comment"],[565,45,445,43],[565,46,445,44,"loc"],[565,49,445,36],[565,50,445,48,"start"],[565,55,445,36],[565,56,445,54,"column"],[565,62,445,6],[567,0,447,6],[567,14,447,10,"offset"],[567,20,447,6],[567,22,447,18],[568,0,448,8],[568,16,448,14,"newlineRegex"],[568,28,448,26],[568,31,448,29],[568,35,448,33,"RegExp"],[568,41,448,29],[568,42,448,40],[568,56,448,54,"offset"],[568,62,448,40],[568,65,448,63],[568,68,448,29],[568,70,448,68],[568,73,448,29],[568,74,448,8],[569,0,449,8,"val"],[569,12,449,8,"val"],[569,15,449,11],[569,18,449,14,"val"],[569,21,449,17],[569,22,449,18,"replace"],[569,29,449,14],[569,30,449,26,"newlineRegex"],[569,42,449,14],[569,44,449,40],[569,48,449,14],[569,49,449,8],[570,0,450,7],[572,0,452,6],[572,14,452,12,"indentSize"],[572,24,452,22],[572,27,452,25,"Math"],[572,31,452,29],[572,32,452,30,"max"],[572,35,452,25],[572,36,452,34],[572,41,452,39,"_getIndent"],[572,51,452,34],[572,54,452,52,"length"],[572,60,452,25],[572,62,452,60],[572,67,452,65,"_buf"],[572,71,452,60],[572,72,452,70,"getCurrentColumn"],[572,88,452,60],[572,90,452,25],[572,91,452,6],[573,0,453,6,"val"],[573,10,453,6,"val"],[573,13,453,9],[573,16,453,12,"val"],[573,19,453,15],[573,20,453,16,"replace"],[573,27,453,12],[573,28,453,24],[573,38,453,12],[573,47,453,41],[573,48,453,42],[573,51,453,45,"_repeat"],[573,58,453,52],[573,59,453,53,"default"],[573,66,453,41],[573,68,453,62],[573,71,453,41],[573,73,453,67,"indentSize"],[573,83,453,41],[573,84,453,12],[573,85,453,6],[574,0,454,5],[576,0,456,4],[576,12,456,8],[576,17,456,13,"endsWith"],[576,25,456,8],[576,26,456,22],[576,29,456,8],[576,30,456,4],[576,32,456,28],[576,37,456,33,"_space"],[576,43,456,28],[577,0,457,4],[577,13,457,9,"withSource"],[577,23,457,4],[577,24,457,20],[577,31,457,4],[577,33,457,29,"comment"],[577,40,457,36],[577,41,457,37,"loc"],[577,44,457,4],[577,46,457,42],[577,58,457,48],[578,0,458,6],[578,10,458,6],[578,16,458,10],[578,17,458,11,"_append"],[578,24,458,6],[578,25,458,19,"val"],[578,28,458,6],[579,0,459,5],[579,9,457,4],[580,0,460,4],[580,13,460,9,"newline"],[580,20,460,4],[580,21,460,17,"isBlockComment"],[580,35,460,31],[580,39,460,35],[580,40,460,36],[580,45,460,41,"_noLineTerminator"],[580,62,460,17],[580,65,460,61],[580,66,460,17],[580,69,460,65],[580,70,460,4],[581,0,461,3],[584,37,463,17,"comments"],[584,45],[584,47,463,27],[585,0,464,4],[585,12,464,8],[585,13,464,9,"comments"],[585,21,464,8],[585,25,464,21],[585,26,464,22,"comments"],[585,34,464,30],[585,35,464,31,"length"],[585,41,464,4],[585,43,464,39],[587,0,466,4],[587,29,466,26,"comments"],[587,37,466,4],[587,197,466,36],[588,0,466,36],[590,0,466,36],[591,0,466,36],[592,0,466,36],[593,0,466,36],[594,0,466,36],[595,0,466,36],[596,0,466,36],[597,0,466,36],[599,0,466,36],[599,14,466,15,"comment"],[599,22,466,36],[601,0,467,6],[601,15,467,11,"_printComment"],[601,28,467,6],[601,29,467,25,"comment"],[601,37,467,6],[602,0,468,5],[603,0,469,3],[609,0,473,0,"exports"],[609,2,473,0,"exports"],[609,9,473,7],[609,10,473,8,"default"],[609,17,473,0],[609,20,473,18,"Printer"],[609,27,473,0],[611,0,474,0],[611,11,474,14,"Printer"],[611,18,474,21],[611,19,474,22,"prototype"],[611,28,474,0],[611,30,474,33,"generatorFunctions"],[611,48,474,0],[613,0,476,0],[613,11,476,9,"commaSeparator"],[613,25,476,0],[613,28,476,26],[614,0,477,2],[614,9,477,7,"token"],[614,14,477,2],[614,15,477,13],[614,18,477,2],[615,0,478,2],[615,9,478,7,"space"],[615,14,478,2],[616,0,479,1]]},"type":"js/module"}]}