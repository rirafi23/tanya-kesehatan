{"dependencies":[{"name":"lodash/isPlainObject","data":{"isAsync":false}},{"name":"lodash/isRegExp","data":{"isAsync":false}},{"name":"../validators/isValidIdentifier","data":{"isAsync":false}},{"name":"../builders/generated","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = valueToNode;\n\n  var _isPlainObject = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"lodash/isPlainObject\"));\n\n  var _isRegExp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"lodash/isRegExp\"));\n\n  var _isValidIdentifier = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../validators/isValidIdentifier\"));\n\n  var _generated = _$$_REQUIRE(_dependencyMap[3], \"../builders/generated\");\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function valueToNode(value) {\n    if (value === undefined) {\n      return (0, _generated.identifier)(\"undefined\");\n    }\n\n    if (value === true || value === false) {\n      return (0, _generated.booleanLiteral)(value);\n    }\n\n    if (value === null) {\n      return (0, _generated.nullLiteral)();\n    }\n\n    if (typeof value === \"string\") {\n      return (0, _generated.stringLiteral)(value);\n    }\n\n    if (typeof value === \"number\") {\n      var result;\n\n      if (Number.isFinite(value)) {\n        result = (0, _generated.numericLiteral)(Math.abs(value));\n      } else {\n        var numerator;\n\n        if (Number.isNaN(value)) {\n          numerator = (0, _generated.numericLiteral)(0);\n        } else {\n          numerator = (0, _generated.numericLiteral)(1);\n        }\n\n        result = (0, _generated.binaryExpression)(\"/\", numerator, (0, _generated.numericLiteral)(0));\n      }\n\n      if (value < 0 || Object.is(value, -0)) {\n        result = (0, _generated.unaryExpression)(\"-\", result);\n      }\n\n      return result;\n    }\n\n    if ((0, _isRegExp.default)(value)) {\n      var pattern = value.source;\n      var flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n      return (0, _generated.regExpLiteral)(pattern, flags);\n    }\n\n    if (Array.isArray(value)) {\n      return (0, _generated.arrayExpression)(value.map(valueToNode));\n    }\n\n    if ((0, _isPlainObject.default)(value)) {\n      var props = [];\n\n      for (var _i = 0, _Object$keys = Object.keys(value); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        var nodeKey = void 0;\n\n        if ((0, _isValidIdentifier.default)(key)) {\n          nodeKey = (0, _generated.identifier)(key);\n        } else {\n          nodeKey = (0, _generated.stringLiteral)(key);\n        }\n\n        props.push((0, _generated.objectProperty)(nodeKey, valueToNode(value[key])));\n      }\n\n      return (0, _generated.objectExpression)(props);\n    }\n\n    throw new Error(\"don't know how to turn this value into a node\");\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"valueToNode"],[7,31,6,0],[9,0,8,0],[9,6,8,4,"_isPlainObject"],[9,20,8,18],[9,23,8,21,"_interopRequireDefault"],[9,45,8,43],[9,46,8,44,"require"],[9,57,8,51],[9,100,8,43],[9,101,8,0],[11,0,10,0],[11,6,10,4,"_isRegExp"],[11,15,10,13],[11,18,10,16,"_interopRequireDefault"],[11,40,10,38],[11,41,10,39,"require"],[11,52,10,46],[11,90,10,38],[11,91,10,0],[13,0,12,0],[13,6,12,4,"_isValidIdentifier"],[13,24,12,22],[13,27,12,25,"_interopRequireDefault"],[13,49,12,47],[13,50,12,48,"require"],[13,61,12,55],[13,115,12,47],[13,116,12,0],[15,0,14,0],[15,6,14,4,"_generated"],[15,16,14,14],[15,19,14,17,"require"],[15,30,14,24],[15,74,14,0],[17,0,16,0],[17,11,16,9,"_interopRequireDefault"],[17,33,16,0],[17,34,16,32,"obj"],[17,37,16,0],[17,39,16,37],[18,0,16,39],[18,11,16,46,"obj"],[18,14,16,49],[18,18,16,53,"obj"],[18,21,16,56],[18,22,16,57,"__esModule"],[18,32,16,46],[18,35,16,70,"obj"],[18,38,16,46],[18,41,16,76],[19,0,16,78,"default"],[19,6,16,78,"default"],[19,13,16,85],[19,15,16,87,"obj"],[20,0,16,76],[20,5,16,39],[21,0,16,95],[23,0,18,0],[23,11,18,9,"valueToNode"],[23,22,18,0],[23,23,18,21,"value"],[23,28,18,0],[23,30,18,28],[24,0,19,2],[24,8,19,6,"value"],[24,13,19,11],[24,18,19,16,"undefined"],[24,27,19,2],[24,29,19,27],[25,0,20,4],[25,13,20,11],[25,14,20,12],[25,17,20,15,"_generated"],[25,27,20,25],[25,28,20,26,"identifier"],[25,38,20,11],[25,40,20,38],[25,51,20,11],[25,52,20,4],[26,0,21,3],[28,0,23,2],[28,8,23,6,"value"],[28,13,23,11],[28,18,23,16],[28,22,23,6],[28,26,23,24,"value"],[28,31,23,29],[28,36,23,34],[28,41,23,2],[28,43,23,41],[29,0,24,4],[29,13,24,11],[29,14,24,12],[29,17,24,15,"_generated"],[29,27,24,25],[29,28,24,26,"booleanLiteral"],[29,42,24,11],[29,44,24,42,"value"],[29,49,24,11],[29,50,24,4],[30,0,25,3],[32,0,27,2],[32,8,27,6,"value"],[32,13,27,11],[32,18,27,16],[32,22,27,2],[32,24,27,22],[33,0,28,4],[33,13,28,11],[33,14,28,12],[33,17,28,15,"_generated"],[33,27,28,25],[33,28,28,26,"nullLiteral"],[33,39,28,11],[33,42,28,4],[34,0,29,3],[36,0,31,2],[36,8,31,6],[36,15,31,13,"value"],[36,20,31,6],[36,25,31,23],[36,33,31,2],[36,35,31,33],[37,0,32,4],[37,13,32,11],[37,14,32,12],[37,17,32,15,"_generated"],[37,27,32,25],[37,28,32,26,"stringLiteral"],[37,41,32,11],[37,43,32,41,"value"],[37,48,32,11],[37,49,32,4],[38,0,33,3],[40,0,35,2],[40,8,35,6],[40,15,35,13,"value"],[40,20,35,6],[40,25,35,23],[40,33,35,2],[40,35,35,33],[41,0,36,4],[41,10,36,8,"result"],[41,16,36,4],[43,0,38,4],[43,10,38,8,"Number"],[43,16,38,14],[43,17,38,15,"isFinite"],[43,25,38,8],[43,26,38,24,"value"],[43,31,38,8],[43,32,38,4],[43,34,38,32],[44,0,39,6,"result"],[44,8,39,6,"result"],[44,14,39,12],[44,17,39,15],[44,18,39,16],[44,21,39,19,"_generated"],[44,31,39,29],[44,32,39,30,"numericLiteral"],[44,46,39,15],[44,48,39,46,"Math"],[44,52,39,50],[44,53,39,51,"abs"],[44,56,39,46],[44,57,39,55,"value"],[44,62,39,46],[44,63,39,15],[44,64,39,6],[45,0,40,5],[45,7,38,4],[45,13,40,11],[46,0,41,6],[46,12,41,10,"numerator"],[46,21,41,6],[48,0,43,6],[48,12,43,10,"Number"],[48,18,43,16],[48,19,43,17,"isNaN"],[48,24,43,10],[48,25,43,23,"value"],[48,30,43,10],[48,31,43,6],[48,33,43,31],[49,0,44,8,"numerator"],[49,10,44,8,"numerator"],[49,19,44,17],[49,22,44,20],[49,23,44,21],[49,26,44,24,"_generated"],[49,36,44,34],[49,37,44,35,"numericLiteral"],[49,51,44,20],[49,53,44,51],[49,54,44,20],[49,55,44,8],[50,0,45,7],[50,9,43,6],[50,15,45,13],[51,0,46,8,"numerator"],[51,10,46,8,"numerator"],[51,19,46,17],[51,22,46,20],[51,23,46,21],[51,26,46,24,"_generated"],[51,36,46,34],[51,37,46,35,"numericLiteral"],[51,51,46,20],[51,53,46,51],[51,54,46,20],[51,55,46,8],[52,0,47,7],[54,0,49,6,"result"],[54,8,49,6,"result"],[54,14,49,12],[54,17,49,15],[54,18,49,16],[54,21,49,19,"_generated"],[54,31,49,29],[54,32,49,30,"binaryExpression"],[54,48,49,15],[54,50,49,48],[54,53,49,15],[54,55,49,53,"numerator"],[54,64,49,15],[54,66,49,64],[54,67,49,65],[54,70,49,68,"_generated"],[54,80,49,78],[54,81,49,79,"numericLiteral"],[54,95,49,64],[54,97,49,95],[54,98,49,64],[54,99,49,15],[54,100,49,6],[55,0,50,5],[57,0,52,4],[57,10,52,8,"value"],[57,15,52,13],[57,18,52,16],[57,19,52,8],[57,23,52,21,"Object"],[57,29,52,27],[57,30,52,28,"is"],[57,32,52,21],[57,33,52,31,"value"],[57,38,52,21],[57,40,52,38],[57,41,52,39],[57,42,52,21],[57,43,52,4],[57,45,52,43],[58,0,53,6,"result"],[58,8,53,6,"result"],[58,14,53,12],[58,17,53,15],[58,18,53,16],[58,21,53,19,"_generated"],[58,31,53,29],[58,32,53,30,"unaryExpression"],[58,47,53,15],[58,49,53,47],[58,52,53,15],[58,54,53,52,"result"],[58,60,53,15],[58,61,53,6],[59,0,54,5],[61,0,56,4],[61,13,56,11,"result"],[61,19,56,4],[62,0,57,3],[64,0,59,2],[64,8,59,6],[64,9,59,7],[64,12,59,10,"_isRegExp"],[64,21,59,19],[64,22,59,20,"default"],[64,29,59,6],[64,31,59,29,"value"],[64,36,59,6],[64,37,59,2],[64,39,59,37],[65,0,60,4],[65,10,60,10,"pattern"],[65,17,60,17],[65,20,60,20,"value"],[65,25,60,25],[65,26,60,26,"source"],[65,32,60,4],[66,0,61,4],[66,10,61,10,"flags"],[66,15,61,15],[66,18,61,18,"value"],[66,23,61,23],[66,24,61,24,"toString"],[66,32,61,18],[66,35,61,35,"match"],[66,40,61,18],[66,41,61,41],[66,55,61,18],[66,57,61,57],[66,58,61,18],[66,59,61,4],[67,0,62,4],[67,13,62,11],[67,14,62,12],[67,17,62,15,"_generated"],[67,27,62,25],[67,28,62,26,"regExpLiteral"],[67,41,62,11],[67,43,62,41,"pattern"],[67,50,62,11],[67,52,62,50,"flags"],[67,57,62,11],[67,58,62,4],[68,0,63,3],[70,0,65,2],[70,8,65,6,"Array"],[70,13,65,11],[70,14,65,12,"isArray"],[70,21,65,6],[70,22,65,20,"value"],[70,27,65,6],[70,28,65,2],[70,30,65,28],[71,0,66,4],[71,13,66,11],[71,14,66,12],[71,17,66,15,"_generated"],[71,27,66,25],[71,28,66,26,"arrayExpression"],[71,43,66,11],[71,45,66,43,"value"],[71,50,66,48],[71,51,66,49,"map"],[71,54,66,43],[71,55,66,53,"valueToNode"],[71,66,66,43],[71,67,66,11],[71,68,66,4],[72,0,67,3],[74,0,69,2],[74,8,69,6],[74,9,69,7],[74,12,69,10,"_isPlainObject"],[74,26,69,24],[74,27,69,25,"default"],[74,34,69,6],[74,36,69,34,"value"],[74,41,69,6],[74,42,69,2],[74,44,69,42],[75,0,70,4],[75,10,70,10,"props"],[75,15,70,15],[75,18,70,18],[75,20,70,4],[77,0,72,4],[77,38,72,22,"Object"],[77,44,72,28],[77,45,72,29,"keys"],[77,49,72,22],[77,50,72,34,"value"],[77,55,72,22],[77,56,72,4],[77,90,72,42],[78,0,72,9],[78,12,72,15,"key"],[78,15,72,18],[78,34,72,9],[79,0,73,6],[79,12,73,10,"nodeKey"],[79,19,73,17],[79,28,73,6],[81,0,75,6],[81,12,75,10],[81,13,75,11],[81,16,75,14,"_isValidIdentifier"],[81,34,75,32],[81,35,75,33,"default"],[81,42,75,10],[81,44,75,42,"key"],[81,47,75,10],[81,48,75,6],[81,50,75,48],[82,0,76,8,"nodeKey"],[82,10,76,8,"nodeKey"],[82,17,76,15],[82,20,76,18],[82,21,76,19],[82,24,76,22,"_generated"],[82,34,76,32],[82,35,76,33,"identifier"],[82,45,76,18],[82,47,76,45,"key"],[82,50,76,18],[82,51,76,8],[83,0,77,7],[83,9,75,6],[83,15,77,13],[84,0,78,8,"nodeKey"],[84,10,78,8,"nodeKey"],[84,17,78,15],[84,20,78,18],[84,21,78,19],[84,24,78,22,"_generated"],[84,34,78,32],[84,35,78,33,"stringLiteral"],[84,48,78,18],[84,50,78,48,"key"],[84,53,78,18],[84,54,78,8],[85,0,79,7],[87,0,81,6,"props"],[87,8,81,6,"props"],[87,13,81,11],[87,14,81,12,"push"],[87,18,81,6],[87,19,81,17],[87,20,81,18],[87,23,81,21,"_generated"],[87,33,81,31],[87,34,81,32,"objectProperty"],[87,48,81,17],[87,50,81,48,"nodeKey"],[87,57,81,17],[87,59,81,57,"valueToNode"],[87,70,81,68],[87,71,81,69,"value"],[87,76,81,74],[87,77,81,75,"key"],[87,80,81,74],[87,81,81,68],[87,82,81,17],[87,83,81,6],[88,0,82,5],[90,0,84,4],[90,13,84,11],[90,14,84,12],[90,17,84,15,"_generated"],[90,27,84,25],[90,28,84,26,"objectExpression"],[90,44,84,11],[90,46,84,44,"props"],[90,51,84,11],[90,52,84,4],[91,0,85,3],[93,0,87,2],[93,10,87,8],[93,14,87,12,"Error"],[93,19,87,8],[93,20,87,18],[93,67,87,8],[93,68,87,2],[94,0,88,1]]},"type":"js/module"}]}