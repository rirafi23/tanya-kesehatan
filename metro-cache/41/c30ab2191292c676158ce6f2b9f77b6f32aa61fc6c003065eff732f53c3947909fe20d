{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/taggedTemplateLiteralLoose","data":{"isAsync":false}},{"name":"@babel/helpers","data":{"isAsync":false}},{"name":"@babel/generator","data":{"isAsync":false}},{"name":"@babel/template","data":{"isAsync":false}},{"name":"@babel/types","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n\n  var _taggedTemplateLiteralLoose = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/taggedTemplateLiteralLoose\");\n\n  function _templateObject() {\n    var data = _taggedTemplateLiteralLoose([\"\\n    (function (root, factory) {\\n      if (typeof define === \\\"function\\\" && define.amd) {\\n        define(AMD_ARGUMENTS, factory);\\n      } else if (typeof exports === \\\"object\\\") {\\n        factory(COMMON_ARGUMENTS);\\n      } else {\\n        factory(BROWSER_ARGUMENTS);\\n      }\\n    })(UMD_ROOT, function (FACTORY_PARAMETERS) {\\n      FACTORY_BODY\\n    });\\n  \"]);\n\n    _templateObject = function _templateObject() {\n      return data;\n    };\n\n    return data;\n  }\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _default;\n\n  function helpers() {\n    var data = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2], \"@babel/helpers\"));\n\n    helpers = function helpers() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _generator() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/generator\"));\n\n    _generator = function _generator() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _template() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/template\"));\n\n    _template = function _template() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function t() {\n    var data = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"@babel/types\"));\n\n    t = function t() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n\n    return cache;\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n\n    var cache = _getRequireWildcardCache();\n\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj.default = obj;\n\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n\n    return newObj;\n  }\n\n  var buildUmdWrapper = function buildUmdWrapper(replacements) {\n    return _template().default(_templateObject())(replacements);\n  };\n\n  function buildGlobal(whitelist) {\n    var namespace = t().identifier(\"babelHelpers\");\n    var body = [];\n    var container = t().functionExpression(null, [t().identifier(\"global\")], t().blockStatement(body));\n    var tree = t().program([t().expressionStatement(t().callExpression(container, [t().conditionalExpression(t().binaryExpression(\"===\", t().unaryExpression(\"typeof\", t().identifier(\"global\")), t().stringLiteral(\"undefined\")), t().identifier(\"self\"), t().identifier(\"global\"))]))]);\n    body.push(t().variableDeclaration(\"var\", [t().variableDeclarator(namespace, t().assignmentExpression(\"=\", t().memberExpression(t().identifier(\"global\"), namespace), t().objectExpression([])))]));\n    buildHelpers(body, namespace, whitelist);\n    return tree;\n  }\n\n  function buildModule(whitelist) {\n    var body = [];\n    var refs = buildHelpers(body, null, whitelist);\n    body.unshift(t().exportNamedDeclaration(null, Object.keys(refs).map(function (name) {\n      return t().exportSpecifier(t().cloneNode(refs[name]), t().identifier(name));\n    })));\n    return t().program(body, [], \"module\");\n  }\n\n  function buildUmd(whitelist) {\n    var namespace = t().identifier(\"babelHelpers\");\n    var body = [];\n    body.push(t().variableDeclaration(\"var\", [t().variableDeclarator(namespace, t().identifier(\"global\"))]));\n    buildHelpers(body, namespace, whitelist);\n    return t().program([buildUmdWrapper({\n      FACTORY_PARAMETERS: t().identifier(\"global\"),\n      BROWSER_ARGUMENTS: t().assignmentExpression(\"=\", t().memberExpression(t().identifier(\"root\"), namespace), t().objectExpression([])),\n      COMMON_ARGUMENTS: t().identifier(\"exports\"),\n      AMD_ARGUMENTS: t().arrayExpression([t().stringLiteral(\"exports\")]),\n      FACTORY_BODY: body,\n      UMD_ROOT: t().identifier(\"this\")\n    })]);\n  }\n\n  function buildVar(whitelist) {\n    var namespace = t().identifier(\"babelHelpers\");\n    var body = [];\n    body.push(t().variableDeclaration(\"var\", [t().variableDeclarator(namespace, t().objectExpression([]))]));\n    var tree = t().program(body);\n    buildHelpers(body, namespace, whitelist);\n    body.push(t().expressionStatement(namespace));\n    return tree;\n  }\n\n  function buildHelpers(body, namespace, whitelist) {\n    var getHelperReference = function getHelperReference(name) {\n      return namespace ? t().memberExpression(namespace, t().identifier(name)) : t().identifier(\"_\" + name);\n    };\n\n    var refs = {};\n    helpers().list.forEach(function (name) {\n      if (whitelist && whitelist.indexOf(name) < 0) return;\n      var ref = refs[name] = getHelperReference(name);\n\n      var _helpers$get = helpers().get(name, getHelperReference, ref),\n          nodes = _helpers$get.nodes;\n\n      body.push.apply(body, _toConsumableArray(nodes));\n    });\n    return refs;\n  }\n\n  function _default(whitelist) {\n    var outputType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"global\";\n    var tree;\n    var build = {\n      global: buildGlobal,\n      module: buildModule,\n      umd: buildUmd,\n      var: buildVar\n    }[outputType];\n\n    if (build) {\n      tree = build(whitelist);\n    } else {\n      throw new Error(\"Unsupported output type \" + outputType);\n    }\n\n    return (0, _generator().default)(tree).code;\n  }\n});","map":[[2,0,1,0],[18,0,3,0,"Object"],[18,2,3,0,"Object"],[18,8,3,6],[18,9,3,7,"defineProperty"],[18,23,3,0],[18,24,3,22,"exports"],[18,31,3,0],[18,33,3,31],[18,45,3,0],[18,47,3,45],[19,0,4,2,"value"],[19,4,4,2,"value"],[19,9,4,7],[19,11,4,9],[20,0,3,45],[20,3,3,0],[21,0,6,0,"exports"],[21,2,6,0,"exports"],[21,9,6,7],[21,10,6,8,"default"],[21,17,6,0],[21,20,6,18,"_default"],[21,28,6,0],[23,0,8,0],[23,11,8,9,"helpers"],[23,18,8,0],[23,21,8,19],[24,0,9,2],[24,8,9,8,"data"],[24,12,9,12],[24,15,9,15,"_interopRequireWildcard"],[24,38,9,38],[24,39,9,39,"require"],[24,50,9,46],[24,87,9,38],[24,88,9,2],[26,0,11,2,"helpers"],[26,4,11,2,"helpers"],[26,11,11,9],[26,14,11,12],[26,33,11,24],[27,0,12,4],[27,13,12,11,"data"],[27,17,12,4],[28,0,13,3],[28,5,11,2],[30,0,15,2],[30,11,15,9,"data"],[30,15,15,2],[31,0,16,1],[33,0,18,0],[33,11,18,9,"_generator"],[33,21,18,0],[33,24,18,22],[34,0,19,2],[34,8,19,8,"data"],[34,12,19,12],[34,15,19,15,"_interopRequireDefault"],[34,37,19,37],[34,38,19,38,"require"],[34,49,19,45],[34,88,19,37],[34,89,19,2],[36,0,21,2,"_generator"],[36,4,21,2,"_generator"],[36,14,21,12],[36,17,21,15],[36,39,21,27],[37,0,22,4],[37,13,22,11,"data"],[37,17,22,4],[38,0,23,3],[38,5,21,2],[40,0,25,2],[40,11,25,9,"data"],[40,15,25,2],[41,0,26,1],[43,0,28,0],[43,11,28,9,"_template"],[43,20,28,0],[43,23,28,21],[44,0,29,2],[44,8,29,8,"data"],[44,12,29,12],[44,15,29,15,"_interopRequireDefault"],[44,37,29,37],[44,38,29,38,"require"],[44,49,29,45],[44,87,29,37],[44,88,29,2],[46,0,31,2,"_template"],[46,4,31,2,"_template"],[46,13,31,11],[46,16,31,14],[46,37,31,26],[47,0,32,4],[47,13,32,11,"data"],[47,17,32,4],[48,0,33,3],[48,5,31,2],[50,0,35,2],[50,11,35,9,"data"],[50,15,35,2],[51,0,36,1],[53,0,38,0],[53,11,38,9,"t"],[53,12,38,0],[53,15,38,13],[54,0,39,2],[54,8,39,8,"data"],[54,12,39,12],[54,15,39,15,"_interopRequireWildcard"],[54,38,39,38],[54,39,39,39,"require"],[54,50,39,46],[54,85,39,38],[54,86,39,2],[56,0,41,2,"t"],[56,4,41,2,"t"],[56,5,41,3],[56,8,41,6],[56,21,41,18],[57,0,42,4],[57,13,42,11,"data"],[57,17,42,4],[58,0,43,3],[58,5,41,2],[60,0,45,2],[60,11,45,9,"data"],[60,15,45,2],[61,0,46,1],[63,0,48,0],[63,11,48,9,"_interopRequireDefault"],[63,33,48,0],[63,34,48,32,"obj"],[63,37,48,0],[63,39,48,37],[64,0,48,39],[64,11,48,46,"obj"],[64,14,48,49],[64,18,48,53,"obj"],[64,21,48,56],[64,22,48,57,"__esModule"],[64,32,48,46],[64,35,48,70,"obj"],[64,38,48,46],[64,41,48,76],[65,0,48,78,"default"],[65,6,48,78,"default"],[65,13,48,85],[65,15,48,87,"obj"],[66,0,48,76],[66,5,48,39],[67,0,48,95],[69,0,50,0],[69,11,50,9,"_getRequireWildcardCache"],[69,35,50,0],[69,38,50,36],[70,0,50,38],[70,8,50,42],[70,15,50,49,"WeakMap"],[70,22,50,42],[70,27,50,61],[70,37,50,38],[70,39,50,73],[70,46,50,80],[70,50,50,73],[71,0,50,86],[71,8,50,90,"cache"],[71,13,50,95],[71,16,50,98],[71,20,50,102,"WeakMap"],[71,27,50,98],[71,29,50,86],[73,0,50,113,"_getRequireWildcardCache"],[73,4,50,113,"_getRequireWildcardCache"],[73,28,50,137],[73,31,50,140],[73,67,50,152],[74,0,50,154],[74,13,50,161,"cache"],[74,18,50,154],[75,0,50,169],[75,5,50,113],[77,0,50,171],[77,11,50,178,"cache"],[77,16,50,171],[78,0,50,186],[80,0,52,0],[80,11,52,9,"_interopRequireWildcard"],[80,34,52,0],[80,35,52,33,"obj"],[80,38,52,0],[80,40,52,38],[81,0,52,40],[81,8,52,44,"obj"],[81,11,52,47],[81,15,52,51,"obj"],[81,18,52,54],[81,19,52,55,"__esModule"],[81,29,52,40],[81,31,52,67],[82,0,52,69],[82,13,52,76,"obj"],[82,16,52,69],[83,0,52,82],[85,0,52,83],[85,8,52,87,"obj"],[85,11,52,90],[85,16,52,95],[85,20,52,87],[85,24,52,103],[85,31,52,110,"obj"],[85,34,52,103],[85,39,52,118],[85,47,52,103],[85,51,52,130],[85,58,52,137,"obj"],[85,61,52,130],[85,66,52,145],[85,76,52,83],[85,78,52,157],[86,0,52,159],[86,13,52,166],[87,0,52,168,"default"],[87,8,52,168,"default"],[87,15,52,175],[87,17,52,177,"obj"],[88,0,52,166],[88,7,52,159],[89,0,52,185],[91,0,52,186],[91,8,52,190,"cache"],[91,13,52,195],[91,16,52,198,"_getRequireWildcardCache"],[91,40,52,222],[91,42,52,186],[93,0,52,226],[93,8,52,230,"cache"],[93,13,52,235],[93,17,52,239,"cache"],[93,22,52,244],[93,23,52,245,"has"],[93,26,52,239],[93,27,52,249,"obj"],[93,30,52,239],[93,31,52,226],[93,33,52,255],[94,0,52,257],[94,13,52,264,"cache"],[94,18,52,269],[94,19,52,270,"get"],[94,22,52,264],[94,23,52,274,"obj"],[94,26,52,264],[94,27,52,257],[95,0,52,281],[97,0,52,282],[97,8,52,286,"newObj"],[97,14,52,292],[97,17,52,295],[97,19,52,282],[98,0,52,299],[98,8,52,303,"hasPropertyDescriptor"],[98,29,52,324],[98,32,52,327,"Object"],[98,38,52,333],[98,39,52,334,"defineProperty"],[98,53,52,327],[98,57,52,352,"Object"],[98,63,52,358],[98,64,52,359,"getOwnPropertyDescriptor"],[98,88,52,299],[100,0,52,385],[100,9,52,390],[100,13,52,394,"key"],[100,16,52,385],[100,20,52,401,"obj"],[100,23,52,385],[100,25,52,406],[101,0,52,408],[101,10,52,412,"Object"],[101,16,52,418],[101,17,52,419,"prototype"],[101,26,52,412],[101,27,52,429,"hasOwnProperty"],[101,41,52,412],[101,42,52,444,"call"],[101,46,52,412],[101,47,52,449,"obj"],[101,50,52,412],[101,52,52,454,"key"],[101,55,52,412],[101,56,52,408],[101,58,52,460],[102,0,52,462],[102,12,52,466,"desc"],[102,16,52,470],[102,19,52,473,"hasPropertyDescriptor"],[102,40,52,494],[102,43,52,497,"Object"],[102,49,52,503],[102,50,52,504,"getOwnPropertyDescriptor"],[102,74,52,497],[102,75,52,529,"obj"],[102,78,52,497],[102,80,52,534,"key"],[102,83,52,497],[102,84,52,494],[102,87,52,541],[102,91,52,462],[104,0,52,547],[104,12,52,551,"desc"],[104,16,52,555],[104,21,52,560,"desc"],[104,25,52,564],[104,26,52,565,"get"],[104,29,52,560],[104,33,52,572,"desc"],[104,37,52,576],[104,38,52,577,"set"],[104,41,52,555],[104,42,52,547],[104,44,52,583],[105,0,52,585,"Object"],[105,10,52,585,"Object"],[105,16,52,591],[105,17,52,592,"defineProperty"],[105,31,52,585],[105,32,52,607,"newObj"],[105,38,52,585],[105,40,52,615,"key"],[105,43,52,585],[105,45,52,620,"desc"],[105,49,52,585],[106,0,52,628],[106,9,52,547],[106,15,52,634],[107,0,52,636,"newObj"],[107,10,52,636,"newObj"],[107,16,52,642],[107,17,52,643,"key"],[107,20,52,642],[107,21,52,636],[107,24,52,650,"obj"],[107,27,52,653],[107,28,52,654,"key"],[107,31,52,653],[107,32,52,636],[108,0,52,661],[109,0,52,663],[110,0,52,665],[112,0,52,666,"newObj"],[112,4,52,666,"newObj"],[112,10,52,672],[112,11,52,673,"default"],[112,18,52,666],[112,21,52,683,"obj"],[112,24,52,666],[114,0,52,688],[114,8,52,692,"cache"],[114,13,52,688],[114,15,52,699],[115,0,52,701,"cache"],[115,6,52,701,"cache"],[115,11,52,706],[115,12,52,707,"set"],[115,15,52,701],[115,16,52,711,"obj"],[115,19,52,701],[115,21,52,716,"newObj"],[115,27,52,701],[116,0,52,726],[118,0,52,727],[118,11,52,734,"newObj"],[118,17,52,727],[119,0,52,743],[121,0,54,0],[121,6,54,6,"buildUmdWrapper"],[121,21,54,21],[121,24,54,24],[121,33,54,6,"buildUmdWrapper"],[121,48,54,24],[121,49,54,24,"replacements"],[121,61,54,36],[122,0,54,36],[122,11,54,40,"_template"],[122,20,54,49],[122,23,54,52,"default"],[122,30,54,40],[122,50,66,4,"replacements"],[122,62,54,40],[122,63,54,36],[123,0,54,36],[123,3,54,0],[125,0,68,0],[125,11,68,9,"buildGlobal"],[125,22,68,0],[125,23,68,21,"whitelist"],[125,32,68,0],[125,34,68,32],[126,0,69,2],[126,8,69,8,"namespace"],[126,17,69,17],[126,20,69,20,"t"],[126,21,69,21],[126,24,69,24,"identifier"],[126,34,69,20],[126,35,69,35],[126,49,69,20],[126,50,69,2],[127,0,70,2],[127,8,70,8,"body"],[127,12,70,12],[127,15,70,15],[127,17,70,2],[128,0,71,2],[128,8,71,8,"container"],[128,17,71,17],[128,20,71,20,"t"],[128,21,71,21],[128,24,71,24,"functionExpression"],[128,42,71,20],[128,43,71,43],[128,47,71,20],[128,49,71,49],[128,50,71,50,"t"],[128,51,71,51],[128,54,71,54,"identifier"],[128,64,71,50],[128,65,71,65],[128,73,71,50],[128,74,71,49],[128,75,71,20],[128,77,71,77,"t"],[128,78,71,78],[128,81,71,81,"blockStatement"],[128,95,71,77],[128,96,71,96,"body"],[128,100,71,77],[128,101,71,20],[128,102,71,2],[129,0,72,2],[129,8,72,8,"tree"],[129,12,72,12],[129,15,72,15,"t"],[129,16,72,16],[129,19,72,19,"program"],[129,26,72,15],[129,27,72,27],[129,28,72,28,"t"],[129,29,72,29],[129,32,72,32,"expressionStatement"],[129,51,72,28],[129,52,72,52,"t"],[129,53,72,53],[129,56,72,56,"callExpression"],[129,70,72,52],[129,71,72,71,"container"],[129,80,72,52],[129,82,72,82],[129,83,72,83,"t"],[129,84,72,84],[129,87,72,87,"conditionalExpression"],[129,108,72,83],[129,109,72,109,"t"],[129,110,72,110],[129,113,72,113,"binaryExpression"],[129,129,72,109],[129,130,72,130],[129,135,72,109],[129,137,72,137,"t"],[129,138,72,138],[129,141,72,141,"unaryExpression"],[129,156,72,137],[129,157,72,157],[129,165,72,137],[129,167,72,167,"t"],[129,168,72,168],[129,171,72,171,"identifier"],[129,181,72,167],[129,182,72,182],[129,190,72,167],[129,191,72,137],[129,192,72,109],[129,194,72,194,"t"],[129,195,72,195],[129,198,72,198,"stringLiteral"],[129,211,72,194],[129,212,72,212],[129,223,72,194],[129,224,72,109],[129,225,72,83],[129,227,72,227,"t"],[129,228,72,228],[129,231,72,231,"identifier"],[129,241,72,227],[129,242,72,242],[129,248,72,227],[129,249,72,83],[129,251,72,251,"t"],[129,252,72,252],[129,255,72,255,"identifier"],[129,265,72,251],[129,266,72,266],[129,274,72,251],[129,275,72,83],[129,276,72,82],[129,277,72,52],[129,278,72,28],[129,279,72,27],[129,280,72,15],[129,281,72,2],[130,0,73,2,"body"],[130,4,73,2,"body"],[130,8,73,6],[130,9,73,7,"push"],[130,13,73,2],[130,14,73,12,"t"],[130,15,73,13],[130,18,73,16,"variableDeclaration"],[130,37,73,12],[130,38,73,36],[130,43,73,12],[130,45,73,43],[130,46,73,44,"t"],[130,47,73,45],[130,50,73,48,"variableDeclarator"],[130,68,73,44],[130,69,73,67,"namespace"],[130,78,73,44],[130,80,73,78,"t"],[130,81,73,79],[130,84,73,82,"assignmentExpression"],[130,104,73,78],[130,105,73,103],[130,108,73,78],[130,110,73,108,"t"],[130,111,73,109],[130,114,73,112,"memberExpression"],[130,130,73,108],[130,131,73,129,"t"],[130,132,73,130],[130,135,73,133,"identifier"],[130,145,73,129],[130,146,73,144],[130,154,73,129],[130,155,73,108],[130,157,73,155,"namespace"],[130,166,73,108],[130,167,73,78],[130,169,73,167,"t"],[130,170,73,168],[130,173,73,171,"objectExpression"],[130,189,73,167],[130,190,73,188],[130,192,73,167],[130,193,73,78],[130,194,73,44],[130,195,73,43],[130,196,73,12],[130,197,73,2],[131,0,74,2,"buildHelpers"],[131,4,74,2,"buildHelpers"],[131,16,74,14],[131,17,74,15,"body"],[131,21,74,14],[131,23,74,21,"namespace"],[131,32,74,14],[131,34,74,32,"whitelist"],[131,43,74,14],[131,44,74,2],[132,0,75,2],[132,11,75,9,"tree"],[132,15,75,2],[133,0,76,1],[135,0,78,0],[135,11,78,9,"buildModule"],[135,22,78,0],[135,23,78,21,"whitelist"],[135,32,78,0],[135,34,78,32],[136,0,79,2],[136,8,79,8,"body"],[136,12,79,12],[136,15,79,15],[136,17,79,2],[137,0,80,2],[137,8,80,8,"refs"],[137,12,80,12],[137,15,80,15,"buildHelpers"],[137,27,80,27],[137,28,80,28,"body"],[137,32,80,27],[137,34,80,34],[137,38,80,27],[137,40,80,40,"whitelist"],[137,49,80,27],[137,50,80,2],[138,0,81,2,"body"],[138,4,81,2,"body"],[138,8,81,6],[138,9,81,7,"unshift"],[138,16,81,2],[138,17,81,15,"t"],[138,18,81,16],[138,21,81,19,"exportNamedDeclaration"],[138,43,81,15],[138,44,81,42],[138,48,81,15],[138,50,81,48,"Object"],[138,56,81,54],[138,57,81,55,"keys"],[138,61,81,48],[138,62,81,60,"refs"],[138,66,81,48],[138,68,81,66,"map"],[138,71,81,48],[138,72,81,70],[138,82,81,70,"name"],[138,86,81,74],[138,88,81,78],[139,0,82,4],[139,13,82,11,"t"],[139,14,82,12],[139,17,82,15,"exportSpecifier"],[139,32,82,11],[139,33,82,31,"t"],[139,34,82,32],[139,37,82,35,"cloneNode"],[139,46,82,31],[139,47,82,45,"refs"],[139,51,82,49],[139,52,82,50,"name"],[139,56,82,49],[139,57,82,31],[139,58,82,11],[139,60,82,58,"t"],[139,61,82,59],[139,64,82,62,"identifier"],[139,74,82,58],[139,75,82,73,"name"],[139,79,82,58],[139,80,82,11],[139,81,82,4],[140,0,83,3],[140,5,81,48],[140,6,81,15],[140,7,81,2],[141,0,84,2],[141,11,84,9,"t"],[141,12,84,10],[141,15,84,13,"program"],[141,22,84,9],[141,23,84,21,"body"],[141,27,84,9],[141,29,84,27],[141,31,84,9],[141,33,84,31],[141,41,84,9],[141,42,84,2],[142,0,85,1],[144,0,87,0],[144,11,87,9,"buildUmd"],[144,19,87,0],[144,20,87,18,"whitelist"],[144,29,87,0],[144,31,87,29],[145,0,88,2],[145,8,88,8,"namespace"],[145,17,88,17],[145,20,88,20,"t"],[145,21,88,21],[145,24,88,24,"identifier"],[145,34,88,20],[145,35,88,35],[145,49,88,20],[145,50,88,2],[146,0,89,2],[146,8,89,8,"body"],[146,12,89,12],[146,15,89,15],[146,17,89,2],[147,0,90,2,"body"],[147,4,90,2,"body"],[147,8,90,6],[147,9,90,7,"push"],[147,13,90,2],[147,14,90,12,"t"],[147,15,90,13],[147,18,90,16,"variableDeclaration"],[147,37,90,12],[147,38,90,36],[147,43,90,12],[147,45,90,43],[147,46,90,44,"t"],[147,47,90,45],[147,50,90,48,"variableDeclarator"],[147,68,90,44],[147,69,90,67,"namespace"],[147,78,90,44],[147,80,90,78,"t"],[147,81,90,79],[147,84,90,82,"identifier"],[147,94,90,78],[147,95,90,93],[147,103,90,78],[147,104,90,44],[147,105,90,43],[147,106,90,12],[147,107,90,2],[148,0,91,2,"buildHelpers"],[148,4,91,2,"buildHelpers"],[148,16,91,14],[148,17,91,15,"body"],[148,21,91,14],[148,23,91,21,"namespace"],[148,32,91,14],[148,34,91,32,"whitelist"],[148,43,91,14],[148,44,91,2],[149,0,92,2],[149,11,92,9,"t"],[149,12,92,10],[149,15,92,13,"program"],[149,22,92,9],[149,23,92,21],[149,24,92,22,"buildUmdWrapper"],[149,39,92,37],[149,40,92,38],[150,0,93,4,"FACTORY_PARAMETERS"],[150,6,93,4,"FACTORY_PARAMETERS"],[150,24,93,22],[150,26,93,24,"t"],[150,27,93,25],[150,30,93,28,"identifier"],[150,40,93,24],[150,41,93,39],[150,49,93,24],[150,50,92,38],[151,0,94,4,"BROWSER_ARGUMENTS"],[151,6,94,4,"BROWSER_ARGUMENTS"],[151,23,94,21],[151,25,94,23,"t"],[151,26,94,24],[151,29,94,27,"assignmentExpression"],[151,49,94,23],[151,50,94,48],[151,53,94,23],[151,55,94,53,"t"],[151,56,94,54],[151,59,94,57,"memberExpression"],[151,75,94,53],[151,76,94,74,"t"],[151,77,94,75],[151,80,94,78,"identifier"],[151,90,94,74],[151,91,94,89],[151,97,94,74],[151,98,94,53],[151,100,94,98,"namespace"],[151,109,94,53],[151,110,94,23],[151,112,94,110,"t"],[151,113,94,111],[151,116,94,114,"objectExpression"],[151,132,94,110],[151,133,94,131],[151,135,94,110],[151,136,94,23],[151,137,92,38],[152,0,95,4,"COMMON_ARGUMENTS"],[152,6,95,4,"COMMON_ARGUMENTS"],[152,22,95,20],[152,24,95,22,"t"],[152,25,95,23],[152,28,95,26,"identifier"],[152,38,95,22],[152,39,95,37],[152,48,95,22],[152,49,92,38],[153,0,96,4,"AMD_ARGUMENTS"],[153,6,96,4,"AMD_ARGUMENTS"],[153,19,96,17],[153,21,96,19,"t"],[153,22,96,20],[153,25,96,23,"arrayExpression"],[153,40,96,19],[153,41,96,39],[153,42,96,40,"t"],[153,43,96,41],[153,46,96,44,"stringLiteral"],[153,59,96,40],[153,60,96,58],[153,69,96,40],[153,70,96,39],[153,71,96,19],[153,72,92,38],[154,0,97,4,"FACTORY_BODY"],[154,6,97,4,"FACTORY_BODY"],[154,18,97,16],[154,20,97,18,"body"],[154,24,92,38],[155,0,98,4,"UMD_ROOT"],[155,6,98,4,"UMD_ROOT"],[155,14,98,12],[155,16,98,14,"t"],[155,17,98,15],[155,20,98,18,"identifier"],[155,30,98,14],[155,31,98,29],[155,37,98,14],[156,0,92,38],[156,5,92,37],[156,6,92,21],[156,7,92,9],[156,8,92,2],[157,0,100,1],[159,0,102,0],[159,11,102,9,"buildVar"],[159,19,102,0],[159,20,102,18,"whitelist"],[159,29,102,0],[159,31,102,29],[160,0,103,2],[160,8,103,8,"namespace"],[160,17,103,17],[160,20,103,20,"t"],[160,21,103,21],[160,24,103,24,"identifier"],[160,34,103,20],[160,35,103,35],[160,49,103,20],[160,50,103,2],[161,0,104,2],[161,8,104,8,"body"],[161,12,104,12],[161,15,104,15],[161,17,104,2],[162,0,105,2,"body"],[162,4,105,2,"body"],[162,8,105,6],[162,9,105,7,"push"],[162,13,105,2],[162,14,105,12,"t"],[162,15,105,13],[162,18,105,16,"variableDeclaration"],[162,37,105,12],[162,38,105,36],[162,43,105,12],[162,45,105,43],[162,46,105,44,"t"],[162,47,105,45],[162,50,105,48,"variableDeclarator"],[162,68,105,44],[162,69,105,67,"namespace"],[162,78,105,44],[162,80,105,78,"t"],[162,81,105,79],[162,84,105,82,"objectExpression"],[162,100,105,78],[162,101,105,99],[162,103,105,78],[162,104,105,44],[162,105,105,43],[162,106,105,12],[162,107,105,2],[163,0,106,2],[163,8,106,8,"tree"],[163,12,106,12],[163,15,106,15,"t"],[163,16,106,16],[163,19,106,19,"program"],[163,26,106,15],[163,27,106,27,"body"],[163,31,106,15],[163,32,106,2],[164,0,107,2,"buildHelpers"],[164,4,107,2,"buildHelpers"],[164,16,107,14],[164,17,107,15,"body"],[164,21,107,14],[164,23,107,21,"namespace"],[164,32,107,14],[164,34,107,32,"whitelist"],[164,43,107,14],[164,44,107,2],[165,0,108,2,"body"],[165,4,108,2,"body"],[165,8,108,6],[165,9,108,7,"push"],[165,13,108,2],[165,14,108,12,"t"],[165,15,108,13],[165,18,108,16,"expressionStatement"],[165,37,108,12],[165,38,108,36,"namespace"],[165,47,108,12],[165,48,108,2],[166,0,109,2],[166,11,109,9,"tree"],[166,15,109,2],[167,0,110,1],[169,0,112,0],[169,11,112,9,"buildHelpers"],[169,23,112,0],[169,24,112,22,"body"],[169,28,112,0],[169,30,112,28,"namespace"],[169,39,112,0],[169,41,112,39,"whitelist"],[169,50,112,0],[169,52,112,50],[170,0,113,2],[170,8,113,8,"getHelperReference"],[170,26,113,26],[170,29,113,29],[170,38,113,8,"getHelperReference"],[170,56,113,29],[170,57,113,29,"name"],[170,61,113,33],[170,63,113,37],[171,0,114,4],[171,13,114,11,"namespace"],[171,22,114,20],[171,25,114,23,"t"],[171,26,114,24],[171,29,114,27,"memberExpression"],[171,45,114,23],[171,46,114,44,"namespace"],[171,55,114,23],[171,57,114,55,"t"],[171,58,114,56],[171,61,114,59,"identifier"],[171,71,114,55],[171,72,114,70,"name"],[171,76,114,55],[171,77,114,23],[171,78,114,20],[171,81,114,79,"t"],[171,82,114,80],[171,85,114,83,"identifier"],[171,95,114,79],[171,102,114,98,"name"],[171,106,114,79],[171,107,114,4],[172,0,115,3],[172,5,113,2],[174,0,117,2],[174,8,117,8,"refs"],[174,12,117,12],[174,15,117,15],[174,17,117,2],[175,0,118,2,"helpers"],[175,4,118,2,"helpers"],[175,11,118,9],[175,14,118,12,"list"],[175,18,118,2],[175,19,118,17,"forEach"],[175,26,118,2],[175,27,118,25],[175,37,118,35,"name"],[175,41,118,25],[175,43,118,41],[176,0,119,4],[176,10,119,8,"whitelist"],[176,19,119,17],[176,23,119,21,"whitelist"],[176,32,119,30],[176,33,119,31,"indexOf"],[176,40,119,21],[176,41,119,39,"name"],[176,45,119,21],[176,49,119,47],[176,50,119,4],[176,52,119,50],[177,0,120,4],[177,10,120,10,"ref"],[177,13,120,13],[177,16,120,16,"refs"],[177,20,120,20],[177,21,120,21,"name"],[177,25,120,20],[177,26,120,16],[177,29,120,29,"getHelperReference"],[177,47,120,47],[177,48,120,48,"name"],[177,52,120,47],[177,53,120,4],[179,0,118,41],[179,25,123,8,"helpers"],[179,32,123,15],[179,35,123,18,"get"],[179,38,123,8],[179,39,123,22,"name"],[179,43,123,8],[179,45,123,28,"getHelperReference"],[179,63,123,8],[179,65,123,48,"ref"],[179,68,123,8],[179,69,118,41],[180,0,118,41],[180,10,122,6,"nodes"],[180,15,118,41],[180,31,122,6,"nodes"],[180,36,118,41],[182,0,124,4,"body"],[182,6,124,4,"body"],[182,10,124,8],[182,11,124,9,"push"],[182,15,124,4],[182,22,124,4,"body"],[182,26,124,8],[182,47,124,17,"nodes"],[182,52,124,8],[182,54,124,4],[183,0,125,3],[183,5,118,2],[184,0,126,2],[184,11,126,9,"refs"],[184,15,126,2],[185,0,127,1],[187,0,129,0],[187,11,129,9,"_default"],[187,19,129,0],[187,20,129,18,"whitelist"],[187,29,129,0],[187,31,129,52],[188,0,129,52],[188,8,129,29,"outputType"],[188,18,129,52],[188,89,129,42],[188,97,129,52],[189,0,130,2],[189,8,130,6,"tree"],[189,12,130,2],[190,0,131,2],[190,8,131,8,"build"],[190,13,131,13],[190,16,131,16],[191,0,132,4,"global"],[191,6,132,4,"global"],[191,12,132,10],[191,14,132,12,"buildGlobal"],[191,25,131,16],[192,0,133,4,"module"],[192,6,133,4,"module"],[192,12,133,10],[192,14,133,12,"buildModule"],[192,25,131,16],[193,0,134,4,"umd"],[193,6,134,4,"umd"],[193,9,134,7],[193,11,134,9,"buildUmd"],[193,19,131,16],[194,0,135,4,"var"],[194,6,135,4,"var"],[194,9,135,7],[194,11,135,9,"buildVar"],[195,0,131,16],[195,6,136,4,"outputType"],[195,16,131,16],[195,17,131,2],[197,0,138,2],[197,8,138,6,"build"],[197,13,138,2],[197,15,138,13],[198,0,139,4,"tree"],[198,6,139,4,"tree"],[198,10,139,8],[198,13,139,11,"build"],[198,18,139,16],[198,19,139,17,"whitelist"],[198,28,139,16],[198,29,139,4],[199,0,140,3],[199,5,138,2],[199,11,140,9],[200,0,141,4],[200,12,141,10],[200,16,141,14,"Error"],[200,21,141,10],[200,51,141,47,"outputType"],[200,61,141,10],[200,62,141,4],[201,0,142,3],[203,0,144,2],[203,11,144,9],[203,12,144,10],[203,15,144,13,"_generator"],[203,25,144,23],[203,28,144,26,"default"],[203,35,144,9],[203,37,144,35,"tree"],[203,41,144,9],[203,43,144,41,"code"],[203,47,144,2],[204,0,145,1]]},"type":"js/module"}]}