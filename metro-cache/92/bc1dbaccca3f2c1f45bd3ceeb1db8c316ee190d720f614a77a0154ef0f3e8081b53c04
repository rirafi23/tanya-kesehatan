{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/types","data":{"isAsync":false}},{"name":"@babel/parser","data":{"isAsync":false}},{"name":"@babel/code-frame","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _extends = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = parseAndBuildMetadata;\n\n  var t = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"@babel/types\"));\n\n  var _parser = _$$_REQUIRE(_dependencyMap[2], \"@babel/parser\");\n\n  var _codeFrame = _$$_REQUIRE(_dependencyMap[3], \"@babel/code-frame\");\n\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n\n    return cache;\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n\n    var cache = _getRequireWildcardCache();\n\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj.default = obj;\n\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n\n    return newObj;\n  }\n\n  var PATTERN = /^[_$A-Z0-9]+$/;\n\n  function parseAndBuildMetadata(formatter, code, opts) {\n    var ast = parseWithCodeFrame(code, opts.parser);\n    var placeholderWhitelist = opts.placeholderWhitelist,\n        placeholderPattern = opts.placeholderPattern,\n        preserveComments = opts.preserveComments,\n        syntacticPlaceholders = opts.syntacticPlaceholders;\n    t.removePropertiesDeep(ast, {\n      preserveComments: preserveComments\n    });\n    formatter.validate(ast);\n    var syntactic = {\n      placeholders: [],\n      placeholderNames: new Set()\n    };\n    var legacy = {\n      placeholders: [],\n      placeholderNames: new Set()\n    };\n    var isLegacyRef = {\n      value: undefined\n    };\n    t.traverse(ast, placeholderVisitorHandler, {\n      syntactic: syntactic,\n      legacy: legacy,\n      isLegacyRef: isLegacyRef,\n      placeholderWhitelist: placeholderWhitelist,\n      placeholderPattern: placeholderPattern,\n      syntacticPlaceholders: syntacticPlaceholders\n    });\n    return _extends({\n      ast: ast\n    }, isLegacyRef.value ? legacy : syntactic);\n  }\n\n  function placeholderVisitorHandler(node, ancestors, state) {\n    var name;\n\n    if (t.isPlaceholder(node)) {\n      if (state.syntacticPlaceholders === false) {\n        throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n      } else {\n        name = node.name.name;\n        state.isLegacyRef.value = false;\n      }\n    } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n      return;\n    } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n      name = node.name;\n      state.isLegacyRef.value = true;\n    } else if (t.isStringLiteral(node)) {\n      name = node.value;\n      state.isLegacyRef.value = true;\n    } else {\n      return;\n    }\n\n    if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n      throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n    }\n\n    if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && (!state.placeholderWhitelist || !state.placeholderWhitelist.has(name))) {\n      return;\n    }\n\n    ancestors = ancestors.slice();\n    var _ancestors = ancestors[ancestors.length - 1],\n        parent = _ancestors.node,\n        key = _ancestors.key;\n    var type;\n\n    if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n      expectedNode: \"StringLiteral\"\n    })) {\n      type = \"string\";\n    } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n      type = \"param\";\n    } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n      type = \"statement\";\n      ancestors = ancestors.slice(0, -1);\n    } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n      type = \"statement\";\n    } else {\n      type = \"other\";\n    }\n\n    var _ref = state.isLegacyRef.value ? state.legacy : state.syntactic,\n        placeholders = _ref.placeholders,\n        placeholderNames = _ref.placeholderNames;\n\n    placeholders.push({\n      name: name,\n      type: type,\n      resolve: function resolve(ast) {\n        return resolveAncestors(ast, ancestors);\n      },\n      isDuplicate: placeholderNames.has(name)\n    });\n    placeholderNames.add(name);\n  }\n\n  function resolveAncestors(ast, ancestors) {\n    var parent = ast;\n\n    for (var i = 0; i < ancestors.length - 1; i++) {\n      var _ancestors$i = ancestors[i],\n          _key = _ancestors$i.key,\n          _index = _ancestors$i.index;\n\n      if (_index === undefined) {\n        parent = parent[_key];\n      } else {\n        parent = parent[_key][_index];\n      }\n    }\n\n    var _ancestors2 = ancestors[ancestors.length - 1],\n        key = _ancestors2.key,\n        index = _ancestors2.index;\n    return {\n      parent: parent,\n      key: key,\n      index: index\n    };\n  }\n\n  function parseWithCodeFrame(code, parserOpts) {\n    parserOpts = _extends({\n      allowReturnOutsideFunction: true,\n      allowSuperOutsideMethod: true,\n      sourceType: \"module\"\n    }, parserOpts, {\n      plugins: (parserOpts.plugins || []).concat(\"placeholders\")\n    });\n\n    try {\n      return (0, _parser.parse)(code, parserOpts);\n    } catch (err) {\n      var loc = err.loc;\n\n      if (loc) {\n        err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n          start: loc\n        });\n        err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n      }\n\n      throw err;\n    }\n  }\n});","map":[[2,0,1,0],[6,0,3,0,"Object"],[6,2,3,0,"Object"],[6,8,3,6],[6,9,3,7,"defineProperty"],[6,23,3,0],[6,24,3,22,"exports"],[6,31,3,0],[6,33,3,31],[6,45,3,0],[6,47,3,45],[7,0,4,2,"value"],[7,4,4,2,"value"],[7,9,4,7],[7,11,4,9],[8,0,3,45],[8,3,3,0],[9,0,6,0,"exports"],[9,2,6,0,"exports"],[9,9,6,7],[9,10,6,8,"default"],[9,17,6,0],[9,20,6,18,"parseAndBuildMetadata"],[9,41,6,0],[11,0,8,0],[11,6,8,4,"t"],[11,7,8,5],[11,10,8,8,"_interopRequireWildcard"],[11,33,8,31],[11,34,8,32,"require"],[11,45,8,39],[11,80,8,31],[11,81,8,0],[13,0,10,0],[13,6,10,4,"_parser"],[13,13,10,11],[13,16,10,14,"require"],[13,27,10,21],[13,63,10,0],[15,0,12,0],[15,6,12,4,"_codeFrame"],[15,16,12,14],[15,19,12,17,"require"],[15,30,12,24],[15,70,12,0],[17,0,14,0],[17,11,14,9,"_getRequireWildcardCache"],[17,35,14,0],[17,38,14,36],[18,0,14,38],[18,8,14,42],[18,15,14,49,"WeakMap"],[18,22,14,42],[18,27,14,61],[18,37,14,38],[18,39,14,73],[18,46,14,80],[18,50,14,73],[19,0,14,86],[19,8,14,90,"cache"],[19,13,14,95],[19,16,14,98],[19,20,14,102,"WeakMap"],[19,27,14,98],[19,29,14,86],[21,0,14,113,"_getRequireWildcardCache"],[21,4,14,113,"_getRequireWildcardCache"],[21,28,14,137],[21,31,14,140],[21,67,14,152],[22,0,14,154],[22,13,14,161,"cache"],[22,18,14,154],[23,0,14,169],[23,5,14,113],[25,0,14,171],[25,11,14,178,"cache"],[25,16,14,171],[26,0,14,186],[28,0,16,0],[28,11,16,9,"_interopRequireWildcard"],[28,34,16,0],[28,35,16,33,"obj"],[28,38,16,0],[28,40,16,38],[29,0,16,40],[29,8,16,44,"obj"],[29,11,16,47],[29,15,16,51,"obj"],[29,18,16,54],[29,19,16,55,"__esModule"],[29,29,16,40],[29,31,16,67],[30,0,16,69],[30,13,16,76,"obj"],[30,16,16,69],[31,0,16,82],[33,0,16,83],[33,8,16,87,"obj"],[33,11,16,90],[33,16,16,95],[33,20,16,87],[33,24,16,103],[33,31,16,110,"obj"],[33,34,16,103],[33,39,16,118],[33,47,16,103],[33,51,16,130],[33,58,16,137,"obj"],[33,61,16,130],[33,66,16,145],[33,76,16,83],[33,78,16,157],[34,0,16,159],[34,13,16,166],[35,0,16,168,"default"],[35,8,16,168,"default"],[35,15,16,175],[35,17,16,177,"obj"],[36,0,16,166],[36,7,16,159],[37,0,16,185],[39,0,16,186],[39,8,16,190,"cache"],[39,13,16,195],[39,16,16,198,"_getRequireWildcardCache"],[39,40,16,222],[39,42,16,186],[41,0,16,226],[41,8,16,230,"cache"],[41,13,16,235],[41,17,16,239,"cache"],[41,22,16,244],[41,23,16,245,"has"],[41,26,16,239],[41,27,16,249,"obj"],[41,30,16,239],[41,31,16,226],[41,33,16,255],[42,0,16,257],[42,13,16,264,"cache"],[42,18,16,269],[42,19,16,270,"get"],[42,22,16,264],[42,23,16,274,"obj"],[42,26,16,264],[42,27,16,257],[43,0,16,281],[45,0,16,282],[45,8,16,286,"newObj"],[45,14,16,292],[45,17,16,295],[45,19,16,282],[46,0,16,299],[46,8,16,303,"hasPropertyDescriptor"],[46,29,16,324],[46,32,16,327,"Object"],[46,38,16,333],[46,39,16,334,"defineProperty"],[46,53,16,327],[46,57,16,352,"Object"],[46,63,16,358],[46,64,16,359,"getOwnPropertyDescriptor"],[46,88,16,299],[48,0,16,385],[48,9,16,390],[48,13,16,394,"key"],[48,16,16,385],[48,20,16,401,"obj"],[48,23,16,385],[48,25,16,406],[49,0,16,408],[49,10,16,412,"Object"],[49,16,16,418],[49,17,16,419,"prototype"],[49,26,16,412],[49,27,16,429,"hasOwnProperty"],[49,41,16,412],[49,42,16,444,"call"],[49,46,16,412],[49,47,16,449,"obj"],[49,50,16,412],[49,52,16,454,"key"],[49,55,16,412],[49,56,16,408],[49,58,16,460],[50,0,16,462],[50,12,16,466,"desc"],[50,16,16,470],[50,19,16,473,"hasPropertyDescriptor"],[50,40,16,494],[50,43,16,497,"Object"],[50,49,16,503],[50,50,16,504,"getOwnPropertyDescriptor"],[50,74,16,497],[50,75,16,529,"obj"],[50,78,16,497],[50,80,16,534,"key"],[50,83,16,497],[50,84,16,494],[50,87,16,541],[50,91,16,462],[52,0,16,547],[52,12,16,551,"desc"],[52,16,16,555],[52,21,16,560,"desc"],[52,25,16,564],[52,26,16,565,"get"],[52,29,16,560],[52,33,16,572,"desc"],[52,37,16,576],[52,38,16,577,"set"],[52,41,16,555],[52,42,16,547],[52,44,16,583],[53,0,16,585,"Object"],[53,10,16,585,"Object"],[53,16,16,591],[53,17,16,592,"defineProperty"],[53,31,16,585],[53,32,16,607,"newObj"],[53,38,16,585],[53,40,16,615,"key"],[53,43,16,585],[53,45,16,620,"desc"],[53,49,16,585],[54,0,16,628],[54,9,16,547],[54,15,16,634],[55,0,16,636,"newObj"],[55,10,16,636,"newObj"],[55,16,16,642],[55,17,16,643,"key"],[55,20,16,642],[55,21,16,636],[55,24,16,650,"obj"],[55,27,16,653],[55,28,16,654,"key"],[55,31,16,653],[55,32,16,636],[56,0,16,661],[57,0,16,663],[58,0,16,665],[60,0,16,666,"newObj"],[60,4,16,666,"newObj"],[60,10,16,672],[60,11,16,673,"default"],[60,18,16,666],[60,21,16,683,"obj"],[60,24,16,666],[62,0,16,688],[62,8,16,692,"cache"],[62,13,16,688],[62,15,16,699],[63,0,16,701,"cache"],[63,6,16,701,"cache"],[63,11,16,706],[63,12,16,707,"set"],[63,15,16,701],[63,16,16,711,"obj"],[63,19,16,701],[63,21,16,716,"newObj"],[63,27,16,701],[64,0,16,726],[66,0,16,727],[66,11,16,734,"newObj"],[66,17,16,727],[67,0,16,743],[69,0,18,0],[69,6,18,6,"PATTERN"],[69,13,18,13],[69,16,18,16],[69,31,18,0],[71,0,20,0],[71,11,20,9,"parseAndBuildMetadata"],[71,32,20,0],[71,33,20,31,"formatter"],[71,42,20,0],[71,44,20,42,"code"],[71,48,20,0],[71,50,20,48,"opts"],[71,54,20,0],[71,56,20,54],[72,0,21,2],[72,8,21,8,"ast"],[72,11,21,11],[72,14,21,14,"parseWithCodeFrame"],[72,32,21,32],[72,33,21,33,"code"],[72,37,21,32],[72,39,21,39,"opts"],[72,43,21,43],[72,44,21,44,"parser"],[72,50,21,32],[72,51,21,2],[73,0,20,54],[73,8,23,4,"placeholderWhitelist"],[73,28,20,54],[73,31,27,6,"opts"],[73,35,20,54],[73,36,23,4,"placeholderWhitelist"],[73,56,20,54],[74,0,20,54],[74,8,24,4,"placeholderPattern"],[74,26,20,54],[74,29,27,6,"opts"],[74,33,20,54],[74,34,24,4,"placeholderPattern"],[74,52,20,54],[75,0,20,54],[75,8,25,4,"preserveComments"],[75,24,20,54],[75,27,27,6,"opts"],[75,31,20,54],[75,32,25,4,"preserveComments"],[75,48,20,54],[76,0,20,54],[76,8,26,4,"syntacticPlaceholders"],[76,29,20,54],[76,32,27,6,"opts"],[76,36,20,54],[76,37,26,4,"syntacticPlaceholders"],[76,58,20,54],[77,0,28,2,"t"],[77,4,28,2,"t"],[77,5,28,3],[77,6,28,4,"removePropertiesDeep"],[77,26,28,2],[77,27,28,25,"ast"],[77,30,28,2],[77,32,28,30],[78,0,29,4,"preserveComments"],[78,6,29,4,"preserveComments"],[78,22,29,20],[78,24,29,4,"preserveComments"],[79,0,28,30],[79,5,28,2],[80,0,31,2,"formatter"],[80,4,31,2,"formatter"],[80,13,31,11],[80,14,31,12,"validate"],[80,22,31,2],[80,23,31,21,"ast"],[80,26,31,2],[81,0,32,2],[81,8,32,8,"syntactic"],[81,17,32,17],[81,20,32,20],[82,0,33,4,"placeholders"],[82,6,33,4,"placeholders"],[82,18,33,16],[82,20,33,18],[82,22,32,20],[83,0,34,4,"placeholderNames"],[83,6,34,4,"placeholderNames"],[83,22,34,20],[83,24,34,22],[83,28,34,26,"Set"],[83,31,34,22],[84,0,32,20],[84,5,32,2],[85,0,36,2],[85,8,36,8,"legacy"],[85,14,36,14],[85,17,36,17],[86,0,37,4,"placeholders"],[86,6,37,4,"placeholders"],[86,18,37,16],[86,20,37,18],[86,22,36,17],[87,0,38,4,"placeholderNames"],[87,6,38,4,"placeholderNames"],[87,22,38,20],[87,24,38,22],[87,28,38,26,"Set"],[87,31,38,22],[88,0,36,17],[88,5,36,2],[89,0,40,2],[89,8,40,8,"isLegacyRef"],[89,19,40,19],[89,22,40,22],[90,0,41,4,"value"],[90,6,41,4,"value"],[90,11,41,9],[90,13,41,11,"undefined"],[91,0,40,22],[91,5,40,2],[92,0,43,2,"t"],[92,4,43,2,"t"],[92,5,43,3],[92,6,43,4,"traverse"],[92,14,43,2],[92,15,43,13,"ast"],[92,18,43,2],[92,20,43,18,"placeholderVisitorHandler"],[92,45,43,2],[92,47,43,45],[93,0,44,4,"syntactic"],[93,6,44,4,"syntactic"],[93,15,44,13],[93,17,44,4,"syntactic"],[93,26,43,45],[94,0,45,4,"legacy"],[94,6,45,4,"legacy"],[94,12,45,10],[94,14,45,4,"legacy"],[94,20,43,45],[95,0,46,4,"isLegacyRef"],[95,6,46,4,"isLegacyRef"],[95,17,46,15],[95,19,46,4,"isLegacyRef"],[95,30,43,45],[96,0,47,4,"placeholderWhitelist"],[96,6,47,4,"placeholderWhitelist"],[96,26,47,24],[96,28,47,4,"placeholderWhitelist"],[96,48,43,45],[97,0,48,4,"placeholderPattern"],[97,6,48,4,"placeholderPattern"],[97,24,48,22],[97,26,48,4,"placeholderPattern"],[97,44,43,45],[98,0,49,4,"syntacticPlaceholders"],[98,6,49,4,"syntacticPlaceholders"],[98,27,49,25],[98,29,49,4,"syntacticPlaceholders"],[99,0,43,45],[99,5,43,2],[100,0,51,2],[100,11,51,9],[100,20,51,23],[101,0,52,4,"ast"],[101,6,52,4,"ast"],[101,9,52,7],[101,11,52,4,"ast"],[102,0,51,23],[102,5,51,9],[102,7,53,5,"isLegacyRef"],[102,18,53,16],[102,19,53,17,"value"],[102,24,53,5],[102,27,53,25,"legacy"],[102,33,53,5],[102,36,53,34,"syntactic"],[102,45,51,9],[102,46,51,2],[103,0,54,1],[105,0,56,0],[105,11,56,9,"placeholderVisitorHandler"],[105,36,56,0],[105,37,56,35,"node"],[105,41,56,0],[105,43,56,41,"ancestors"],[105,52,56,0],[105,54,56,52,"state"],[105,59,56,0],[105,61,56,59],[106,0,57,2],[106,8,57,6,"name"],[106,12,57,2],[108,0,59,2],[108,8,59,6,"t"],[108,9,59,7],[108,10,59,8,"isPlaceholder"],[108,23,59,6],[108,24,59,22,"node"],[108,28,59,6],[108,29,59,2],[108,31,59,29],[109,0,60,4],[109,10,60,8,"state"],[109,15,60,13],[109,16,60,14,"syntacticPlaceholders"],[109,37,60,8],[109,42,60,40],[109,47,60,4],[109,49,60,47],[110,0,61,6],[110,14,61,12],[110,18,61,16,"Error"],[110,23,61,12],[110,24,61,22],[110,75,61,73],[110,111,61,12],[110,112,61,6],[111,0,62,5],[111,7,60,4],[111,13,62,11],[112,0,63,6,"name"],[112,8,63,6,"name"],[112,12,63,10],[112,15,63,13,"node"],[112,19,63,17],[112,20,63,18,"name"],[112,24,63,13],[112,25,63,23,"name"],[112,29,63,6],[113,0,64,6,"state"],[113,8,64,6,"state"],[113,13,64,11],[113,14,64,12,"isLegacyRef"],[113,25,64,6],[113,26,64,24,"value"],[113,31,64,6],[113,34,64,32],[113,39,64,6],[114,0,65,5],[115,0,66,3],[115,5,59,2],[115,11,66,9],[115,15,66,13,"state"],[115,20,66,18],[115,21,66,19,"isLegacyRef"],[115,32,66,13],[115,33,66,31,"value"],[115,38,66,13],[115,43,66,41],[115,48,66,13],[115,52,66,50,"state"],[115,57,66,55],[115,58,66,56,"syntacticPlaceholders"],[115,79,66,9],[115,81,66,79],[116,0,67,4],[117,0,68,3],[117,5,66,9],[117,11,68,9],[117,15,68,13,"t"],[117,16,68,14],[117,17,68,15,"isIdentifier"],[117,29,68,13],[117,30,68,28,"node"],[117,34,68,13],[117,39,68,37,"t"],[117,40,68,38],[117,41,68,39,"isJSXIdentifier"],[117,56,68,37],[117,57,68,55,"node"],[117,61,68,37],[117,62,68,9],[117,64,68,62],[118,0,69,4,"name"],[118,6,69,4,"name"],[118,10,69,8],[118,13,69,11,"node"],[118,17,69,15],[118,18,69,16,"name"],[118,22,69,4],[119,0,70,4,"state"],[119,6,70,4,"state"],[119,11,70,9],[119,12,70,10,"isLegacyRef"],[119,23,70,4],[119,24,70,22,"value"],[119,29,70,4],[119,32,70,30],[119,36,70,4],[120,0,71,3],[120,5,68,9],[120,11,71,9],[120,15,71,13,"t"],[120,16,71,14],[120,17,71,15,"isStringLiteral"],[120,32,71,13],[120,33,71,31,"node"],[120,37,71,13],[120,38,71,9],[120,40,71,38],[121,0,72,4,"name"],[121,6,72,4,"name"],[121,10,72,8],[121,13,72,11,"node"],[121,17,72,15],[121,18,72,16,"value"],[121,23,72,4],[122,0,73,4,"state"],[122,6,73,4,"state"],[122,11,73,9],[122,12,73,10,"isLegacyRef"],[122,23,73,4],[122,24,73,22,"value"],[122,29,73,4],[122,32,73,30],[122,36,73,4],[123,0,74,3],[123,5,71,9],[123,11,74,9],[124,0,75,4],[125,0,76,3],[127,0,78,2],[127,8,78,6],[127,9,78,7,"state"],[127,14,78,12],[127,15,78,13,"isLegacyRef"],[127,26,78,7],[127,27,78,25,"value"],[127,32,78,6],[127,37,78,35,"state"],[127,42,78,40],[127,43,78,41,"placeholderPattern"],[127,61,78,35],[127,65,78,63],[127,69,78,35],[127,73,78,71,"state"],[127,78,78,76],[127,79,78,77,"placeholderWhitelist"],[127,99,78,71],[127,103,78,101],[127,107,78,6],[127,108,78,2],[127,110,78,108],[128,0,79,4],[128,12,79,10],[128,16,79,14,"Error"],[128,21,79,10],[128,22,79,20],[128,94,79,92],[128,132,79,10],[128,133,79,4],[129,0,80,3],[131,0,82,2],[131,8,82,6,"state"],[131,13,82,11],[131,14,82,12,"isLegacyRef"],[131,25,82,6],[131,26,82,24,"value"],[131,31,82,6],[131,36,82,34,"state"],[131,41,82,39],[131,42,82,40,"placeholderPattern"],[131,60,82,34],[131,65,82,63],[131,70,82,34],[131,74,82,72],[131,75,82,73],[131,76,82,74,"state"],[131,81,82,79],[131,82,82,80,"placeholderPattern"],[131,100,82,74],[131,104,82,102,"PATTERN"],[131,111,82,73],[131,113,82,111,"test"],[131,117,82,73],[131,118,82,116,"name"],[131,122,82,73],[131,123,82,6],[131,129,82,127],[131,130,82,128,"state"],[131,135,82,133],[131,136,82,134,"placeholderWhitelist"],[131,156,82,127],[131,160,82,158],[131,161,82,159,"state"],[131,166,82,164],[131,167,82,165,"placeholderWhitelist"],[131,187,82,159],[131,188,82,186,"has"],[131,191,82,159],[131,192,82,190,"name"],[131,196,82,159],[131,197,82,6],[131,198,82,2],[131,200,82,198],[132,0,83,4],[133,0,84,3],[135,0,86,2,"ancestors"],[135,4,86,2,"ancestors"],[135,13,86,11],[135,16,86,14,"ancestors"],[135,25,86,23],[135,26,86,24,"slice"],[135,31,86,14],[135,33,86,2],[136,0,56,59],[136,21,90,6,"ancestors"],[136,30,90,15],[136,31,90,16,"ancestors"],[136,40,90,25],[136,41,90,26,"length"],[136,47,90,16],[136,50,90,35],[136,51,90,15],[136,52,56,59],[137,0,56,59],[137,8,88,10,"parent"],[137,14,56,59],[137,28,88,4,"node"],[137,32,56,59],[138,0,56,59],[138,8,89,4,"key"],[138,11,56,59],[138,25,89,4,"key"],[138,28,56,59],[139,0,91,2],[139,8,91,6,"type"],[139,12,91,2],[141,0,93,2],[141,8,93,6,"t"],[141,9,93,7],[141,10,93,8,"isStringLiteral"],[141,25,93,6],[141,26,93,24,"node"],[141,30,93,6],[141,35,93,33,"t"],[141,36,93,34],[141,37,93,35,"isPlaceholder"],[141,50,93,33],[141,51,93,49,"node"],[141,55,93,33],[141,57,93,55],[142,0,94,4,"expectedNode"],[142,6,94,4,"expectedNode"],[142,18,94,16],[142,20,94,18],[143,0,93,55],[143,5,93,33],[143,6,93,2],[143,8,95,6],[144,0,96,4,"type"],[144,6,96,4,"type"],[144,10,96,8],[144,13,96,11],[144,21,96,4],[145,0,97,3],[145,5,93,2],[145,11,97,9],[145,15,97,13,"t"],[145,16,97,14],[145,17,97,15,"isNewExpression"],[145,32,97,13],[145,33,97,31,"parent"],[145,39,97,13],[145,44,97,42,"key"],[145,47,97,45],[145,52,97,50],[145,63,97,13],[145,67,97,65,"t"],[145,68,97,66],[145,69,97,67,"isCallExpression"],[145,85,97,65],[145,86,97,84,"parent"],[145,92,97,65],[145,97,97,95,"key"],[145,100,97,98],[145,105,97,103],[145,116,97,13],[145,120,97,118,"t"],[145,121,97,119],[145,122,97,120,"isFunction"],[145,132,97,118],[145,133,97,131,"parent"],[145,139,97,118],[145,144,97,142,"key"],[145,147,97,145],[145,152,97,150],[145,160,97,9],[145,162,97,160],[146,0,98,4,"type"],[146,6,98,4,"type"],[146,10,98,8],[146,13,98,11],[146,20,98,4],[147,0,99,3],[147,5,97,9],[147,11,99,9],[147,15,99,13,"t"],[147,16,99,14],[147,17,99,15,"isExpressionStatement"],[147,38,99,13],[147,39,99,37,"parent"],[147,45,99,13],[147,50,99,48],[147,51,99,49,"t"],[147,52,99,50],[147,53,99,51,"isPlaceholder"],[147,66,99,49],[147,67,99,65,"node"],[147,71,99,49],[147,72,99,9],[147,74,99,72],[148,0,100,4,"type"],[148,6,100,4,"type"],[148,10,100,8],[148,13,100,11],[148,24,100,4],[149,0,101,4,"ancestors"],[149,6,101,4,"ancestors"],[149,15,101,13],[149,18,101,16,"ancestors"],[149,27,101,25],[149,28,101,26,"slice"],[149,33,101,16],[149,34,101,32],[149,35,101,16],[149,37,101,35],[149,38,101,36],[149,39,101,16],[149,40,101,4],[150,0,102,3],[150,5,99,9],[150,11,102,9],[150,15,102,13,"t"],[150,16,102,14],[150,17,102,15,"isStatement"],[150,28,102,13],[150,29,102,27,"node"],[150,33,102,13],[150,38,102,36,"t"],[150,39,102,37],[150,40,102,38,"isPlaceholder"],[150,53,102,36],[150,54,102,52,"node"],[150,58,102,36],[150,59,102,9],[150,61,102,59],[151,0,103,4,"type"],[151,6,103,4,"type"],[151,10,103,8],[151,13,103,11],[151,24,103,4],[152,0,104,3],[152,5,102,9],[152,11,104,9],[153,0,105,4,"type"],[153,6,105,4,"type"],[153,10,105,8],[153,13,105,11],[153,20,105,4],[154,0,106,3],[156,0,56,59],[156,15,111,6,"state"],[156,20,111,11],[156,21,111,12,"isLegacyRef"],[156,32,111,6],[156,33,111,24,"value"],[156,38,111,6],[156,41,111,32,"state"],[156,46,111,37],[156,47,111,38,"legacy"],[156,53,111,6],[156,56,111,47,"state"],[156,61,111,52],[156,62,111,53,"syntactic"],[156,71,56,59],[157,0,56,59],[157,8,109,4,"placeholders"],[157,20,56,59],[157,28,109,4,"placeholders"],[157,40,56,59],[158,0,56,59],[158,8,110,4,"placeholderNames"],[158,24,56,59],[158,32,110,4,"placeholderNames"],[158,48,56,59],[160,0,112,2,"placeholders"],[160,4,112,2,"placeholders"],[160,16,112,14],[160,17,112,15,"push"],[160,21,112,2],[160,22,112,20],[161,0,113,4,"name"],[161,6,113,4,"name"],[161,10,113,8],[161,12,113,4,"name"],[161,16,112,20],[162,0,114,4,"type"],[162,6,114,4,"type"],[162,10,114,8],[162,12,114,4,"type"],[162,16,112,20],[163,0,115,4,"resolve"],[163,6,115,4,"resolve"],[163,13,115,11],[163,15,115,13],[163,32,115,13,"ast"],[163,35,115,16],[164,0,115,16],[164,15,115,20,"resolveAncestors"],[164,31,115,36],[164,32,115,37,"ast"],[164,35,115,36],[164,37,115,42,"ancestors"],[164,46,115,36],[164,47,115,16],[165,0,115,16],[165,7,112,20],[166,0,116,4,"isDuplicate"],[166,6,116,4,"isDuplicate"],[166,17,116,15],[166,19,116,17,"placeholderNames"],[166,35,116,33],[166,36,116,34,"has"],[166,39,116,17],[166,40,116,38,"name"],[166,44,116,17],[167,0,112,20],[167,5,112,2],[168,0,118,2,"placeholderNames"],[168,4,118,2,"placeholderNames"],[168,20,118,18],[168,21,118,19,"add"],[168,24,118,2],[168,25,118,23,"name"],[168,29,118,2],[169,0,119,1],[171,0,121,0],[171,11,121,9,"resolveAncestors"],[171,27,121,0],[171,28,121,26,"ast"],[171,31,121,0],[171,33,121,31,"ancestors"],[171,42,121,0],[171,44,121,42],[172,0,122,2],[172,8,122,6,"parent"],[172,14,122,12],[172,17,122,15,"ast"],[172,20,122,2],[174,0,124,2],[174,9,124,7],[174,13,124,11,"i"],[174,14,124,12],[174,17,124,15],[174,18,124,2],[174,20,124,18,"i"],[174,21,124,19],[174,24,124,22,"ancestors"],[174,33,124,31],[174,34,124,32,"length"],[174,40,124,22],[174,43,124,41],[174,44,124,2],[174,46,124,44,"i"],[174,47,124,45],[174,49,124,2],[174,51,124,49],[175,0,124,49],[175,25,128,8,"ancestors"],[175,34,128,17],[175,35,128,18,"i"],[175,36,128,17],[175,37,124,49],[176,0,124,49],[176,10,126,6,"key"],[176,14,124,49],[176,30,126,6,"key"],[176,33,124,49],[177,0,124,49],[177,10,127,6,"index"],[177,16,124,49],[177,32,127,6,"index"],[177,37,124,49],[179,0,130,4],[179,10,130,8,"index"],[179,16,130,13],[179,21,130,18,"undefined"],[179,30,130,4],[179,32,130,29],[180,0,131,6,"parent"],[180,8,131,6,"parent"],[180,14,131,12],[180,17,131,15,"parent"],[180,23,131,21],[180,24,131,22,"key"],[180,28,131,21],[180,29,131,6],[181,0,132,5],[181,7,130,4],[181,13,132,11],[182,0,133,6,"parent"],[182,8,133,6,"parent"],[182,14,133,12],[182,17,133,15,"parent"],[182,23,133,21],[182,24,133,22,"key"],[182,28,133,21],[182,29,133,15],[182,30,133,27,"index"],[182,36,133,15],[182,37,133,6],[183,0,134,5],[184,0,135,3],[186,0,121,42],[186,22,140,6,"ancestors"],[186,31,140,15],[186,32,140,16,"ancestors"],[186,41,140,25],[186,42,140,26,"length"],[186,48,140,16],[186,51,140,35],[186,52,140,15],[186,53,121,42],[187,0,121,42],[187,8,138,4,"key"],[187,11,121,42],[187,26,138,4,"key"],[187,29,121,42],[188,0,121,42],[188,8,139,4,"index"],[188,13,121,42],[188,28,139,4,"index"],[188,33,121,42],[189,0,141,2],[189,11,141,9],[190,0,142,4,"parent"],[190,6,142,4,"parent"],[190,12,142,10],[190,14,142,4,"parent"],[190,20,141,9],[191,0,143,4,"key"],[191,6,143,4,"key"],[191,9,143,7],[191,11,143,4,"key"],[191,14,141,9],[192,0,144,4,"index"],[192,6,144,4,"index"],[192,11,144,9],[192,13,144,4,"index"],[193,0,141,9],[193,5,141,2],[194,0,146,1],[196,0,148,0],[196,11,148,9,"parseWithCodeFrame"],[196,29,148,0],[196,30,148,28,"code"],[196,34,148,0],[196,36,148,34,"parserOpts"],[196,46,148,0],[196,48,148,46],[197,0,149,2,"parserOpts"],[197,4,149,2,"parserOpts"],[197,14,149,12],[197,17,149,15],[197,26,149,29],[198,0,150,4,"allowReturnOutsideFunction"],[198,6,150,4,"allowReturnOutsideFunction"],[198,32,150,30],[198,34,150,32],[198,38,149,29],[199,0,151,4,"allowSuperOutsideMethod"],[199,6,151,4,"allowSuperOutsideMethod"],[199,29,151,27],[199,31,151,29],[199,35,149,29],[200,0,152,4,"sourceType"],[200,6,152,4,"sourceType"],[200,16,152,14],[200,18,152,16],[201,0,149,29],[201,5,149,15],[201,7,153,5,"parserOpts"],[201,17,149,15],[201,19,153,17],[202,0,154,4,"plugins"],[202,6,154,4,"plugins"],[202,13,154,11],[202,15,154,13],[202,16,154,14,"parserOpts"],[202,26,154,24],[202,27,154,25,"plugins"],[202,34,154,14],[202,38,154,36],[202,40,154,13],[202,42,154,40,"concat"],[202,48,154,13],[202,49,154,47],[202,63,154,13],[203,0,153,17],[203,5,149,15],[203,6,149,2],[205,0,157,2],[205,8,157,6],[206,0,158,4],[206,13,158,11],[206,14,158,12],[206,17,158,15,"_parser"],[206,24,158,22],[206,25,158,23,"parse"],[206,30,158,11],[206,32,158,30,"code"],[206,36,158,11],[206,38,158,36,"parserOpts"],[206,48,158,11],[206,49,158,4],[207,0,159,3],[207,5,157,2],[207,6,159,4],[207,13,159,11,"err"],[207,16,159,4],[207,18,159,16],[208,0,160,4],[208,10,160,10,"loc"],[208,13,160,13],[208,16,160,16,"err"],[208,19,160,19],[208,20,160,20,"loc"],[208,23,160,4],[210,0,162,4],[210,10,162,8,"loc"],[210,13,162,4],[210,15,162,13],[211,0,163,6,"err"],[211,8,163,6,"err"],[211,11,163,9],[211,12,163,10,"message"],[211,19,163,6],[211,23,163,21],[211,30,163,28],[211,31,163,29],[211,34,163,32,"_codeFrame"],[211,44,163,42],[211,45,163,43,"codeFrameColumns"],[211,61,163,28],[211,63,163,61,"code"],[211,67,163,28],[211,69,163,67],[212,0,164,8,"start"],[212,10,164,8,"start"],[212,15,164,13],[212,17,164,15,"loc"],[213,0,163,67],[213,9,163,28],[213,10,163,6],[214,0,166,6,"err"],[214,8,166,6,"err"],[214,11,166,9],[214,12,166,10,"code"],[214,16,166,6],[214,19,166,17],[214,47,166,6],[215,0,167,5],[217,0,169,4],[217,12,169,10,"err"],[217,15,169,4],[218,0,170,3],[219,0,171,1]]},"type":"js/module"}]}