{"dependencies":[{"name":"@babel/types","data":{"isAsync":false}},{"name":"@babel/helper-function-name","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.toComputedKey = toComputedKey;\n  exports.ensureBlock = ensureBlock;\n  exports.arrowFunctionToShadowed = arrowFunctionToShadowed;\n  exports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\n  exports.arrowFunctionToExpression = arrowFunctionToExpression;\n\n  var t = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"@babel/types\"));\n\n  var _helperFunctionName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/helper-function-name\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n\n    return cache;\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n\n    var cache = _getRequireWildcardCache();\n\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj.default = obj;\n\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n\n    return newObj;\n  }\n\n  function toComputedKey() {\n    var node = this.node;\n    var key;\n\n    if (this.isMemberExpression()) {\n      key = node.property;\n    } else if (this.isProperty() || this.isMethod()) {\n      key = node.key;\n    } else {\n      throw new ReferenceError(\"todo\");\n    }\n\n    if (!node.computed) {\n      if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n    }\n\n    return key;\n  }\n\n  function ensureBlock() {\n    var body = this.get(\"body\");\n    var bodyNode = body.node;\n\n    if (Array.isArray(body)) {\n      throw new Error(\"Can't convert array path to a block statement\");\n    }\n\n    if (!bodyNode) {\n      throw new Error(\"Can't convert node without a body\");\n    }\n\n    if (body.isBlockStatement()) {\n      return bodyNode;\n    }\n\n    var statements = [];\n    var stringPath = \"body\";\n    var key;\n    var listKey;\n\n    if (body.isStatement()) {\n      listKey = \"body\";\n      key = 0;\n      statements.push(body.node);\n    } else {\n      stringPath += \".body.0\";\n\n      if (this.isFunction()) {\n        key = \"argument\";\n        statements.push(t.returnStatement(body.node));\n      } else {\n        key = \"expression\";\n        statements.push(t.expressionStatement(body.node));\n      }\n    }\n\n    this.node.body = t.blockStatement(statements);\n    var parentPath = this.get(stringPath);\n    body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n    return this.node;\n  }\n\n  function arrowFunctionToShadowed() {\n    if (!this.isArrowFunctionExpression()) return;\n    this.arrowFunctionToExpression();\n  }\n\n  function unwrapFunctionEnvironment() {\n    if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n      throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n    }\n\n    hoistFunctionEnvironment(this);\n  }\n\n  function arrowFunctionToExpression() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$allowInsertArrow = _ref.allowInsertArrow,\n        allowInsertArrow = _ref$allowInsertArrow === void 0 ? true : _ref$allowInsertArrow,\n        _ref$specCompliant = _ref.specCompliant,\n        specCompliant = _ref$specCompliant === void 0 ? false : _ref$specCompliant;\n\n    if (!this.isArrowFunctionExpression()) {\n      throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n    }\n\n    var thisBinding = hoistFunctionEnvironment(this, specCompliant, allowInsertArrow);\n    this.ensureBlock();\n    this.node.type = \"FunctionExpression\";\n\n    if (specCompliant) {\n      var checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier(\"arrowCheckId\");\n\n      if (checkBinding) {\n        this.parentPath.scope.push({\n          id: checkBinding,\n          init: t.objectExpression([])\n        });\n      }\n\n      this.get(\"body\").unshiftContainer(\"body\", t.expressionStatement(t.callExpression(this.hub.addHelper(\"newArrowCheck\"), [t.thisExpression(), checkBinding ? t.identifier(checkBinding.name) : t.identifier(thisBinding)])));\n      this.replaceWith(t.callExpression(t.memberExpression((0, _helperFunctionName.default)(this, true) || this.node, t.identifier(\"bind\")), [checkBinding ? t.identifier(checkBinding.name) : t.thisExpression()]));\n    }\n  }\n\n  function hoistFunctionEnvironment(fnPath) {\n    var specCompliant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var allowInsertArrow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var thisEnvFn = fnPath.findParent(function (p) {\n      return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({\n        static: false\n      });\n    });\n    var inConstructor = thisEnvFn && thisEnvFn.node.kind === \"constructor\";\n\n    if (thisEnvFn.isClassProperty()) {\n      throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n    }\n\n    var _getScopeInformation = getScopeInformation(fnPath),\n        thisPaths = _getScopeInformation.thisPaths,\n        argumentsPaths = _getScopeInformation.argumentsPaths,\n        newTargetPaths = _getScopeInformation.newTargetPaths,\n        superProps = _getScopeInformation.superProps,\n        superCalls = _getScopeInformation.superCalls;\n\n    if (inConstructor && superCalls.length > 0) {\n      if (!allowInsertArrow) {\n        throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n      }\n\n      var allSuperCalls = [];\n      thisEnvFn.traverse({\n        Function: function Function(child) {\n          if (child.isArrowFunctionExpression()) return;\n          child.skip();\n        },\n        ClassProperty: function ClassProperty(child) {\n          child.skip();\n        },\n        CallExpression: function CallExpression(child) {\n          if (!child.get(\"callee\").isSuper()) return;\n          allSuperCalls.push(child);\n        }\n      });\n      var superBinding = getSuperBinding(thisEnvFn);\n      allSuperCalls.forEach(function (superCall) {\n        var callee = t.identifier(superBinding);\n        callee.loc = superCall.node.callee.loc;\n        superCall.get(\"callee\").replaceWith(callee);\n      });\n    }\n\n    if (argumentsPaths.length > 0) {\n      var argumentsBinding = getBinding(thisEnvFn, \"arguments\", function () {\n        return t.identifier(\"arguments\");\n      });\n      argumentsPaths.forEach(function (argumentsChild) {\n        var argsRef = t.identifier(argumentsBinding);\n        argsRef.loc = argumentsChild.node.loc;\n        argumentsChild.replaceWith(argsRef);\n      });\n    }\n\n    if (newTargetPaths.length > 0) {\n      var newTargetBinding = getBinding(thisEnvFn, \"newtarget\", function () {\n        return t.metaProperty(t.identifier(\"new\"), t.identifier(\"target\"));\n      });\n      newTargetPaths.forEach(function (targetChild) {\n        var targetRef = t.identifier(newTargetBinding);\n        targetRef.loc = targetChild.node.loc;\n        targetChild.replaceWith(targetRef);\n      });\n    }\n\n    if (superProps.length > 0) {\n      if (!allowInsertArrow) {\n        throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n      }\n\n      var flatSuperProps = superProps.reduce(function (acc, superProp) {\n        return acc.concat(standardizeSuperProperty(superProp));\n      }, []);\n      flatSuperProps.forEach(function (superProp) {\n        var key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n        var isAssignment = superProp.parentPath.isAssignmentExpression({\n          left: superProp.node\n        });\n        var isCall = superProp.parentPath.isCallExpression({\n          callee: superProp.node\n        });\n        var superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n        var args = [];\n\n        if (superProp.node.computed) {\n          args.push(superProp.get(\"property\").node);\n        }\n\n        if (isAssignment) {\n          var value = superProp.parentPath.node.right;\n          args.push(value);\n        }\n\n        var call = t.callExpression(t.identifier(superBinding), args);\n\n        if (isCall) {\n          superProp.parentPath.unshiftContainer(\"arguments\", t.thisExpression());\n          superProp.replaceWith(t.memberExpression(call, t.identifier(\"call\")));\n          thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n        } else if (isAssignment) {\n          superProp.parentPath.replaceWith(call);\n        } else {\n          superProp.replaceWith(call);\n        }\n      });\n    }\n\n    var thisBinding;\n\n    if (thisPaths.length > 0 || specCompliant) {\n      thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n      if (!specCompliant || inConstructor && hasSuperClass(thisEnvFn)) {\n        thisPaths.forEach(function (thisChild) {\n          var thisRef = thisChild.isJSX() ? t.jsxIdentifier(thisBinding) : t.identifier(thisBinding);\n          thisRef.loc = thisChild.node.loc;\n          thisChild.replaceWith(thisRef);\n        });\n        if (specCompliant) thisBinding = null;\n      }\n    }\n\n    return thisBinding;\n  }\n\n  function standardizeSuperProperty(superProp) {\n    if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n      var assignmentPath = superProp.parentPath;\n      var op = assignmentPath.node.operator.slice(0, -1);\n      var value = assignmentPath.node.right;\n      assignmentPath.node.operator = \"=\";\n\n      if (superProp.node.computed) {\n        var tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n        assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, t.assignmentExpression(\"=\", tmp, superProp.node.property), true));\n        assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(tmp.name), true), value));\n      } else {\n        assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, superProp.node.property));\n        assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(superProp.node.property.name)), value));\n      }\n\n      return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n    } else if (superProp.parentPath.isUpdateExpression()) {\n      var updateExpr = superProp.parentPath;\n\n      var _tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n\n      var computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n      var parts = [t.assignmentExpression(\"=\", _tmp, t.memberExpression(superProp.node.object, computedKey ? t.assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), t.assignmentExpression(\"=\", t.memberExpression(superProp.node.object, computedKey ? t.identifier(computedKey.name) : superProp.node.property, superProp.node.computed), t.binaryExpression(\"+\", t.identifier(_tmp.name), t.numericLiteral(1)))];\n\n      if (!superProp.parentPath.node.prefix) {\n        parts.push(t.identifier(_tmp.name));\n      }\n\n      updateExpr.replaceWith(t.sequenceExpression(parts));\n      var left = updateExpr.get(\"expressions.0.right\");\n      var right = updateExpr.get(\"expressions.1.left\");\n      return [left, right];\n    }\n\n    return [superProp];\n  }\n\n  function hasSuperClass(thisEnvFn) {\n    return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n  }\n\n  function getThisBinding(thisEnvFn, inConstructor) {\n    return getBinding(thisEnvFn, \"this\", function (thisBinding) {\n      if (!inConstructor || !hasSuperClass(thisEnvFn)) return t.thisExpression();\n      var supers = new WeakSet();\n      thisEnvFn.traverse({\n        Function: function Function(child) {\n          if (child.isArrowFunctionExpression()) return;\n          child.skip();\n        },\n        ClassProperty: function ClassProperty(child) {\n          child.skip();\n        },\n        CallExpression: function CallExpression(child) {\n          if (!child.get(\"callee\").isSuper()) return;\n          if (supers.has(child.node)) return;\n          supers.add(child.node);\n          child.replaceWithMultiple([child.node, t.assignmentExpression(\"=\", t.identifier(thisBinding), t.identifier(\"this\"))]);\n        }\n      });\n    });\n  }\n\n  function getSuperBinding(thisEnvFn) {\n    return getBinding(thisEnvFn, \"supercall\", function () {\n      var argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n      return t.arrowFunctionExpression([t.restElement(argsBinding)], t.callExpression(t.super(), [t.spreadElement(t.identifier(argsBinding.name))]));\n    });\n  }\n\n  function getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n    var op = isAssignment ? \"set\" : \"get\";\n    return getBinding(thisEnvFn, \"superprop_\" + op + \":\" + (propName || \"\"), function () {\n      var argsList = [];\n      var fnBody;\n\n      if (propName) {\n        fnBody = t.memberExpression(t.super(), t.identifier(propName));\n      } else {\n        var method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n        argsList.unshift(method);\n        fnBody = t.memberExpression(t.super(), t.identifier(method.name), true);\n      }\n\n      if (isAssignment) {\n        var valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n        argsList.push(valueIdent);\n        fnBody = t.assignmentExpression(\"=\", fnBody, t.identifier(valueIdent.name));\n      }\n\n      return t.arrowFunctionExpression(argsList, fnBody);\n    });\n  }\n\n  function getBinding(thisEnvFn, key, init) {\n    var cacheKey = \"binding:\" + key;\n    var data = thisEnvFn.getData(cacheKey);\n\n    if (!data) {\n      var id = thisEnvFn.scope.generateUidIdentifier(key);\n      data = id.name;\n      thisEnvFn.setData(cacheKey, data);\n      thisEnvFn.scope.push({\n        id: id,\n        init: init(data)\n      });\n    }\n\n    return data;\n  }\n\n  function getScopeInformation(fnPath) {\n    var thisPaths = [];\n    var argumentsPaths = [];\n    var newTargetPaths = [];\n    var superProps = [];\n    var superCalls = [];\n    fnPath.traverse({\n      ClassProperty: function ClassProperty(child) {\n        child.skip();\n      },\n      Function: function Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n      ThisExpression: function ThisExpression(child) {\n        thisPaths.push(child);\n      },\n      JSXIdentifier: function JSXIdentifier(child) {\n        if (child.node.name !== \"this\") return;\n\n        if (!child.parentPath.isJSXMemberExpression({\n          object: child.node\n        }) && !child.parentPath.isJSXOpeningElement({\n          name: child.node\n        })) {\n          return;\n        }\n\n        thisPaths.push(child);\n      },\n      CallExpression: function CallExpression(child) {\n        if (child.get(\"callee\").isSuper()) superCalls.push(child);\n      },\n      MemberExpression: function MemberExpression(child) {\n        if (child.get(\"object\").isSuper()) superProps.push(child);\n      },\n      ReferencedIdentifier: function ReferencedIdentifier(child) {\n        if (child.node.name !== \"arguments\") return;\n        argumentsPaths.push(child);\n      },\n      MetaProperty: function MetaProperty(child) {\n        if (!child.get(\"meta\").isIdentifier({\n          name: \"new\"\n        })) return;\n        if (!child.get(\"property\").isIdentifier({\n          name: \"target\"\n        })) return;\n        newTargetPaths.push(child);\n      }\n    });\n    return {\n      thisPaths: thisPaths,\n      argumentsPaths: argumentsPaths,\n      newTargetPaths: newTargetPaths,\n      superProps: superProps,\n      superCalls: superCalls\n    };\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"toComputedKey"],[7,23,6,0],[7,26,6,24,"toComputedKey"],[7,39,6,0],[8,0,7,0,"exports"],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"ensureBlock"],[8,21,7,0],[8,24,7,22,"ensureBlock"],[8,35,7,0],[9,0,8,0,"exports"],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"arrowFunctionToShadowed"],[9,33,8,0],[9,36,8,34,"arrowFunctionToShadowed"],[9,59,8,0],[10,0,9,0,"exports"],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"unwrapFunctionEnvironment"],[10,35,9,0],[10,38,9,36,"unwrapFunctionEnvironment"],[10,63,9,0],[11,0,10,0,"exports"],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"arrowFunctionToExpression"],[11,35,10,0],[11,38,10,36,"arrowFunctionToExpression"],[11,63,10,0],[13,0,12,0],[13,6,12,4,"t"],[13,7,12,5],[13,10,12,8,"_interopRequireWildcard"],[13,33,12,31],[13,34,12,32,"require"],[13,45,12,39],[13,80,12,31],[13,81,12,0],[15,0,14,0],[15,6,14,4,"_helperFunctionName"],[15,25,14,23],[15,28,14,26,"_interopRequireDefault"],[15,50,14,48],[15,51,14,49,"require"],[15,62,14,56],[15,112,14,48],[15,113,14,0],[17,0,16,0],[17,11,16,9,"_interopRequireDefault"],[17,33,16,0],[17,34,16,32,"obj"],[17,37,16,0],[17,39,16,37],[18,0,16,39],[18,11,16,46,"obj"],[18,14,16,49],[18,18,16,53,"obj"],[18,21,16,56],[18,22,16,57,"__esModule"],[18,32,16,46],[18,35,16,70,"obj"],[18,38,16,46],[18,41,16,76],[19,0,16,78,"default"],[19,6,16,78,"default"],[19,13,16,85],[19,15,16,87,"obj"],[20,0,16,76],[20,5,16,39],[21,0,16,95],[23,0,18,0],[23,11,18,9,"_getRequireWildcardCache"],[23,35,18,0],[23,38,18,36],[24,0,18,38],[24,8,18,42],[24,15,18,49,"WeakMap"],[24,22,18,42],[24,27,18,61],[24,37,18,38],[24,39,18,73],[24,46,18,80],[24,50,18,73],[25,0,18,86],[25,8,18,90,"cache"],[25,13,18,95],[25,16,18,98],[25,20,18,102,"WeakMap"],[25,27,18,98],[25,29,18,86],[27,0,18,113,"_getRequireWildcardCache"],[27,4,18,113,"_getRequireWildcardCache"],[27,28,18,137],[27,31,18,140],[27,67,18,152],[28,0,18,154],[28,13,18,161,"cache"],[28,18,18,154],[29,0,18,169],[29,5,18,113],[31,0,18,171],[31,11,18,178,"cache"],[31,16,18,171],[32,0,18,186],[34,0,20,0],[34,11,20,9,"_interopRequireWildcard"],[34,34,20,0],[34,35,20,33,"obj"],[34,38,20,0],[34,40,20,38],[35,0,20,40],[35,8,20,44,"obj"],[35,11,20,47],[35,15,20,51,"obj"],[35,18,20,54],[35,19,20,55,"__esModule"],[35,29,20,40],[35,31,20,67],[36,0,20,69],[36,13,20,76,"obj"],[36,16,20,69],[37,0,20,82],[39,0,20,83],[39,8,20,87,"obj"],[39,11,20,90],[39,16,20,95],[39,20,20,87],[39,24,20,103],[39,31,20,110,"obj"],[39,34,20,103],[39,39,20,118],[39,47,20,103],[39,51,20,130],[39,58,20,137,"obj"],[39,61,20,130],[39,66,20,145],[39,76,20,83],[39,78,20,157],[40,0,20,159],[40,13,20,166],[41,0,20,168,"default"],[41,8,20,168,"default"],[41,15,20,175],[41,17,20,177,"obj"],[42,0,20,166],[42,7,20,159],[43,0,20,185],[45,0,20,186],[45,8,20,190,"cache"],[45,13,20,195],[45,16,20,198,"_getRequireWildcardCache"],[45,40,20,222],[45,42,20,186],[47,0,20,226],[47,8,20,230,"cache"],[47,13,20,235],[47,17,20,239,"cache"],[47,22,20,244],[47,23,20,245,"has"],[47,26,20,239],[47,27,20,249,"obj"],[47,30,20,239],[47,31,20,226],[47,33,20,255],[48,0,20,257],[48,13,20,264,"cache"],[48,18,20,269],[48,19,20,270,"get"],[48,22,20,264],[48,23,20,274,"obj"],[48,26,20,264],[48,27,20,257],[49,0,20,281],[51,0,20,282],[51,8,20,286,"newObj"],[51,14,20,292],[51,17,20,295],[51,19,20,282],[52,0,20,299],[52,8,20,303,"hasPropertyDescriptor"],[52,29,20,324],[52,32,20,327,"Object"],[52,38,20,333],[52,39,20,334,"defineProperty"],[52,53,20,327],[52,57,20,352,"Object"],[52,63,20,358],[52,64,20,359,"getOwnPropertyDescriptor"],[52,88,20,299],[54,0,20,385],[54,9,20,390],[54,13,20,394,"key"],[54,16,20,385],[54,20,20,401,"obj"],[54,23,20,385],[54,25,20,406],[55,0,20,408],[55,10,20,412,"Object"],[55,16,20,418],[55,17,20,419,"prototype"],[55,26,20,412],[55,27,20,429,"hasOwnProperty"],[55,41,20,412],[55,42,20,444,"call"],[55,46,20,412],[55,47,20,449,"obj"],[55,50,20,412],[55,52,20,454,"key"],[55,55,20,412],[55,56,20,408],[55,58,20,460],[56,0,20,462],[56,12,20,466,"desc"],[56,16,20,470],[56,19,20,473,"hasPropertyDescriptor"],[56,40,20,494],[56,43,20,497,"Object"],[56,49,20,503],[56,50,20,504,"getOwnPropertyDescriptor"],[56,74,20,497],[56,75,20,529,"obj"],[56,78,20,497],[56,80,20,534,"key"],[56,83,20,497],[56,84,20,494],[56,87,20,541],[56,91,20,462],[58,0,20,547],[58,12,20,551,"desc"],[58,16,20,555],[58,21,20,560,"desc"],[58,25,20,564],[58,26,20,565,"get"],[58,29,20,560],[58,33,20,572,"desc"],[58,37,20,576],[58,38,20,577,"set"],[58,41,20,555],[58,42,20,547],[58,44,20,583],[59,0,20,585,"Object"],[59,10,20,585,"Object"],[59,16,20,591],[59,17,20,592,"defineProperty"],[59,31,20,585],[59,32,20,607,"newObj"],[59,38,20,585],[59,40,20,615,"key"],[59,43,20,585],[59,45,20,620,"desc"],[59,49,20,585],[60,0,20,628],[60,9,20,547],[60,15,20,634],[61,0,20,636,"newObj"],[61,10,20,636,"newObj"],[61,16,20,642],[61,17,20,643,"key"],[61,20,20,642],[61,21,20,636],[61,24,20,650,"obj"],[61,27,20,653],[61,28,20,654,"key"],[61,31,20,653],[61,32,20,636],[62,0,20,661],[63,0,20,663],[64,0,20,665],[66,0,20,666,"newObj"],[66,4,20,666,"newObj"],[66,10,20,672],[66,11,20,673,"default"],[66,18,20,666],[66,21,20,683,"obj"],[66,24,20,666],[68,0,20,688],[68,8,20,692,"cache"],[68,13,20,688],[68,15,20,699],[69,0,20,701,"cache"],[69,6,20,701,"cache"],[69,11,20,706],[69,12,20,707,"set"],[69,15,20,701],[69,16,20,711,"obj"],[69,19,20,701],[69,21,20,716,"newObj"],[69,27,20,701],[70,0,20,726],[72,0,20,727],[72,11,20,734,"newObj"],[72,17,20,727],[73,0,20,743],[75,0,22,0],[75,11,22,9,"toComputedKey"],[75,24,22,0],[75,27,22,25],[76,0,23,2],[76,8,23,8,"node"],[76,12,23,12],[76,15,23,15],[76,20,23,20,"node"],[76,24,23,2],[77,0,24,2],[77,8,24,6,"key"],[77,11,24,2],[79,0,26,2],[79,8,26,6],[79,13,26,11,"isMemberExpression"],[79,31,26,6],[79,33,26,2],[79,35,26,33],[80,0,27,4,"key"],[80,6,27,4,"key"],[80,9,27,7],[80,12,27,10,"node"],[80,16,27,14],[80,17,27,15,"property"],[80,25,27,4],[81,0,28,3],[81,5,26,2],[81,11,28,9],[81,15,28,13],[81,20,28,18,"isProperty"],[81,30,28,13],[81,36,28,34],[81,41,28,39,"isMethod"],[81,49,28,34],[81,51,28,9],[81,53,28,51],[82,0,29,4,"key"],[82,6,29,4,"key"],[82,9,29,7],[82,12,29,10,"node"],[82,16,29,14],[82,17,29,15,"key"],[82,20,29,4],[83,0,30,3],[83,5,28,9],[83,11,30,9],[84,0,31,4],[84,12,31,10],[84,16,31,14,"ReferenceError"],[84,30,31,10],[84,31,31,29],[84,37,31,10],[84,38,31,4],[85,0,32,3],[87,0,34,2],[87,8,34,6],[87,9,34,7,"node"],[87,13,34,11],[87,14,34,12,"computed"],[87,22,34,2],[87,24,34,22],[88,0,35,4],[88,10,35,8,"t"],[88,11,35,9],[88,12,35,10,"isIdentifier"],[88,24,35,8],[88,25,35,23,"key"],[88,28,35,8],[88,29,35,4],[88,31,35,29,"key"],[88,34,35,32],[88,37,35,35,"t"],[88,38,35,36],[88,39,35,37,"stringLiteral"],[88,52,35,35],[88,53,35,51,"key"],[88,56,35,54],[88,57,35,55,"name"],[88,61,35,35],[88,62,35,29],[89,0,36,3],[91,0,38,2],[91,11,38,9,"key"],[91,14,38,2],[92,0,39,1],[94,0,41,0],[94,11,41,9,"ensureBlock"],[94,22,41,0],[94,25,41,23],[95,0,42,2],[95,8,42,8,"body"],[95,12,42,12],[95,15,42,15],[95,20,42,20,"get"],[95,23,42,15],[95,24,42,24],[95,30,42,15],[95,31,42,2],[96,0,43,2],[96,8,43,8,"bodyNode"],[96,16,43,16],[96,19,43,19,"body"],[96,23,43,23],[96,24,43,24,"node"],[96,28,43,2],[98,0,45,2],[98,8,45,6,"Array"],[98,13,45,11],[98,14,45,12,"isArray"],[98,21,45,6],[98,22,45,20,"body"],[98,26,45,6],[98,27,45,2],[98,29,45,27],[99,0,46,4],[99,12,46,10],[99,16,46,14,"Error"],[99,21,46,10],[99,22,46,20],[99,69,46,10],[99,70,46,4],[100,0,47,3],[102,0,49,2],[102,8,49,6],[102,9,49,7,"bodyNode"],[102,17,49,2],[102,19,49,17],[103,0,50,4],[103,12,50,10],[103,16,50,14,"Error"],[103,21,50,10],[103,22,50,20],[103,57,50,10],[103,58,50,4],[104,0,51,3],[106,0,53,2],[106,8,53,6,"body"],[106,12,53,10],[106,13,53,11,"isBlockStatement"],[106,29,53,6],[106,31,53,2],[106,33,53,31],[107,0,54,4],[107,13,54,11,"bodyNode"],[107,21,54,4],[108,0,55,3],[110,0,57,2],[110,8,57,8,"statements"],[110,18,57,18],[110,21,57,21],[110,23,57,2],[111,0,58,2],[111,8,58,6,"stringPath"],[111,18,58,16],[111,21,58,19],[111,27,58,2],[112,0,59,2],[112,8,59,6,"key"],[112,11,59,2],[113,0,60,2],[113,8,60,6,"listKey"],[113,15,60,2],[115,0,62,2],[115,8,62,6,"body"],[115,12,62,10],[115,13,62,11,"isStatement"],[115,24,62,6],[115,26,62,2],[115,28,62,26],[116,0,63,4,"listKey"],[116,6,63,4,"listKey"],[116,13,63,11],[116,16,63,14],[116,22,63,4],[117,0,64,4,"key"],[117,6,64,4,"key"],[117,9,64,7],[117,12,64,10],[117,13,64,4],[118,0,65,4,"statements"],[118,6,65,4,"statements"],[118,16,65,14],[118,17,65,15,"push"],[118,21,65,4],[118,22,65,20,"body"],[118,26,65,24],[118,27,65,25,"node"],[118,31,65,4],[119,0,66,3],[119,5,62,2],[119,11,66,9],[120,0,67,4,"stringPath"],[120,6,67,4,"stringPath"],[120,16,67,14],[120,20,67,18],[120,29,67,4],[122,0,69,4],[122,10,69,8],[122,15,69,13,"isFunction"],[122,25,69,8],[122,27,69,4],[122,29,69,27],[123,0,70,6,"key"],[123,8,70,6,"key"],[123,11,70,9],[123,14,70,12],[123,24,70,6],[124,0,71,6,"statements"],[124,8,71,6,"statements"],[124,18,71,16],[124,19,71,17,"push"],[124,23,71,6],[124,24,71,22,"t"],[124,25,71,23],[124,26,71,24,"returnStatement"],[124,41,71,22],[124,42,71,40,"body"],[124,46,71,44],[124,47,71,45,"node"],[124,51,71,22],[124,52,71,6],[125,0,72,5],[125,7,69,4],[125,13,72,11],[126,0,73,6,"key"],[126,8,73,6,"key"],[126,11,73,9],[126,14,73,12],[126,26,73,6],[127,0,74,6,"statements"],[127,8,74,6,"statements"],[127,18,74,16],[127,19,74,17,"push"],[127,23,74,6],[127,24,74,22,"t"],[127,25,74,23],[127,26,74,24,"expressionStatement"],[127,45,74,22],[127,46,74,44,"body"],[127,50,74,48],[127,51,74,49,"node"],[127,55,74,22],[127,56,74,6],[128,0,75,5],[129,0,76,3],[131,0,78,2],[131,9,78,7,"node"],[131,13,78,2],[131,14,78,12,"body"],[131,18,78,2],[131,21,78,19,"t"],[131,22,78,20],[131,23,78,21,"blockStatement"],[131,37,78,19],[131,38,78,36,"statements"],[131,48,78,19],[131,49,78,2],[132,0,79,2],[132,8,79,8,"parentPath"],[132,18,79,18],[132,21,79,21],[132,26,79,26,"get"],[132,29,79,21],[132,30,79,30,"stringPath"],[132,40,79,21],[132,41,79,2],[133,0,80,2,"body"],[133,4,80,2,"body"],[133,8,80,6],[133,9,80,7,"setup"],[133,14,80,2],[133,15,80,13,"parentPath"],[133,25,80,2],[133,27,80,25,"listKey"],[133,34,80,32],[133,37,80,35,"parentPath"],[133,47,80,45],[133,48,80,46,"node"],[133,52,80,35],[133,53,80,51,"listKey"],[133,60,80,35],[133,61,80,32],[133,64,80,62,"parentPath"],[133,74,80,72],[133,75,80,73,"node"],[133,79,80,2],[133,81,80,79,"listKey"],[133,88,80,2],[133,90,80,88,"key"],[133,93,80,2],[134,0,81,2],[134,11,81,9],[134,16,81,14,"node"],[134,20,81,2],[135,0,82,1],[137,0,84,0],[137,11,84,9,"arrowFunctionToShadowed"],[137,34,84,0],[137,37,84,35],[138,0,85,2],[138,8,85,6],[138,9,85,7],[138,14,85,12,"isArrowFunctionExpression"],[138,39,85,7],[138,41,85,2],[138,43,85,41],[139,0,86,2],[139,9,86,7,"arrowFunctionToExpression"],[139,34,86,2],[140,0,87,1],[142,0,89,0],[142,11,89,9,"unwrapFunctionEnvironment"],[142,36,89,0],[142,39,89,37],[143,0,90,2],[143,8,90,6],[143,9,90,7],[143,14,90,12,"isArrowFunctionExpression"],[143,39,90,7],[143,41,90,6],[143,45,90,43],[143,46,90,44],[143,51,90,49,"isFunctionExpression"],[143,71,90,44],[143,73,90,6],[143,77,90,75],[143,78,90,76],[143,83,90,81,"isFunctionDeclaration"],[143,104,90,76],[143,106,90,2],[143,108,90,106],[144,0,91,4],[144,12,91,10],[144,17,91,15,"buildCodeFrameError"],[144,36,91,10],[144,37,91,35],[144,85,91,10],[144,86,91,4],[145,0,92,3],[147,0,94,2,"hoistFunctionEnvironment"],[147,4,94,2,"hoistFunctionEnvironment"],[147,28,94,26],[147,29,94,27],[147,33,94,26],[147,34,94,2],[148,0,95,1],[150,0,97,0],[150,11,97,9,"arrowFunctionToExpression"],[150,36,97,0],[150,39,100,8],[151,0,100,8],[151,83,100,4],[151,85,100,8],[152,0,100,8],[152,37,98,2,"allowInsertArrow"],[152,53,100,8],[153,0,100,8],[153,8,98,2,"allowInsertArrow"],[153,24,100,8],[153,62,98,21],[153,66,100,8],[154,0,100,8],[154,34,99,2,"specCompliant"],[154,47,100,8],[155,0,100,8],[155,8,99,2,"specCompliant"],[155,21,100,8],[155,56,99,18],[155,61,100,8],[157,0,101,2],[157,8,101,6],[157,9,101,7],[157,14,101,12,"isArrowFunctionExpression"],[157,39,101,7],[157,41,101,2],[157,43,101,41],[158,0,102,4],[158,12,102,10],[158,17,102,15,"buildCodeFrameError"],[158,36,102,10],[158,37,102,35],[158,98,102,10],[158,99,102,4],[159,0,103,3],[161,0,105,2],[161,8,105,8,"thisBinding"],[161,19,105,19],[161,22,105,22,"hoistFunctionEnvironment"],[161,46,105,46],[161,47,105,47],[161,51,105,46],[161,53,105,53,"specCompliant"],[161,66,105,46],[161,68,105,68,"allowInsertArrow"],[161,84,105,46],[161,85,105,2],[162,0,106,2],[162,9,106,7,"ensureBlock"],[162,20,106,2],[163,0,107,2],[163,9,107,7,"node"],[163,13,107,2],[163,14,107,12,"type"],[163,18,107,2],[163,21,107,19],[163,41,107,2],[165,0,109,2],[165,8,109,6,"specCompliant"],[165,21,109,2],[165,23,109,21],[166,0,110,4],[166,10,110,10,"checkBinding"],[166,22,110,22],[166,25,110,25,"thisBinding"],[166,36,110,36],[166,39,110,39],[166,43,110,36],[166,46,110,46],[166,51,110,51,"parentPath"],[166,61,110,46],[166,62,110,62,"scope"],[166,67,110,46],[166,68,110,68,"generateUidIdentifier"],[166,89,110,46],[166,90,110,90],[166,104,110,46],[166,105,110,4],[168,0,112,4],[168,10,112,8,"checkBinding"],[168,22,112,4],[168,24,112,22],[169,0,113,6],[169,13,113,11,"parentPath"],[169,23,113,6],[169,24,113,22,"scope"],[169,29,113,6],[169,30,113,28,"push"],[169,34,113,6],[169,35,113,33],[170,0,114,8,"id"],[170,10,114,8,"id"],[170,12,114,10],[170,14,114,12,"checkBinding"],[170,26,113,33],[171,0,115,8,"init"],[171,10,115,8,"init"],[171,14,115,12],[171,16,115,14,"t"],[171,17,115,15],[171,18,115,16,"objectExpression"],[171,34,115,14],[171,35,115,33],[171,37,115,14],[172,0,113,33],[172,9,113,6],[173,0,117,5],[175,0,119,4],[175,11,119,9,"get"],[175,14,119,4],[175,15,119,13],[175,21,119,4],[175,23,119,21,"unshiftContainer"],[175,39,119,4],[175,40,119,38],[175,46,119,4],[175,48,119,46,"t"],[175,49,119,47],[175,50,119,48,"expressionStatement"],[175,69,119,46],[175,70,119,68,"t"],[175,71,119,69],[175,72,119,70,"callExpression"],[175,86,119,68],[175,87,119,85],[175,92,119,90,"hub"],[175,95,119,85],[175,96,119,94,"addHelper"],[175,105,119,85],[175,106,119,104],[175,121,119,85],[175,122,119,68],[175,124,119,122],[175,125,119,123,"t"],[175,126,119,124],[175,127,119,125,"thisExpression"],[175,141,119,123],[175,143,119,122],[175,145,119,143,"checkBinding"],[175,157,119,155],[175,160,119,158,"t"],[175,161,119,159],[175,162,119,160,"identifier"],[175,172,119,158],[175,173,119,171,"checkBinding"],[175,185,119,183],[175,186,119,184,"name"],[175,190,119,158],[175,191,119,155],[175,194,119,192,"t"],[175,195,119,193],[175,196,119,194,"identifier"],[175,206,119,192],[175,207,119,205,"thisBinding"],[175,218,119,192],[175,219,119,122],[175,220,119,68],[175,221,119,46],[175,222,119,4],[176,0,120,4],[176,11,120,9,"replaceWith"],[176,22,120,4],[176,23,120,21,"t"],[176,24,120,22],[176,25,120,23,"callExpression"],[176,39,120,21],[176,40,120,38,"t"],[176,41,120,39],[176,42,120,40,"memberExpression"],[176,58,120,38],[176,59,120,57],[176,60,120,58],[176,63,120,61,"_helperFunctionName"],[176,82,120,80],[176,83,120,81,"default"],[176,90,120,57],[176,92,120,90],[176,96,120,57],[176,98,120,96],[176,102,120,57],[176,107,120,105],[176,112,120,110,"node"],[176,116,120,38],[176,118,120,116,"t"],[176,119,120,117],[176,120,120,118,"identifier"],[176,130,120,116],[176,131,120,129],[176,137,120,116],[176,138,120,38],[176,139,120,21],[176,141,120,139],[176,142,120,140,"checkBinding"],[176,154,120,152],[176,157,120,155,"t"],[176,158,120,156],[176,159,120,157,"identifier"],[176,169,120,155],[176,170,120,168,"checkBinding"],[176,182,120,180],[176,183,120,181,"name"],[176,187,120,155],[176,188,120,152],[176,191,120,189,"t"],[176,192,120,190],[176,193,120,191,"thisExpression"],[176,207,120,189],[176,209,120,139],[176,210,120,21],[176,211,120,4],[177,0,121,3],[178,0,122,1],[180,0,124,0],[180,11,124,9,"hoistFunctionEnvironment"],[180,35,124,0],[180,36,124,34,"fnPath"],[180,42,124,0],[180,44,124,90],[181,0,124,90],[181,8,124,42,"specCompliant"],[181,21,124,90],[181,92,124,58],[181,97,124,90],[182,0,124,90],[182,8,124,65,"allowInsertArrow"],[182,24,124,90],[182,95,124,84],[182,99,124,90],[183,0,125,2],[183,8,125,8,"thisEnvFn"],[183,17,125,17],[183,20,125,20,"fnPath"],[183,26,125,26],[183,27,125,27,"findParent"],[183,37,125,20],[183,38,125,38],[183,48,125,38,"p"],[183,49,125,39],[183,51,125,43],[184,0,126,4],[184,13,126,11,"p"],[184,14,126,12],[184,15,126,13,"isFunction"],[184,25,126,11],[184,31,126,29],[184,32,126,30,"p"],[184,33,126,31],[184,34,126,32,"isArrowFunctionExpression"],[184,59,126,30],[184,61,126,11],[184,65,126,63,"p"],[184,66,126,64],[184,67,126,65,"isProgram"],[184,76,126,63],[184,78,126,11],[184,82,126,80,"p"],[184,83,126,81],[184,84,126,82,"isClassProperty"],[184,99,126,80],[184,100,126,98],[185,0,127,6,"static"],[185,8,127,6,"static"],[185,14,127,12],[185,16,127,14],[186,0,126,98],[186,7,126,80],[186,8,126,4],[187,0,129,3],[187,5,125,20],[187,6,125,2],[188,0,130,2],[188,8,130,8,"inConstructor"],[188,21,130,21],[188,24,130,24,"thisEnvFn"],[188,33,130,33],[188,37,130,37,"thisEnvFn"],[188,46,130,46],[188,47,130,47,"node"],[188,51,130,37],[188,52,130,52,"kind"],[188,56,130,37],[188,61,130,61],[188,74,130,2],[190,0,132,2],[190,8,132,6,"thisEnvFn"],[190,17,132,15],[190,18,132,16,"isClassProperty"],[190,33,132,6],[190,35,132,2],[190,37,132,35],[191,0,133,4],[191,12,133,10,"fnPath"],[191,18,133,16],[191,19,133,17,"buildCodeFrameError"],[191,38,133,10],[191,39,133,37],[191,88,133,10],[191,89,133,4],[192,0,134,3],[194,0,124,90],[194,31,142,6,"getScopeInformation"],[194,50,142,25],[194,51,142,26,"fnPath"],[194,57,142,25],[194,58,124,90],[195,0,124,90],[195,8,137,4,"thisPaths"],[195,17,124,90],[195,41,137,4,"thisPaths"],[195,50,124,90],[196,0,124,90],[196,8,138,4,"argumentsPaths"],[196,22,124,90],[196,46,138,4,"argumentsPaths"],[196,60,124,90],[197,0,124,90],[197,8,139,4,"newTargetPaths"],[197,22,124,90],[197,46,139,4,"newTargetPaths"],[197,60,124,90],[198,0,124,90],[198,8,140,4,"superProps"],[198,18,124,90],[198,42,140,4,"superProps"],[198,52,124,90],[199,0,124,90],[199,8,141,4,"superCalls"],[199,18,124,90],[199,42,141,4,"superCalls"],[199,52,124,90],[201,0,144,2],[201,8,144,6,"inConstructor"],[201,21,144,19],[201,25,144,23,"superCalls"],[201,35,144,33],[201,36,144,34,"length"],[201,42,144,23],[201,45,144,43],[201,46,144,2],[201,48,144,46],[202,0,145,4],[202,10,145,8],[202,11,145,9,"allowInsertArrow"],[202,27,145,4],[202,29,145,27],[203,0,146,6],[203,14,146,12,"superCalls"],[203,24,146,22],[203,25,146,23],[203,26,146,22],[203,27,146,12],[203,28,146,26,"buildCodeFrameError"],[203,47,146,12],[203,48,146,46],[203,96,146,12],[203,97,146,6],[204,0,147,5],[206,0,149,4],[206,10,149,10,"allSuperCalls"],[206,23,149,23],[206,26,149,26],[206,28,149,4],[207,0,150,4,"thisEnvFn"],[207,6,150,4,"thisEnvFn"],[207,15,150,13],[207,16,150,14,"traverse"],[207,24,150,4],[207,25,150,23],[208,0,151,6,"Function"],[208,8,151,6,"Function"],[208,16,150,23],[208,36,151,15,"child"],[208,41,150,23],[208,43,151,22],[209,0,152,8],[209,14,152,12,"child"],[209,19,152,17],[209,20,152,18,"isArrowFunctionExpression"],[209,45,152,12],[209,47,152,8],[209,49,152,47],[210,0,153,8,"child"],[210,10,153,8,"child"],[210,15,153,13],[210,16,153,14,"skip"],[210,20,153,8],[211,0,154,7],[211,9,150,23],[212,0,156,6,"ClassProperty"],[212,8,156,6,"ClassProperty"],[212,21,150,23],[212,46,156,20,"child"],[212,51,150,23],[212,53,156,27],[213,0,157,8,"child"],[213,10,157,8,"child"],[213,15,157,13],[213,16,157,14,"skip"],[213,20,157,8],[214,0,158,7],[214,9,150,23],[215,0,160,6,"CallExpression"],[215,8,160,6,"CallExpression"],[215,22,150,23],[215,48,160,21,"child"],[215,53,150,23],[215,55,160,28],[216,0,161,8],[216,14,161,12],[216,15,161,13,"child"],[216,20,161,18],[216,21,161,19,"get"],[216,24,161,13],[216,25,161,23],[216,33,161,13],[216,35,161,33,"isSuper"],[216,42,161,13],[216,44,161,8],[216,46,161,44],[217,0,162,8,"allSuperCalls"],[217,10,162,8,"allSuperCalls"],[217,23,162,21],[217,24,162,22,"push"],[217,28,162,8],[217,29,162,27,"child"],[217,34,162,8],[218,0,163,7],[219,0,150,23],[219,7,150,4],[220,0,166,4],[220,10,166,10,"superBinding"],[220,22,166,22],[220,25,166,25,"getSuperBinding"],[220,40,166,40],[220,41,166,41,"thisEnvFn"],[220,50,166,40],[220,51,166,4],[221,0,167,4,"allSuperCalls"],[221,6,167,4,"allSuperCalls"],[221,19,167,17],[221,20,167,18,"forEach"],[221,27,167,4],[221,28,167,26],[221,38,167,26,"superCall"],[221,47,167,35],[221,49,167,39],[222,0,168,6],[222,12,168,12,"callee"],[222,18,168,18],[222,21,168,21,"t"],[222,22,168,22],[222,23,168,23,"identifier"],[222,33,168,21],[222,34,168,34,"superBinding"],[222,46,168,21],[222,47,168,6],[223,0,169,6,"callee"],[223,8,169,6,"callee"],[223,14,169,12],[223,15,169,13,"loc"],[223,18,169,6],[223,21,169,19,"superCall"],[223,30,169,28],[223,31,169,29,"node"],[223,35,169,19],[223,36,169,34,"callee"],[223,42,169,19],[223,43,169,41,"loc"],[223,46,169,6],[224,0,170,6,"superCall"],[224,8,170,6,"superCall"],[224,17,170,15],[224,18,170,16,"get"],[224,21,170,6],[224,22,170,20],[224,30,170,6],[224,32,170,30,"replaceWith"],[224,43,170,6],[224,44,170,42,"callee"],[224,50,170,6],[225,0,171,5],[225,7,167,4],[226,0,172,3],[228,0,174,2],[228,8,174,6,"argumentsPaths"],[228,22,174,20],[228,23,174,21,"length"],[228,29,174,6],[228,32,174,30],[228,33,174,2],[228,35,174,33],[229,0,175,4],[229,10,175,10,"argumentsBinding"],[229,26,175,26],[229,29,175,29,"getBinding"],[229,39,175,39],[229,40,175,40,"thisEnvFn"],[229,49,175,39],[229,51,175,51],[229,62,175,39],[229,64,175,64],[230,0,175,64],[230,15,175,70,"t"],[230,16,175,71],[230,17,175,72,"identifier"],[230,27,175,70],[230,28,175,83],[230,39,175,70],[230,40,175,64],[231,0,175,64],[231,7,175,39],[231,8,175,4],[232,0,176,4,"argumentsPaths"],[232,6,176,4,"argumentsPaths"],[232,20,176,18],[232,21,176,19,"forEach"],[232,28,176,4],[232,29,176,27],[232,39,176,27,"argumentsChild"],[232,53,176,41],[232,55,176,45],[233,0,177,6],[233,12,177,12,"argsRef"],[233,19,177,19],[233,22,177,22,"t"],[233,23,177,23],[233,24,177,24,"identifier"],[233,34,177,22],[233,35,177,35,"argumentsBinding"],[233,51,177,22],[233,52,177,6],[234,0,178,6,"argsRef"],[234,8,178,6,"argsRef"],[234,15,178,13],[234,16,178,14,"loc"],[234,19,178,6],[234,22,178,20,"argumentsChild"],[234,36,178,34],[234,37,178,35,"node"],[234,41,178,20],[234,42,178,40,"loc"],[234,45,178,6],[235,0,179,6,"argumentsChild"],[235,8,179,6,"argumentsChild"],[235,22,179,20],[235,23,179,21,"replaceWith"],[235,34,179,6],[235,35,179,33,"argsRef"],[235,42,179,6],[236,0,180,5],[236,7,176,4],[237,0,181,3],[239,0,183,2],[239,8,183,6,"newTargetPaths"],[239,22,183,20],[239,23,183,21,"length"],[239,29,183,6],[239,32,183,30],[239,33,183,2],[239,35,183,33],[240,0,184,4],[240,10,184,10,"newTargetBinding"],[240,26,184,26],[240,29,184,29,"getBinding"],[240,39,184,39],[240,40,184,40,"thisEnvFn"],[240,49,184,39],[240,51,184,51],[240,62,184,39],[240,64,184,64],[241,0,184,64],[241,15,184,70,"t"],[241,16,184,71],[241,17,184,72,"metaProperty"],[241,29,184,70],[241,30,184,85,"t"],[241,31,184,86],[241,32,184,87,"identifier"],[241,42,184,85],[241,43,184,98],[241,48,184,85],[241,49,184,70],[241,51,184,106,"t"],[241,52,184,107],[241,53,184,108,"identifier"],[241,63,184,106],[241,64,184,119],[241,72,184,106],[241,73,184,70],[241,74,184,64],[242,0,184,64],[242,7,184,39],[242,8,184,4],[243,0,185,4,"newTargetPaths"],[243,6,185,4,"newTargetPaths"],[243,20,185,18],[243,21,185,19,"forEach"],[243,28,185,4],[243,29,185,27],[243,39,185,27,"targetChild"],[243,50,185,38],[243,52,185,42],[244,0,186,6],[244,12,186,12,"targetRef"],[244,21,186,21],[244,24,186,24,"t"],[244,25,186,25],[244,26,186,26,"identifier"],[244,36,186,24],[244,37,186,37,"newTargetBinding"],[244,53,186,24],[244,54,186,6],[245,0,187,6,"targetRef"],[245,8,187,6,"targetRef"],[245,17,187,15],[245,18,187,16,"loc"],[245,21,187,6],[245,24,187,22,"targetChild"],[245,35,187,33],[245,36,187,34,"node"],[245,40,187,22],[245,41,187,39,"loc"],[245,44,187,6],[246,0,188,6,"targetChild"],[246,8,188,6,"targetChild"],[246,19,188,17],[246,20,188,18,"replaceWith"],[246,31,188,6],[246,32,188,30,"targetRef"],[246,41,188,6],[247,0,189,5],[247,7,185,4],[248,0,190,3],[250,0,192,2],[250,8,192,6,"superProps"],[250,18,192,16],[250,19,192,17,"length"],[250,25,192,6],[250,28,192,26],[250,29,192,2],[250,31,192,29],[251,0,193,4],[251,10,193,8],[251,11,193,9,"allowInsertArrow"],[251,27,193,4],[251,29,193,27],[252,0,194,6],[252,14,194,12,"superProps"],[252,24,194,22],[252,25,194,23],[252,26,194,22],[252,27,194,12],[252,28,194,26,"buildCodeFrameError"],[252,47,194,12],[252,48,194,46],[252,90,194,12],[252,91,194,6],[253,0,195,5],[255,0,197,4],[255,10,197,10,"flatSuperProps"],[255,24,197,24],[255,27,197,27,"superProps"],[255,37,197,37],[255,38,197,38,"reduce"],[255,44,197,27],[255,45,197,45],[255,55,197,46,"acc"],[255,58,197,45],[255,60,197,51,"superProp"],[255,69,197,45],[256,0,197,45],[256,15,197,65,"acc"],[256,18,197,68],[256,19,197,69,"concat"],[256,25,197,65],[256,26,197,76,"standardizeSuperProperty"],[256,50,197,100],[256,51,197,101,"superProp"],[256,60,197,100],[256,61,197,65],[256,62,197,45],[257,0,197,45],[257,7,197,27],[257,9,197,114],[257,11,197,27],[257,12,197,4],[258,0,198,4,"flatSuperProps"],[258,6,198,4,"flatSuperProps"],[258,20,198,18],[258,21,198,19,"forEach"],[258,28,198,4],[258,29,198,27],[258,39,198,27,"superProp"],[258,48,198,36],[258,50,198,40],[259,0,199,6],[259,12,199,12,"key"],[259,15,199,15],[259,18,199,18,"superProp"],[259,27,199,27],[259,28,199,28,"node"],[259,32,199,18],[259,33,199,33,"computed"],[259,41,199,18],[259,44,199,44],[259,46,199,18],[259,49,199,49,"superProp"],[259,58,199,58],[259,59,199,59,"get"],[259,62,199,49],[259,63,199,63],[259,73,199,49],[259,75,199,75,"node"],[259,79,199,49],[259,80,199,80,"name"],[259,84,199,6],[260,0,200,6],[260,12,200,12,"isAssignment"],[260,24,200,24],[260,27,200,27,"superProp"],[260,36,200,36],[260,37,200,37,"parentPath"],[260,47,200,27],[260,48,200,48,"isAssignmentExpression"],[260,70,200,27],[260,71,200,71],[261,0,201,8,"left"],[261,10,201,8,"left"],[261,14,201,12],[261,16,201,14,"superProp"],[261,25,201,23],[261,26,201,24,"node"],[262,0,200,71],[262,9,200,27],[262,10,200,6],[263,0,203,6],[263,12,203,12,"isCall"],[263,18,203,18],[263,21,203,21,"superProp"],[263,30,203,30],[263,31,203,31,"parentPath"],[263,41,203,21],[263,42,203,42,"isCallExpression"],[263,58,203,21],[263,59,203,59],[264,0,204,8,"callee"],[264,10,204,8,"callee"],[264,16,204,14],[264,18,204,16,"superProp"],[264,27,204,25],[264,28,204,26,"node"],[265,0,203,59],[265,9,203,21],[265,10,203,6],[266,0,206,6],[266,12,206,12,"superBinding"],[266,24,206,24],[266,27,206,27,"getSuperPropBinding"],[266,46,206,46],[266,47,206,47,"thisEnvFn"],[266,56,206,46],[266,58,206,58,"isAssignment"],[266,70,206,46],[266,72,206,72,"key"],[266,75,206,46],[266,76,206,6],[267,0,207,6],[267,12,207,12,"args"],[267,16,207,16],[267,19,207,19],[267,21,207,6],[269,0,209,6],[269,12,209,10,"superProp"],[269,21,209,19],[269,22,209,20,"node"],[269,26,209,10],[269,27,209,25,"computed"],[269,35,209,6],[269,37,209,35],[270,0,210,8,"args"],[270,10,210,8,"args"],[270,14,210,12],[270,15,210,13,"push"],[270,19,210,8],[270,20,210,18,"superProp"],[270,29,210,27],[270,30,210,28,"get"],[270,33,210,18],[270,34,210,32],[270,44,210,18],[270,46,210,44,"node"],[270,50,210,8],[271,0,211,7],[273,0,213,6],[273,12,213,10,"isAssignment"],[273,24,213,6],[273,26,213,24],[274,0,214,8],[274,14,214,14,"value"],[274,19,214,19],[274,22,214,22,"superProp"],[274,31,214,31],[274,32,214,32,"parentPath"],[274,42,214,22],[274,43,214,43,"node"],[274,47,214,22],[274,48,214,48,"right"],[274,53,214,8],[275,0,215,8,"args"],[275,10,215,8,"args"],[275,14,215,12],[275,15,215,13,"push"],[275,19,215,8],[275,20,215,18,"value"],[275,25,215,8],[276,0,216,7],[278,0,218,6],[278,12,218,12,"call"],[278,16,218,16],[278,19,218,19,"t"],[278,20,218,20],[278,21,218,21,"callExpression"],[278,35,218,19],[278,36,218,36,"t"],[278,37,218,37],[278,38,218,38,"identifier"],[278,48,218,36],[278,49,218,49,"superBinding"],[278,61,218,36],[278,62,218,19],[278,64,218,64,"args"],[278,68,218,19],[278,69,218,6],[280,0,220,6],[280,12,220,10,"isCall"],[280,18,220,6],[280,20,220,18],[281,0,221,8,"superProp"],[281,10,221,8,"superProp"],[281,19,221,17],[281,20,221,18,"parentPath"],[281,30,221,8],[281,31,221,29,"unshiftContainer"],[281,47,221,8],[281,48,221,46],[281,59,221,8],[281,61,221,59,"t"],[281,62,221,60],[281,63,221,61,"thisExpression"],[281,77,221,59],[281,79,221,8],[282,0,222,8,"superProp"],[282,10,222,8,"superProp"],[282,19,222,17],[282,20,222,18,"replaceWith"],[282,31,222,8],[282,32,222,30,"t"],[282,33,222,31],[282,34,222,32,"memberExpression"],[282,50,222,30],[282,51,222,49,"call"],[282,55,222,30],[282,57,222,55,"t"],[282,58,222,56],[282,59,222,57,"identifier"],[282,69,222,55],[282,70,222,68],[282,76,222,55],[282,77,222,30],[282,78,222,8],[283,0,223,8,"thisPaths"],[283,10,223,8,"thisPaths"],[283,19,223,17],[283,20,223,18,"push"],[283,24,223,8],[283,25,223,23,"superProp"],[283,34,223,32],[283,35,223,33,"parentPath"],[283,45,223,23],[283,46,223,44,"get"],[283,49,223,23],[283,50,223,48],[283,63,223,23],[283,64,223,8],[284,0,224,7],[284,9,220,6],[284,15,224,13],[284,19,224,17,"isAssignment"],[284,31,224,13],[284,33,224,31],[285,0,225,8,"superProp"],[285,10,225,8,"superProp"],[285,19,225,17],[285,20,225,18,"parentPath"],[285,30,225,8],[285,31,225,29,"replaceWith"],[285,42,225,8],[285,43,225,41,"call"],[285,47,225,8],[286,0,226,7],[286,9,224,13],[286,15,226,13],[287,0,227,8,"superProp"],[287,10,227,8,"superProp"],[287,19,227,17],[287,20,227,18,"replaceWith"],[287,31,227,8],[287,32,227,30,"call"],[287,36,227,8],[288,0,228,7],[289,0,229,5],[289,7,198,4],[290,0,230,3],[292,0,232,2],[292,8,232,6,"thisBinding"],[292,19,232,2],[294,0,234,2],[294,8,234,6,"thisPaths"],[294,17,234,15],[294,18,234,16,"length"],[294,24,234,6],[294,27,234,25],[294,28,234,6],[294,32,234,30,"specCompliant"],[294,45,234,2],[294,47,234,45],[295,0,235,4,"thisBinding"],[295,6,235,4,"thisBinding"],[295,17,235,15],[295,20,235,18,"getThisBinding"],[295,34,235,32],[295,35,235,33,"thisEnvFn"],[295,44,235,32],[295,46,235,44,"inConstructor"],[295,59,235,32],[295,60,235,4],[297,0,237,4],[297,10,237,8],[297,11,237,9,"specCompliant"],[297,24,237,8],[297,28,237,26,"inConstructor"],[297,41,237,39],[297,45,237,43,"hasSuperClass"],[297,58,237,56],[297,59,237,57,"thisEnvFn"],[297,68,237,56],[297,69,237,4],[297,71,237,69],[298,0,238,6,"thisPaths"],[298,8,238,6,"thisPaths"],[298,17,238,15],[298,18,238,16,"forEach"],[298,25,238,6],[298,26,238,24],[298,36,238,24,"thisChild"],[298,45,238,33],[298,47,238,37],[299,0,239,8],[299,14,239,14,"thisRef"],[299,21,239,21],[299,24,239,24,"thisChild"],[299,33,239,33],[299,34,239,34,"isJSX"],[299,39,239,24],[299,44,239,44,"t"],[299,45,239,45],[299,46,239,46,"jsxIdentifier"],[299,59,239,44],[299,60,239,60,"thisBinding"],[299,71,239,44],[299,72,239,24],[299,75,239,75,"t"],[299,76,239,76],[299,77,239,77,"identifier"],[299,87,239,75],[299,88,239,88,"thisBinding"],[299,99,239,75],[299,100,239,8],[300,0,240,8,"thisRef"],[300,10,240,8,"thisRef"],[300,17,240,15],[300,18,240,16,"loc"],[300,21,240,8],[300,24,240,22,"thisChild"],[300,33,240,31],[300,34,240,32,"node"],[300,38,240,22],[300,39,240,37,"loc"],[300,42,240,8],[301,0,241,8,"thisChild"],[301,10,241,8,"thisChild"],[301,19,241,17],[301,20,241,18,"replaceWith"],[301,31,241,8],[301,32,241,30,"thisRef"],[301,39,241,8],[302,0,242,7],[302,9,238,6],[303,0,243,6],[303,12,243,10,"specCompliant"],[303,25,243,6],[303,27,243,25,"thisBinding"],[303,38,243,36],[303,41,243,39],[303,45,243,25],[304,0,244,5],[305,0,245,3],[307,0,247,2],[307,11,247,9,"thisBinding"],[307,22,247,2],[308,0,248,1],[310,0,250,0],[310,11,250,9,"standardizeSuperProperty"],[310,35,250,0],[310,36,250,34,"superProp"],[310,45,250,0],[310,47,250,45],[311,0,251,2],[311,8,251,6,"superProp"],[311,17,251,15],[311,18,251,16,"parentPath"],[311,28,251,6],[311,29,251,27,"isAssignmentExpression"],[311,51,251,6],[311,57,251,55,"superProp"],[311,66,251,64],[311,67,251,65,"parentPath"],[311,77,251,55],[311,78,251,76,"node"],[311,82,251,55],[311,83,251,81,"operator"],[311,91,251,55],[311,96,251,94],[311,99,251,2],[311,101,251,99],[312,0,252,4],[312,10,252,10,"assignmentPath"],[312,24,252,24],[312,27,252,27,"superProp"],[312,36,252,36],[312,37,252,37,"parentPath"],[312,47,252,4],[313,0,253,4],[313,10,253,10,"op"],[313,12,253,12],[313,15,253,15,"assignmentPath"],[313,29,253,29],[313,30,253,30,"node"],[313,34,253,15],[313,35,253,35,"operator"],[313,43,253,15],[313,44,253,44,"slice"],[313,49,253,15],[313,50,253,50],[313,51,253,15],[313,53,253,53],[313,54,253,54],[313,55,253,15],[313,56,253,4],[314,0,254,4],[314,10,254,10,"value"],[314,15,254,15],[314,18,254,18,"assignmentPath"],[314,32,254,32],[314,33,254,33,"node"],[314,37,254,18],[314,38,254,38,"right"],[314,43,254,4],[315,0,255,4,"assignmentPath"],[315,6,255,4,"assignmentPath"],[315,20,255,18],[315,21,255,19,"node"],[315,25,255,4],[315,26,255,24,"operator"],[315,34,255,4],[315,37,255,35],[315,40,255,4],[317,0,257,4],[317,10,257,8,"superProp"],[317,19,257,17],[317,20,257,18,"node"],[317,24,257,8],[317,25,257,23,"computed"],[317,33,257,4],[317,35,257,33],[318,0,258,6],[318,12,258,12,"tmp"],[318,15,258,15],[318,18,258,18,"superProp"],[318,27,258,27],[318,28,258,28,"scope"],[318,33,258,18],[318,34,258,34,"generateDeclaredUidIdentifier"],[318,63,258,18],[318,64,258,64],[318,69,258,18],[318,70,258,6],[319,0,259,6,"assignmentPath"],[319,8,259,6,"assignmentPath"],[319,22,259,20],[319,23,259,21,"get"],[319,26,259,6],[319,27,259,25],[319,33,259,6],[319,35,259,33,"replaceWith"],[319,46,259,6],[319,47,259,45,"t"],[319,48,259,46],[319,49,259,47,"memberExpression"],[319,65,259,45],[319,66,259,64,"superProp"],[319,75,259,73],[319,76,259,74,"node"],[319,80,259,64],[319,81,259,79,"object"],[319,87,259,45],[319,89,259,87,"t"],[319,90,259,88],[319,91,259,89,"assignmentExpression"],[319,111,259,87],[319,112,259,110],[319,115,259,87],[319,117,259,115,"tmp"],[319,120,259,87],[319,122,259,120,"superProp"],[319,131,259,129],[319,132,259,130,"node"],[319,136,259,120],[319,137,259,135,"property"],[319,145,259,87],[319,146,259,45],[319,148,259,146],[319,152,259,45],[319,153,259,6],[320,0,260,6,"assignmentPath"],[320,8,260,6,"assignmentPath"],[320,22,260,20],[320,23,260,21,"get"],[320,26,260,6],[320,27,260,25],[320,34,260,6],[320,36,260,34,"replaceWith"],[320,47,260,6],[320,48,260,46,"t"],[320,49,260,47],[320,50,260,48,"binaryExpression"],[320,66,260,46],[320,67,260,65,"op"],[320,69,260,46],[320,71,260,69,"t"],[320,72,260,70],[320,73,260,71,"memberExpression"],[320,89,260,69],[320,90,260,88,"superProp"],[320,99,260,97],[320,100,260,98,"node"],[320,104,260,88],[320,105,260,103,"object"],[320,111,260,69],[320,113,260,111,"t"],[320,114,260,112],[320,115,260,113,"identifier"],[320,125,260,111],[320,126,260,124,"tmp"],[320,129,260,127],[320,130,260,128,"name"],[320,134,260,111],[320,135,260,69],[320,137,260,135],[320,141,260,69],[320,142,260,46],[320,144,260,142,"value"],[320,149,260,46],[320,150,260,6],[321,0,261,5],[321,7,257,4],[321,13,261,11],[322,0,262,6,"assignmentPath"],[322,8,262,6,"assignmentPath"],[322,22,262,20],[322,23,262,21,"get"],[322,26,262,6],[322,27,262,25],[322,33,262,6],[322,35,262,33,"replaceWith"],[322,46,262,6],[322,47,262,45,"t"],[322,48,262,46],[322,49,262,47,"memberExpression"],[322,65,262,45],[322,66,262,64,"superProp"],[322,75,262,73],[322,76,262,74,"node"],[322,80,262,64],[322,81,262,79,"object"],[322,87,262,45],[322,89,262,87,"superProp"],[322,98,262,96],[322,99,262,97,"node"],[322,103,262,87],[322,104,262,102,"property"],[322,112,262,45],[322,113,262,6],[323,0,263,6,"assignmentPath"],[323,8,263,6,"assignmentPath"],[323,22,263,20],[323,23,263,21,"get"],[323,26,263,6],[323,27,263,25],[323,34,263,6],[323,36,263,34,"replaceWith"],[323,47,263,6],[323,48,263,46,"t"],[323,49,263,47],[323,50,263,48,"binaryExpression"],[323,66,263,46],[323,67,263,65,"op"],[323,69,263,46],[323,71,263,69,"t"],[323,72,263,70],[323,73,263,71,"memberExpression"],[323,89,263,69],[323,90,263,88,"superProp"],[323,99,263,97],[323,100,263,98,"node"],[323,104,263,88],[323,105,263,103,"object"],[323,111,263,69],[323,113,263,111,"t"],[323,114,263,112],[323,115,263,113,"identifier"],[323,125,263,111],[323,126,263,124,"superProp"],[323,135,263,133],[323,136,263,134,"node"],[323,140,263,124],[323,141,263,139,"property"],[323,149,263,124],[323,150,263,148,"name"],[323,154,263,111],[323,155,263,69],[323,156,263,46],[323,158,263,156,"value"],[323,163,263,46],[323,164,263,6],[324,0,264,5],[326,0,266,4],[326,13,266,11],[326,14,266,12,"assignmentPath"],[326,28,266,26],[326,29,266,27,"get"],[326,32,266,12],[326,33,266,31],[326,39,266,12],[326,40,266,11],[326,42,266,40,"assignmentPath"],[326,56,266,54],[326,57,266,55,"get"],[326,60,266,40],[326,61,266,59],[326,68,266,40],[326,70,266,68,"get"],[326,73,266,40],[326,74,266,72],[326,80,266,40],[326,81,266,11],[326,82,266,4],[327,0,267,3],[327,5,251,2],[327,11,267,9],[327,15,267,13,"superProp"],[327,24,267,22],[327,25,267,23,"parentPath"],[327,35,267,13],[327,36,267,34,"isUpdateExpression"],[327,54,267,13],[327,56,267,9],[327,58,267,56],[328,0,268,4],[328,10,268,10,"updateExpr"],[328,20,268,20],[328,23,268,23,"superProp"],[328,32,268,32],[328,33,268,33,"parentPath"],[328,43,268,4],[330,0,269,4],[330,10,269,10,"tmp"],[330,14,269,13],[330,17,269,16,"superProp"],[330,26,269,25],[330,27,269,26,"scope"],[330,32,269,16],[330,33,269,32,"generateDeclaredUidIdentifier"],[330,62,269,16],[330,63,269,62],[330,68,269,16],[330,69,269,4],[332,0,270,4],[332,10,270,10,"computedKey"],[332,21,270,21],[332,24,270,24,"superProp"],[332,33,270,33],[332,34,270,34,"node"],[332,38,270,24],[332,39,270,39,"computed"],[332,47,270,24],[332,50,270,50,"superProp"],[332,59,270,59],[332,60,270,60,"scope"],[332,65,270,50],[332,66,270,66,"generateDeclaredUidIdentifier"],[332,95,270,50],[332,96,270,96],[332,102,270,50],[332,103,270,24],[332,106,270,106],[332,110,270,4],[333,0,271,4],[333,10,271,10,"parts"],[333,15,271,15],[333,18,271,18],[333,19,271,19,"t"],[333,20,271,20],[333,21,271,21,"assignmentExpression"],[333,41,271,19],[333,42,271,42],[333,45,271,19],[333,47,271,47,"tmp"],[333,51,271,19],[333,53,271,52,"t"],[333,54,271,53],[333,55,271,54,"memberExpression"],[333,71,271,52],[333,72,271,71,"superProp"],[333,81,271,80],[333,82,271,81,"node"],[333,86,271,71],[333,87,271,86,"object"],[333,93,271,52],[333,95,271,94,"computedKey"],[333,106,271,105],[333,109,271,108,"t"],[333,110,271,109],[333,111,271,110,"assignmentExpression"],[333,131,271,108],[333,132,271,131],[333,135,271,108],[333,137,271,136,"computedKey"],[333,148,271,108],[333,150,271,149,"superProp"],[333,159,271,158],[333,160,271,159,"node"],[333,164,271,149],[333,165,271,164,"property"],[333,173,271,108],[333,174,271,105],[333,177,271,176,"superProp"],[333,186,271,185],[333,187,271,186,"node"],[333,191,271,176],[333,192,271,191,"property"],[333,200,271,52],[333,202,271,201,"superProp"],[333,211,271,210],[333,212,271,211,"node"],[333,216,271,201],[333,217,271,216,"computed"],[333,225,271,52],[333,226,271,19],[333,227,271,18],[333,229,271,228,"t"],[333,230,271,229],[333,231,271,230,"assignmentExpression"],[333,251,271,228],[333,252,271,251],[333,255,271,228],[333,257,271,256,"t"],[333,258,271,257],[333,259,271,258,"memberExpression"],[333,275,271,256],[333,276,271,275,"superProp"],[333,285,271,284],[333,286,271,285,"node"],[333,290,271,275],[333,291,271,290,"object"],[333,297,271,256],[333,299,271,298,"computedKey"],[333,310,271,309],[333,313,271,312,"t"],[333,314,271,313],[333,315,271,314,"identifier"],[333,325,271,312],[333,326,271,325,"computedKey"],[333,337,271,336],[333,338,271,337,"name"],[333,342,271,312],[333,343,271,309],[333,346,271,345,"superProp"],[333,355,271,354],[333,356,271,355,"node"],[333,360,271,345],[333,361,271,360,"property"],[333,369,271,256],[333,371,271,370,"superProp"],[333,380,271,379],[333,381,271,380,"node"],[333,385,271,370],[333,386,271,385,"computed"],[333,394,271,256],[333,395,271,228],[333,397,271,396,"t"],[333,398,271,397],[333,399,271,398,"binaryExpression"],[333,415,271,396],[333,416,271,415],[333,419,271,396],[333,421,271,420,"t"],[333,422,271,421],[333,423,271,422,"identifier"],[333,433,271,420],[333,434,271,433,"tmp"],[333,438,271,436],[333,439,271,437,"name"],[333,443,271,420],[333,444,271,396],[333,446,271,444,"t"],[333,447,271,445],[333,448,271,446,"numericLiteral"],[333,462,271,444],[333,463,271,461],[333,464,271,444],[333,465,271,396],[333,466,271,228],[333,467,271,18],[333,468,271,4],[335,0,273,4],[335,10,273,8],[335,11,273,9,"superProp"],[335,20,273,18],[335,21,273,19,"parentPath"],[335,31,273,9],[335,32,273,30,"node"],[335,36,273,9],[335,37,273,35,"prefix"],[335,43,273,4],[335,45,273,43],[336,0,274,6,"parts"],[336,8,274,6,"parts"],[336,13,274,11],[336,14,274,12,"push"],[336,18,274,6],[336,19,274,17,"t"],[336,20,274,18],[336,21,274,19,"identifier"],[336,31,274,17],[336,32,274,30,"tmp"],[336,36,274,33],[336,37,274,34,"name"],[336,41,274,17],[336,42,274,6],[337,0,275,5],[339,0,277,4,"updateExpr"],[339,6,277,4,"updateExpr"],[339,16,277,14],[339,17,277,15,"replaceWith"],[339,28,277,4],[339,29,277,27,"t"],[339,30,277,28],[339,31,277,29,"sequenceExpression"],[339,49,277,27],[339,50,277,48,"parts"],[339,55,277,27],[339,56,277,4],[340,0,278,4],[340,10,278,10,"left"],[340,14,278,14],[340,17,278,17,"updateExpr"],[340,27,278,27],[340,28,278,28,"get"],[340,31,278,17],[340,32,278,32],[340,53,278,17],[340,54,278,4],[341,0,279,4],[341,10,279,10,"right"],[341,15,279,15],[341,18,279,18,"updateExpr"],[341,28,279,28],[341,29,279,29,"get"],[341,32,279,18],[341,33,279,33],[341,53,279,18],[341,54,279,4],[342,0,280,4],[342,13,280,11],[342,14,280,12,"left"],[342,18,280,11],[342,20,280,18,"right"],[342,25,280,11],[342,26,280,4],[343,0,281,3],[345,0,283,2],[345,11,283,9],[345,12,283,10,"superProp"],[345,21,283,9],[345,22,283,2],[346,0,284,1],[348,0,286,0],[348,11,286,9,"hasSuperClass"],[348,24,286,0],[348,25,286,23,"thisEnvFn"],[348,34,286,0],[348,36,286,34],[349,0,287,2],[349,11,287,9,"thisEnvFn"],[349,20,287,18],[349,21,287,19,"isClassMethod"],[349,34,287,9],[349,40,287,38],[349,41,287,39],[349,42,287,40,"thisEnvFn"],[349,51,287,49],[349,52,287,50,"parentPath"],[349,62,287,40],[349,63,287,61,"parentPath"],[349,73,287,40],[349,74,287,72,"node"],[349,78,287,40],[349,79,287,77,"superClass"],[349,89,287,2],[350,0,288,1],[352,0,290,0],[352,11,290,9,"getThisBinding"],[352,25,290,0],[352,26,290,24,"thisEnvFn"],[352,35,290,0],[352,37,290,35,"inConstructor"],[352,50,290,0],[352,52,290,50],[353,0,291,2],[353,11,291,9,"getBinding"],[353,21,291,19],[353,22,291,20,"thisEnvFn"],[353,31,291,19],[353,33,291,31],[353,39,291,19],[353,41,291,39],[353,51,291,39,"thisBinding"],[353,62,291,50],[353,64,291,54],[354,0,292,4],[354,10,292,8],[354,11,292,9,"inConstructor"],[354,24,292,8],[354,28,292,26],[354,29,292,27,"hasSuperClass"],[354,42,292,40],[354,43,292,41,"thisEnvFn"],[354,52,292,40],[354,53,292,4],[354,55,292,53],[354,62,292,60,"t"],[354,63,292,61],[354,64,292,62,"thisExpression"],[354,78,292,60],[354,80,292,53],[355,0,293,4],[355,10,293,10,"supers"],[355,16,293,16],[355,19,293,19],[355,23,293,23,"WeakSet"],[355,30,293,19],[355,32,293,4],[356,0,294,4,"thisEnvFn"],[356,6,294,4,"thisEnvFn"],[356,15,294,13],[356,16,294,14,"traverse"],[356,24,294,4],[356,25,294,23],[357,0,295,6,"Function"],[357,8,295,6,"Function"],[357,16,294,23],[357,36,295,15,"child"],[357,41,294,23],[357,43,295,22],[358,0,296,8],[358,14,296,12,"child"],[358,19,296,17],[358,20,296,18,"isArrowFunctionExpression"],[358,45,296,12],[358,47,296,8],[358,49,296,47],[359,0,297,8,"child"],[359,10,297,8,"child"],[359,15,297,13],[359,16,297,14,"skip"],[359,20,297,8],[360,0,298,7],[360,9,294,23],[361,0,300,6,"ClassProperty"],[361,8,300,6,"ClassProperty"],[361,21,294,23],[361,46,300,20,"child"],[361,51,294,23],[361,53,300,27],[362,0,301,8,"child"],[362,10,301,8,"child"],[362,15,301,13],[362,16,301,14,"skip"],[362,20,301,8],[363,0,302,7],[363,9,294,23],[364,0,304,6,"CallExpression"],[364,8,304,6,"CallExpression"],[364,22,294,23],[364,48,304,21,"child"],[364,53,294,23],[364,55,304,28],[365,0,305,8],[365,14,305,12],[365,15,305,13,"child"],[365,20,305,18],[365,21,305,19,"get"],[365,24,305,13],[365,25,305,23],[365,33,305,13],[365,35,305,33,"isSuper"],[365,42,305,13],[365,44,305,8],[365,46,305,44],[366,0,306,8],[366,14,306,12,"supers"],[366,20,306,18],[366,21,306,19,"has"],[366,24,306,12],[366,25,306,23,"child"],[366,30,306,28],[366,31,306,29,"node"],[366,35,306,12],[366,36,306,8],[366,38,306,36],[367,0,307,8,"supers"],[367,10,307,8,"supers"],[367,16,307,14],[367,17,307,15,"add"],[367,20,307,8],[367,21,307,19,"child"],[367,26,307,24],[367,27,307,25,"node"],[367,31,307,8],[368,0,308,8,"child"],[368,10,308,8,"child"],[368,15,308,13],[368,16,308,14,"replaceWithMultiple"],[368,35,308,8],[368,36,308,34],[368,37,308,35,"child"],[368,42,308,40],[368,43,308,41,"node"],[368,47,308,34],[368,49,308,47,"t"],[368,50,308,48],[368,51,308,49,"assignmentExpression"],[368,71,308,47],[368,72,308,70],[368,75,308,47],[368,77,308,75,"t"],[368,78,308,76],[368,79,308,77,"identifier"],[368,89,308,75],[368,90,308,88,"thisBinding"],[368,101,308,75],[368,102,308,47],[368,104,308,102,"t"],[368,105,308,103],[368,106,308,104,"identifier"],[368,116,308,102],[368,117,308,115],[368,123,308,102],[368,124,308,47],[368,125,308,34],[368,126,308,8],[369,0,309,7],[370,0,294,23],[370,7,294,4],[371,0,312,3],[371,5,291,19],[371,6,291,2],[372,0,313,1],[374,0,315,0],[374,11,315,9,"getSuperBinding"],[374,26,315,0],[374,27,315,25,"thisEnvFn"],[374,36,315,0],[374,38,315,36],[375,0,316,2],[375,11,316,9,"getBinding"],[375,21,316,19],[375,22,316,20,"thisEnvFn"],[375,31,316,19],[375,33,316,31],[375,44,316,19],[375,46,316,44],[375,58,316,50],[376,0,317,4],[376,10,317,10,"argsBinding"],[376,21,317,21],[376,24,317,24,"thisEnvFn"],[376,33,317,33],[376,34,317,34,"scope"],[376,39,317,24],[376,40,317,40,"generateUidIdentifier"],[376,61,317,24],[376,62,317,62],[376,68,317,24],[376,69,317,4],[377,0,318,4],[377,13,318,11,"t"],[377,14,318,12],[377,15,318,13,"arrowFunctionExpression"],[377,38,318,11],[377,39,318,37],[377,40,318,38,"t"],[377,41,318,39],[377,42,318,40,"restElement"],[377,53,318,38],[377,54,318,52,"argsBinding"],[377,65,318,38],[377,66,318,37],[377,67,318,11],[377,69,318,67,"t"],[377,70,318,68],[377,71,318,69,"callExpression"],[377,85,318,67],[377,86,318,84,"t"],[377,87,318,85],[377,88,318,86,"super"],[377,93,318,84],[377,95,318,67],[377,97,318,95],[377,98,318,96,"t"],[377,99,318,97],[377,100,318,98,"spreadElement"],[377,113,318,96],[377,114,318,112,"t"],[377,115,318,113],[377,116,318,114,"identifier"],[377,126,318,112],[377,127,318,125,"argsBinding"],[377,138,318,136],[377,139,318,137,"name"],[377,143,318,112],[377,144,318,96],[377,145,318,95],[377,146,318,67],[377,147,318,11],[377,148,318,4],[378,0,319,3],[378,5,316,19],[378,6,316,2],[379,0,320,1],[381,0,322,0],[381,11,322,9,"getSuperPropBinding"],[381,30,322,0],[381,31,322,29,"thisEnvFn"],[381,40,322,0],[381,42,322,40,"isAssignment"],[381,54,322,0],[381,56,322,54,"propName"],[381,64,322,0],[381,66,322,64],[382,0,323,2],[382,8,323,8,"op"],[382,10,323,10],[382,13,323,13,"isAssignment"],[382,25,323,25],[382,28,323,28],[382,33,323,25],[382,36,323,36],[382,41,323,2],[383,0,324,2],[383,11,324,9,"getBinding"],[383,21,324,19],[383,22,324,20,"thisEnvFn"],[383,31,324,19],[383,48,324,44,"op"],[383,50,324,19],[383,60,324,50,"propName"],[383,68,324,58],[383,72,324,62],[383,74,324,19],[383,77,324,68],[383,89,324,74],[384,0,325,4],[384,10,325,10,"argsList"],[384,18,325,18],[384,21,325,21],[384,23,325,4],[385,0,326,4],[385,10,326,8,"fnBody"],[385,16,326,4],[387,0,328,4],[387,10,328,8,"propName"],[387,18,328,4],[387,20,328,18],[388,0,329,6,"fnBody"],[388,8,329,6,"fnBody"],[388,14,329,12],[388,17,329,15,"t"],[388,18,329,16],[388,19,329,17,"memberExpression"],[388,35,329,15],[388,36,329,34,"t"],[388,37,329,35],[388,38,329,36,"super"],[388,43,329,34],[388,45,329,15],[388,47,329,45,"t"],[388,48,329,46],[388,49,329,47,"identifier"],[388,59,329,45],[388,60,329,58,"propName"],[388,68,329,45],[388,69,329,15],[388,70,329,6],[389,0,330,5],[389,7,328,4],[389,13,330,11],[390,0,331,6],[390,12,331,12,"method"],[390,18,331,18],[390,21,331,21,"thisEnvFn"],[390,30,331,30],[390,31,331,31,"scope"],[390,36,331,21],[390,37,331,37,"generateUidIdentifier"],[390,58,331,21],[390,59,331,59],[390,65,331,21],[390,66,331,6],[391,0,332,6,"argsList"],[391,8,332,6,"argsList"],[391,16,332,14],[391,17,332,15,"unshift"],[391,24,332,6],[391,25,332,23,"method"],[391,31,332,6],[392,0,333,6,"fnBody"],[392,8,333,6,"fnBody"],[392,14,333,12],[392,17,333,15,"t"],[392,18,333,16],[392,19,333,17,"memberExpression"],[392,35,333,15],[392,36,333,34,"t"],[392,37,333,35],[392,38,333,36,"super"],[392,43,333,34],[392,45,333,15],[392,47,333,45,"t"],[392,48,333,46],[392,49,333,47,"identifier"],[392,59,333,45],[392,60,333,58,"method"],[392,66,333,64],[392,67,333,65,"name"],[392,71,333,45],[392,72,333,15],[392,74,333,72],[392,78,333,15],[392,79,333,6],[393,0,334,5],[395,0,336,4],[395,10,336,8,"isAssignment"],[395,22,336,4],[395,24,336,22],[396,0,337,6],[396,12,337,12,"valueIdent"],[396,22,337,22],[396,25,337,25,"thisEnvFn"],[396,34,337,34],[396,35,337,35,"scope"],[396,40,337,25],[396,41,337,41,"generateUidIdentifier"],[396,62,337,25],[396,63,337,63],[396,70,337,25],[396,71,337,6],[397,0,338,6,"argsList"],[397,8,338,6,"argsList"],[397,16,338,14],[397,17,338,15,"push"],[397,21,338,6],[397,22,338,20,"valueIdent"],[397,32,338,6],[398,0,339,6,"fnBody"],[398,8,339,6,"fnBody"],[398,14,339,12],[398,17,339,15,"t"],[398,18,339,16],[398,19,339,17,"assignmentExpression"],[398,39,339,15],[398,40,339,38],[398,43,339,15],[398,45,339,43,"fnBody"],[398,51,339,15],[398,53,339,51,"t"],[398,54,339,52],[398,55,339,53,"identifier"],[398,65,339,51],[398,66,339,64,"valueIdent"],[398,76,339,74],[398,77,339,75,"name"],[398,81,339,51],[398,82,339,15],[398,83,339,6],[399,0,340,5],[401,0,342,4],[401,13,342,11,"t"],[401,14,342,12],[401,15,342,13,"arrowFunctionExpression"],[401,38,342,11],[401,39,342,37,"argsList"],[401,47,342,11],[401,49,342,47,"fnBody"],[401,55,342,11],[401,56,342,4],[402,0,343,3],[402,5,324,19],[402,6,324,2],[403,0,344,1],[405,0,346,0],[405,11,346,9,"getBinding"],[405,21,346,0],[405,22,346,20,"thisEnvFn"],[405,31,346,0],[405,33,346,31,"key"],[405,36,346,0],[405,38,346,36,"init"],[405,42,346,0],[405,44,346,42],[406,0,347,2],[406,8,347,8,"cacheKey"],[406,16,347,16],[406,19,347,19],[406,32,347,32,"key"],[406,35,347,2],[407,0,348,2],[407,8,348,6,"data"],[407,12,348,10],[407,15,348,13,"thisEnvFn"],[407,24,348,22],[407,25,348,23,"getData"],[407,32,348,13],[407,33,348,31,"cacheKey"],[407,41,348,13],[407,42,348,2],[409,0,350,2],[409,8,350,6],[409,9,350,7,"data"],[409,13,350,2],[409,15,350,13],[410,0,351,4],[410,10,351,10,"id"],[410,12,351,12],[410,15,351,15,"thisEnvFn"],[410,24,351,24],[410,25,351,25,"scope"],[410,30,351,15],[410,31,351,31,"generateUidIdentifier"],[410,52,351,15],[410,53,351,53,"key"],[410,56,351,15],[410,57,351,4],[411,0,352,4,"data"],[411,6,352,4,"data"],[411,10,352,8],[411,13,352,11,"id"],[411,15,352,13],[411,16,352,14,"name"],[411,20,352,4],[412,0,353,4,"thisEnvFn"],[412,6,353,4,"thisEnvFn"],[412,15,353,13],[412,16,353,14,"setData"],[412,23,353,4],[412,24,353,22,"cacheKey"],[412,32,353,4],[412,34,353,32,"data"],[412,38,353,4],[413,0,354,4,"thisEnvFn"],[413,6,354,4,"thisEnvFn"],[413,15,354,13],[413,16,354,14,"scope"],[413,21,354,4],[413,22,354,20,"push"],[413,26,354,4],[413,27,354,25],[414,0,355,6,"id"],[414,8,355,6,"id"],[414,10,355,8],[414,12,355,10,"id"],[414,14,354,25],[415,0,356,6,"init"],[415,8,356,6,"init"],[415,12,356,10],[415,14,356,12,"init"],[415,18,356,16],[415,19,356,17,"data"],[415,23,356,16],[416,0,354,25],[416,7,354,4],[417,0,358,3],[419,0,360,2],[419,11,360,9,"data"],[419,15,360,2],[420,0,361,1],[422,0,363,0],[422,11,363,9,"getScopeInformation"],[422,30,363,0],[422,31,363,29,"fnPath"],[422,37,363,0],[422,39,363,37],[423,0,364,2],[423,8,364,8,"thisPaths"],[423,17,364,17],[423,20,364,20],[423,22,364,2],[424,0,365,2],[424,8,365,8,"argumentsPaths"],[424,22,365,22],[424,25,365,25],[424,27,365,2],[425,0,366,2],[425,8,366,8,"newTargetPaths"],[425,22,366,22],[425,25,366,25],[425,27,366,2],[426,0,367,2],[426,8,367,8,"superProps"],[426,18,367,18],[426,21,367,21],[426,23,367,2],[427,0,368,2],[427,8,368,8,"superCalls"],[427,18,368,18],[427,21,368,21],[427,23,368,2],[428,0,369,2,"fnPath"],[428,4,369,2,"fnPath"],[428,10,369,8],[428,11,369,9,"traverse"],[428,19,369,2],[428,20,369,18],[429,0,370,4,"ClassProperty"],[429,6,370,4,"ClassProperty"],[429,19,369,18],[429,44,370,18,"child"],[429,49,369,18],[429,51,370,25],[430,0,371,6,"child"],[430,8,371,6,"child"],[430,13,371,11],[430,14,371,12,"skip"],[430,18,371,6],[431,0,372,5],[431,7,369,18],[432,0,374,4,"Function"],[432,6,374,4,"Function"],[432,14,369,18],[432,34,374,13,"child"],[432,39,369,18],[432,41,374,20],[433,0,375,6],[433,12,375,10,"child"],[433,17,375,15],[433,18,375,16,"isArrowFunctionExpression"],[433,43,375,10],[433,45,375,6],[433,47,375,45],[434,0,376,6,"child"],[434,8,376,6,"child"],[434,13,376,11],[434,14,376,12,"skip"],[434,18,376,6],[435,0,377,5],[435,7,369,18],[436,0,379,4,"ThisExpression"],[436,6,379,4,"ThisExpression"],[436,20,369,18],[436,46,379,19,"child"],[436,51,369,18],[436,53,379,26],[437,0,380,6,"thisPaths"],[437,8,380,6,"thisPaths"],[437,17,380,15],[437,18,380,16,"push"],[437,22,380,6],[437,23,380,21,"child"],[437,28,380,6],[438,0,381,5],[438,7,369,18],[439,0,383,4,"JSXIdentifier"],[439,6,383,4,"JSXIdentifier"],[439,19,369,18],[439,44,383,18,"child"],[439,49,369,18],[439,51,383,25],[440,0,384,6],[440,12,384,10,"child"],[440,17,384,15],[440,18,384,16,"node"],[440,22,384,10],[440,23,384,21,"name"],[440,27,384,10],[440,32,384,30],[440,38,384,6],[440,40,384,38],[442,0,386,6],[442,12,386,10],[442,13,386,11,"child"],[442,18,386,16],[442,19,386,17,"parentPath"],[442,29,386,11],[442,30,386,28,"isJSXMemberExpression"],[442,51,386,11],[442,52,386,50],[443,0,387,8,"object"],[443,10,387,8,"object"],[443,16,387,14],[443,18,387,16,"child"],[443,23,387,21],[443,24,387,22,"node"],[444,0,386,50],[444,9,386,11],[444,10,386,10],[444,14,388,12],[444,15,388,13,"child"],[444,20,388,18],[444,21,388,19,"parentPath"],[444,31,388,13],[444,32,388,30,"isJSXOpeningElement"],[444,51,388,13],[444,52,388,50],[445,0,389,8,"name"],[445,10,389,8,"name"],[445,14,389,12],[445,16,389,14,"child"],[445,21,389,19],[445,22,389,20,"node"],[446,0,388,50],[446,9,388,13],[446,10,386,6],[446,12,390,10],[447,0,391,8],[448,0,392,7],[450,0,394,6,"thisPaths"],[450,8,394,6,"thisPaths"],[450,17,394,15],[450,18,394,16,"push"],[450,22,394,6],[450,23,394,21,"child"],[450,28,394,6],[451,0,395,5],[451,7,369,18],[452,0,397,4,"CallExpression"],[452,6,397,4,"CallExpression"],[452,20,369,18],[452,46,397,19,"child"],[452,51,369,18],[452,53,397,26],[453,0,398,6],[453,12,398,10,"child"],[453,17,398,15],[453,18,398,16,"get"],[453,21,398,10],[453,22,398,20],[453,30,398,10],[453,32,398,30,"isSuper"],[453,39,398,10],[453,41,398,6],[453,43,398,41,"superCalls"],[453,53,398,51],[453,54,398,52,"push"],[453,58,398,41],[453,59,398,57,"child"],[453,64,398,41],[454,0,399,5],[454,7,369,18],[455,0,401,4,"MemberExpression"],[455,6,401,4,"MemberExpression"],[455,22,369,18],[455,50,401,21,"child"],[455,55,369,18],[455,57,401,28],[456,0,402,6],[456,12,402,10,"child"],[456,17,402,15],[456,18,402,16,"get"],[456,21,402,10],[456,22,402,20],[456,30,402,10],[456,32,402,30,"isSuper"],[456,39,402,10],[456,41,402,6],[456,43,402,41,"superProps"],[456,53,402,51],[456,54,402,52,"push"],[456,58,402,41],[456,59,402,57,"child"],[456,64,402,41],[457,0,403,5],[457,7,369,18],[458,0,405,4,"ReferencedIdentifier"],[458,6,405,4,"ReferencedIdentifier"],[458,26,369,18],[458,58,405,25,"child"],[458,63,369,18],[458,65,405,32],[459,0,406,6],[459,12,406,10,"child"],[459,17,406,15],[459,18,406,16,"node"],[459,22,406,10],[459,23,406,21,"name"],[459,27,406,10],[459,32,406,30],[459,43,406,6],[459,45,406,43],[460,0,407,6,"argumentsPaths"],[460,8,407,6,"argumentsPaths"],[460,22,407,20],[460,23,407,21,"push"],[460,27,407,6],[460,28,407,26,"child"],[460,33,407,6],[461,0,408,5],[461,7,369,18],[462,0,410,4,"MetaProperty"],[462,6,410,4,"MetaProperty"],[462,18,369,18],[462,42,410,17,"child"],[462,47,369,18],[462,49,410,24],[463,0,411,6],[463,12,411,10],[463,13,411,11,"child"],[463,18,411,16],[463,19,411,17,"get"],[463,22,411,11],[463,23,411,21],[463,29,411,11],[463,31,411,29,"isIdentifier"],[463,43,411,11],[463,44,411,42],[464,0,412,8,"name"],[464,10,412,8,"name"],[464,14,412,12],[464,16,412,14],[465,0,411,42],[465,9,411,11],[465,10,411,6],[465,12,413,10],[466,0,414,6],[466,12,414,10],[466,13,414,11,"child"],[466,18,414,16],[466,19,414,17,"get"],[466,22,414,11],[466,23,414,21],[466,33,414,11],[466,35,414,33,"isIdentifier"],[466,47,414,11],[466,48,414,46],[467,0,415,8,"name"],[467,10,415,8,"name"],[467,14,415,12],[467,16,415,14],[468,0,414,46],[468,9,414,11],[468,10,414,6],[468,12,416,10],[469,0,417,6,"newTargetPaths"],[469,8,417,6,"newTargetPaths"],[469,22,417,20],[469,23,417,21,"push"],[469,27,417,6],[469,28,417,26,"child"],[469,33,417,6],[470,0,418,5],[471,0,369,18],[471,5,369,2],[472,0,421,2],[472,11,421,9],[473,0,422,4,"thisPaths"],[473,6,422,4,"thisPaths"],[473,15,422,13],[473,17,422,4,"thisPaths"],[473,26,421,9],[474,0,423,4,"argumentsPaths"],[474,6,423,4,"argumentsPaths"],[474,20,423,18],[474,22,423,4,"argumentsPaths"],[474,36,421,9],[475,0,424,4,"newTargetPaths"],[475,6,424,4,"newTargetPaths"],[475,20,424,18],[475,22,424,4,"newTargetPaths"],[475,36,421,9],[476,0,425,4,"superProps"],[476,6,425,4,"superProps"],[476,16,425,14],[476,18,425,4,"superProps"],[476,28,421,9],[477,0,426,4,"superCalls"],[477,6,426,4,"superCalls"],[477,16,426,14],[477,18,426,4,"superCalls"],[478,0,421,9],[478,5,421,2],[479,0,428,1]]},"type":"js/module"}]}