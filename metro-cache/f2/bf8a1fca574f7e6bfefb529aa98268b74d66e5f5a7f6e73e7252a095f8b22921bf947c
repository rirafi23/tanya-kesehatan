{"dependencies":[{"name":"convert-source-map","data":{"isAsync":false}},{"name":"@babel/generator","data":{"isAsync":false}},{"name":"./merge-map","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = generateCode;\n\n  function _convertSourceMap() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"convert-source-map\"));\n\n    _convertSourceMap = function _convertSourceMap() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _generator() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/generator\"));\n\n    _generator = function _generator() {\n      return data;\n    };\n\n    return data;\n  }\n\n  var _mergeMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./merge-map\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function generateCode(pluginPasses, file) {\n    var opts = file.opts,\n        ast = file.ast,\n        code = file.code,\n        inputMap = file.inputMap;\n    var results = [];\n\n    for (var _iterator = pluginPasses, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _plugins = _ref;\n\n      for (var _iterator2 = _plugins, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var _plugin = _ref2;\n        var _generatorOverride = _plugin.generatorOverride;\n\n        if (_generatorOverride) {\n          var _result2 = _generatorOverride(ast, opts.generatorOpts, code, _generator().default);\n\n          if (_result2 !== undefined) results.push(_result2);\n        }\n      }\n    }\n\n    var result;\n\n    if (results.length === 0) {\n      result = (0, _generator().default)(ast, opts.generatorOpts, code);\n    } else if (results.length === 1) {\n      result = results[0];\n\n      if (typeof result.then === \"function\") {\n        throw new Error(\"You appear to be using an async codegen plugin, \" + \"which your current version of Babel does not support. \" + \"If you're using a published plugin, \" + \"you may need to upgrade your @babel/core version.\");\n      }\n    } else {\n      throw new Error(\"More than one plugin attempted to override codegen.\");\n    }\n\n    var _result = result,\n        outputCode = _result.code,\n        outputMap = _result.map;\n\n    if (outputMap && inputMap) {\n      outputMap = (0, _mergeMap.default)(inputMap.toObject(), outputMap);\n    }\n\n    if (opts.sourceMaps === \"inline\" || opts.sourceMaps === \"both\") {\n      outputCode += \"\\n\" + _convertSourceMap().default.fromObject(outputMap).toComment();\n    }\n\n    if (opts.sourceMaps === \"inline\") {\n      outputMap = null;\n    }\n\n    return {\n      outputCode: outputCode,\n      outputMap: outputMap\n    };\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"generateCode"],[7,32,6,0],[9,0,8,0],[9,11,8,9,"_convertSourceMap"],[9,28,8,0],[9,31,8,29],[10,0,9,2],[10,8,9,8,"data"],[10,12,9,12],[10,15,9,15,"_interopRequireDefault"],[10,37,9,37],[10,38,9,38,"require"],[10,49,9,45],[10,90,9,37],[10,91,9,2],[12,0,11,2,"_convertSourceMap"],[12,4,11,2,"_convertSourceMap"],[12,21,11,19],[12,24,11,22],[12,53,11,34],[13,0,12,4],[13,13,12,11,"data"],[13,17,12,4],[14,0,13,3],[14,5,11,2],[16,0,15,2],[16,11,15,9,"data"],[16,15,15,2],[17,0,16,1],[19,0,18,0],[19,11,18,9,"_generator"],[19,21,18,0],[19,24,18,22],[20,0,19,2],[20,8,19,8,"data"],[20,12,19,12],[20,15,19,15,"_interopRequireDefault"],[20,37,19,37],[20,38,19,38,"require"],[20,49,19,45],[20,88,19,37],[20,89,19,2],[22,0,21,2,"_generator"],[22,4,21,2,"_generator"],[22,14,21,12],[22,17,21,15],[22,39,21,27],[23,0,22,4],[23,13,22,11,"data"],[23,17,22,4],[24,0,23,3],[24,5,21,2],[26,0,25,2],[26,11,25,9,"data"],[26,15,25,2],[27,0,26,1],[29,0,28,0],[29,6,28,4,"_mergeMap"],[29,15,28,13],[29,18,28,16,"_interopRequireDefault"],[29,40,28,38],[29,41,28,39,"require"],[29,52,28,46],[29,86,28,38],[29,87,28,0],[31,0,30,0],[31,11,30,9,"_interopRequireDefault"],[31,33,30,0],[31,34,30,32,"obj"],[31,37,30,0],[31,39,30,37],[32,0,30,39],[32,11,30,46,"obj"],[32,14,30,49],[32,18,30,53,"obj"],[32,21,30,56],[32,22,30,57,"__esModule"],[32,32,30,46],[32,35,30,70,"obj"],[32,38,30,46],[32,41,30,76],[33,0,30,78,"default"],[33,6,30,78,"default"],[33,13,30,85],[33,15,30,87,"obj"],[34,0,30,76],[34,5,30,39],[35,0,30,95],[37,0,32,0],[37,11,32,9,"generateCode"],[37,23,32,0],[37,24,32,22,"pluginPasses"],[37,36,32,0],[37,38,32,36,"file"],[37,42,32,0],[37,44,32,42],[38,0,32,42],[38,8,34,4,"opts"],[38,12,32,42],[38,15,38,6,"file"],[38,19,32,42],[38,20,34,4,"opts"],[38,24,32,42],[39,0,32,42],[39,8,35,4,"ast"],[39,11,32,42],[39,14,38,6,"file"],[39,18,32,42],[39,19,35,4,"ast"],[39,22,32,42],[40,0,32,42],[40,8,36,4,"code"],[40,12,32,42],[40,15,38,6,"file"],[40,19,32,42],[40,20,36,4,"code"],[40,24,32,42],[41,0,32,42],[41,8,37,4,"inputMap"],[41,16,32,42],[41,19,38,6,"file"],[41,23,32,42],[41,24,37,4,"inputMap"],[41,32,32,42],[42,0,39,2],[42,8,39,8,"results"],[42,15,39,15],[42,18,39,18],[42,20,39,2],[44,0,41,2],[44,25,41,24,"pluginPasses"],[44,37,41,2],[44,197,41,38],[45,0,41,38],[47,0,41,38],[48,0,41,38],[49,0,41,38],[50,0,41,38],[51,0,41,38],[52,0,41,38],[53,0,41,38],[54,0,41,38],[56,0,41,38],[56,10,41,13,"plugins"],[56,18,41,38],[58,0,42,4],[58,28,42,25,"plugins"],[58,36,42,4],[58,203,42,34],[59,0,42,34],[61,0,42,34],[62,0,42,34],[63,0,42,34],[64,0,42,34],[65,0,42,34],[66,0,42,34],[67,0,42,34],[68,0,42,34],[70,0,42,34],[70,12,42,15,"plugin"],[70,19,42,34],[71,0,42,34],[71,12,44,8,"generatorOverride"],[71,30,42,34],[71,33,45,10,"plugin"],[71,40,42,34],[71,41,44,8,"generatorOverride"],[71,58,42,34],[73,0,47,6],[73,12,47,10,"generatorOverride"],[73,30,47,6],[73,32,47,29],[74,0,48,8],[74,14,48,14,"result"],[74,22,48,20],[74,25,48,23,"generatorOverride"],[74,43,48,40],[74,44,48,41,"ast"],[74,47,48,40],[74,49,48,46,"opts"],[74,53,48,50],[74,54,48,51,"generatorOpts"],[74,67,48,40],[74,69,48,66,"code"],[74,73,48,40],[74,75,48,72,"_generator"],[74,85,48,82],[74,88,48,85,"default"],[74,95,48,40],[74,96,48,8],[76,0,49,8],[76,14,49,12,"result"],[76,22,49,18],[76,27,49,23,"undefined"],[76,36,49,8],[76,38,49,34,"results"],[76,45,49,41],[76,46,49,42,"push"],[76,50,49,34],[76,51,49,47,"result"],[76,59,49,34],[77,0,50,7],[78,0,51,5],[79,0,52,3],[81,0,54,2],[81,8,54,6,"result"],[81,14,54,2],[83,0,56,2],[83,8,56,6,"results"],[83,15,56,13],[83,16,56,14,"length"],[83,22,56,6],[83,27,56,25],[83,28,56,2],[83,30,56,28],[84,0,57,4,"result"],[84,6,57,4,"result"],[84,12,57,10],[84,15,57,13],[84,16,57,14],[84,19,57,17,"_generator"],[84,29,57,27],[84,32,57,30,"default"],[84,39,57,13],[84,41,57,39,"ast"],[84,44,57,13],[84,46,57,44,"opts"],[84,50,57,48],[84,51,57,49,"generatorOpts"],[84,64,57,13],[84,66,57,64,"code"],[84,70,57,13],[84,71,57,4],[85,0,58,3],[85,5,56,2],[85,11,58,9],[85,15,58,13,"results"],[85,22,58,20],[85,23,58,21,"length"],[85,29,58,13],[85,34,58,32],[85,35,58,9],[85,37,58,35],[86,0,59,4,"result"],[86,6,59,4,"result"],[86,12,59,10],[86,15,59,13,"results"],[86,22,59,20],[86,23,59,21],[86,24,59,20],[86,25,59,4],[88,0,61,4],[88,10,61,8],[88,17,61,15,"result"],[88,23,61,21],[88,24,61,22,"then"],[88,28,61,8],[88,33,61,31],[88,43,61,4],[88,45,61,43],[89,0,62,6],[89,14,62,12],[89,18,62,16,"Error"],[89,23,62,12],[89,24,62,22],[89,228,62,12],[89,229,62,6],[90,0,63,5],[91,0,64,3],[91,5,58,9],[91,11,64,9],[92,0,65,4],[92,12,65,10],[92,16,65,14,"Error"],[92,21,65,10],[92,22,65,20],[92,75,65,10],[92,76,65,4],[93,0,66,3],[95,0,32,42],[95,18,71,6,"result"],[95,24,32,42],[96,0,32,42],[96,8,69,10,"outputCode"],[96,18,32,42],[96,29,69,4,"code"],[96,33,32,42],[97,0,32,42],[97,8,70,9,"outputMap"],[97,17,32,42],[97,28,70,4,"map"],[97,31,32,42],[99,0,73,2],[99,8,73,6,"outputMap"],[99,17,73,15],[99,21,73,19,"inputMap"],[99,29,73,2],[99,31,73,29],[100,0,74,4,"outputMap"],[100,6,74,4,"outputMap"],[100,15,74,13],[100,18,74,16],[100,19,74,17],[100,22,74,20,"_mergeMap"],[100,31,74,29],[100,32,74,30,"default"],[100,39,74,16],[100,41,74,39,"inputMap"],[100,49,74,47],[100,50,74,48,"toObject"],[100,58,74,39],[100,60,74,16],[100,62,74,60,"outputMap"],[100,71,74,16],[100,72,74,4],[101,0,75,3],[103,0,77,2],[103,8,77,6,"opts"],[103,12,77,10],[103,13,77,11,"sourceMaps"],[103,23,77,6],[103,28,77,26],[103,36,77,6],[103,40,77,38,"opts"],[103,44,77,42],[103,45,77,43,"sourceMaps"],[103,55,77,38],[103,60,77,58],[103,66,77,2],[103,68,77,66],[104,0,78,4,"outputCode"],[104,6,78,4,"outputCode"],[104,16,78,14],[104,20,78,18],[104,27,78,25,"_convertSourceMap"],[104,44,78,42],[104,47,78,45,"default"],[104,54,78,25],[104,55,78,53,"fromObject"],[104,65,78,25],[104,66,78,64,"outputMap"],[104,75,78,25],[104,77,78,75,"toComment"],[104,86,78,25],[104,88,78,4],[105,0,79,3],[107,0,81,2],[107,8,81,6,"opts"],[107,12,81,10],[107,13,81,11,"sourceMaps"],[107,23,81,6],[107,28,81,26],[107,36,81,2],[107,38,81,36],[108,0,82,4,"outputMap"],[108,6,82,4,"outputMap"],[108,15,82,13],[108,18,82,16],[108,22,82,4],[109,0,83,3],[111,0,85,2],[111,11,85,9],[112,0,86,4,"outputCode"],[112,6,86,4,"outputCode"],[112,16,86,14],[112,18,86,4,"outputCode"],[112,28,85,9],[113,0,87,4,"outputMap"],[113,6,87,4,"outputMap"],[113,15,87,13],[113,17,87,4,"outputMap"],[114,0,85,9],[114,5,85,2],[115,0,89,1]]},"type":"js/module"}]}