{"dependencies":[{"name":"../../builders/generated","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = cleanJSXElementLiteralChild;\n\n  var _generated = _$$_REQUIRE(_dependencyMap[0], \"../../builders/generated\");\n\n  function cleanJSXElementLiteralChild(child, args) {\n    var lines = child.value.split(/\\r\\n|\\n|\\r/);\n    var lastNonEmptyLine = 0;\n\n    for (var i = 0; i < lines.length; i++) {\n      if (lines[i].match(/[^ \\t]/)) {\n        lastNonEmptyLine = i;\n      }\n    }\n\n    var str = \"\";\n\n    for (var _i = 0; _i < lines.length; _i++) {\n      var line = lines[_i];\n      var isFirstLine = _i === 0;\n      var isLastLine = _i === lines.length - 1;\n      var isLastNonEmptyLine = _i === lastNonEmptyLine;\n      var trimmedLine = line.replace(/\\t/g, \" \");\n\n      if (!isFirstLine) {\n        trimmedLine = trimmedLine.replace(/^[ ]+/, \"\");\n      }\n\n      if (!isLastLine) {\n        trimmedLine = trimmedLine.replace(/[ ]+$/, \"\");\n      }\n\n      if (trimmedLine) {\n        if (!isLastNonEmptyLine) {\n          trimmedLine += \" \";\n        }\n\n        str += trimmedLine;\n      }\n    }\n\n    if (str) args.push((0, _generated.stringLiteral)(str));\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"cleanJSXElementLiteralChild"],[7,47,6,0],[9,0,8,0],[9,6,8,4,"_generated"],[9,16,8,14],[9,19,8,17,"require"],[9,30,8,24],[9,77,8,0],[11,0,10,0],[11,11,10,9,"cleanJSXElementLiteralChild"],[11,38,10,0],[11,39,10,37,"child"],[11,44,10,0],[11,46,10,44,"args"],[11,50,10,0],[11,52,10,50],[12,0,11,2],[12,8,11,8,"lines"],[12,13,11,13],[12,16,11,16,"child"],[12,21,11,21],[12,22,11,22,"value"],[12,27,11,16],[12,28,11,28,"split"],[12,33,11,16],[12,34,11,34],[12,46,11,16],[12,47,11,2],[13,0,12,2],[13,8,12,6,"lastNonEmptyLine"],[13,24,12,22],[13,27,12,25],[13,28,12,2],[15,0,14,2],[15,9,14,7],[15,13,14,11,"i"],[15,14,14,12],[15,17,14,15],[15,18,14,2],[15,20,14,18,"i"],[15,21,14,19],[15,24,14,22,"lines"],[15,29,14,27],[15,30,14,28,"length"],[15,36,14,2],[15,38,14,36,"i"],[15,39,14,37],[15,41,14,2],[15,43,14,41],[16,0,15,4],[16,10,15,8,"lines"],[16,15,15,13],[16,16,15,14,"i"],[16,17,15,13],[16,18,15,8],[16,19,15,17,"match"],[16,24,15,8],[16,25,15,23],[16,33,15,8],[16,34,15,4],[16,36,15,34],[17,0,16,6,"lastNonEmptyLine"],[17,8,16,6,"lastNonEmptyLine"],[17,24,16,22],[17,27,16,25,"i"],[17,28,16,6],[18,0,17,5],[19,0,18,3],[21,0,20,2],[21,8,20,6,"str"],[21,11,20,9],[21,14,20,12],[21,16,20,2],[23,0,22,2],[23,9,22,7],[23,13,22,11,"i"],[23,15,22,12],[23,18,22,15],[23,19,22,2],[23,21,22,18,"i"],[23,23,22,19],[23,26,22,22,"lines"],[23,31,22,27],[23,32,22,28,"length"],[23,38,22,2],[23,40,22,36,"i"],[23,42,22,37],[23,44,22,2],[23,46,22,41],[24,0,23,4],[24,10,23,10,"line"],[24,14,23,14],[24,17,23,17,"lines"],[24,22,23,22],[24,23,23,23,"i"],[24,25,23,22],[24,26,23,4],[25,0,24,4],[25,10,24,10,"isFirstLine"],[25,21,24,21],[25,24,24,24,"i"],[25,26,24,25],[25,31,24,30],[25,32,24,4],[26,0,25,4],[26,10,25,10,"isLastLine"],[26,20,25,20],[26,23,25,23,"i"],[26,25,25,24],[26,30,25,29,"lines"],[26,35,25,34],[26,36,25,35,"length"],[26,42,25,29],[26,45,25,44],[26,46,25,4],[27,0,26,4],[27,10,26,10,"isLastNonEmptyLine"],[27,28,26,28],[27,31,26,31,"i"],[27,33,26,32],[27,38,26,37,"lastNonEmptyLine"],[27,54,26,4],[28,0,27,4],[28,10,27,8,"trimmedLine"],[28,21,27,19],[28,24,27,22,"line"],[28,28,27,26],[28,29,27,27,"replace"],[28,36,27,22],[28,37,27,35],[28,42,27,22],[28,44,27,42],[28,47,27,22],[28,48,27,4],[30,0,29,4],[30,10,29,8],[30,11,29,9,"isFirstLine"],[30,22,29,4],[30,24,29,22],[31,0,30,6,"trimmedLine"],[31,8,30,6,"trimmedLine"],[31,19,30,17],[31,22,30,20,"trimmedLine"],[31,33,30,31],[31,34,30,32,"replace"],[31,41,30,20],[31,42,30,40],[31,49,30,20],[31,51,30,49],[31,53,30,20],[31,54,30,6],[32,0,31,5],[34,0,33,4],[34,10,33,8],[34,11,33,9,"isLastLine"],[34,21,33,4],[34,23,33,21],[35,0,34,6,"trimmedLine"],[35,8,34,6,"trimmedLine"],[35,19,34,17],[35,22,34,20,"trimmedLine"],[35,33,34,31],[35,34,34,32,"replace"],[35,41,34,20],[35,42,34,40],[35,49,34,20],[35,51,34,49],[35,53,34,20],[35,54,34,6],[36,0,35,5],[38,0,37,4],[38,10,37,8,"trimmedLine"],[38,21,37,4],[38,23,37,21],[39,0,38,6],[39,12,38,10],[39,13,38,11,"isLastNonEmptyLine"],[39,31,38,6],[39,33,38,31],[40,0,39,8,"trimmedLine"],[40,10,39,8,"trimmedLine"],[40,21,39,19],[40,25,39,23],[40,28,39,8],[41,0,40,7],[43,0,42,6,"str"],[43,8,42,6,"str"],[43,11,42,9],[43,15,42,13,"trimmedLine"],[43,26,42,6],[44,0,43,5],[45,0,44,3],[47,0,46,2],[47,8,46,6,"str"],[47,11,46,2],[47,13,46,11,"args"],[47,17,46,15],[47,18,46,16,"push"],[47,22,46,11],[47,23,46,21],[47,24,46,22],[47,27,46,25,"_generated"],[47,37,46,35],[47,38,46,36,"stringLiteral"],[47,51,46,21],[47,53,46,51,"str"],[47,56,46,21],[47,57,46,11],[48,0,47,1]]},"type":"js/module"}]}