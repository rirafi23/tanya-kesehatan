{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.File = File;\n  exports.Program = Program;\n  exports.BlockStatement = BlockStatement;\n  exports.Noop = Noop;\n  exports.Directive = Directive;\n  exports.DirectiveLiteral = DirectiveLiteral;\n  exports.InterpreterDirective = InterpreterDirective;\n  exports.Placeholder = Placeholder;\n\n  function File(node) {\n    if (node.program) {\n      this.print(node.program.interpreter, node);\n    }\n\n    this.print(node.program, node);\n  }\n\n  function Program(node) {\n    this.printInnerComments(node, false);\n    this.printSequence(node.directives, node);\n    if (node.directives && node.directives.length) this.newline();\n    this.printSequence(node.body, node);\n  }\n\n  function BlockStatement(node) {\n    this.token(\"{\");\n    this.printInnerComments(node);\n    var hasDirectives = node.directives && node.directives.length;\n\n    if (node.body.length || hasDirectives) {\n      this.newline();\n      this.printSequence(node.directives, node, {\n        indent: true\n      });\n      if (hasDirectives) this.newline();\n      this.printSequence(node.body, node, {\n        indent: true\n      });\n      this.removeTrailingNewline();\n      this.source(\"end\", node.loc);\n      if (!this.endsWith(\"\\n\")) this.newline();\n      this.rightBrace();\n    } else {\n      this.source(\"end\", node.loc);\n      this.token(\"}\");\n    }\n  }\n\n  function Noop() {}\n\n  function Directive(node) {\n    this.print(node.value, node);\n    this.semicolon();\n  }\n\n  var unescapedSingleQuoteRE = /(?:^|[^\\\\])(?:\\\\\\\\)*'/;\n  var unescapedDoubleQuoteRE = /(?:^|[^\\\\])(?:\\\\\\\\)*\"/;\n\n  function DirectiveLiteral(node) {\n    var raw = this.getPossibleRaw(node);\n\n    if (raw != null) {\n      this.token(raw);\n      return;\n    }\n\n    var value = node.value;\n\n    if (!unescapedDoubleQuoteRE.test(value)) {\n      this.token(\"\\\"\" + value + \"\\\"\");\n    } else if (!unescapedSingleQuoteRE.test(value)) {\n      this.token(\"'\" + value + \"'\");\n    } else {\n      throw new Error(\"Malformed AST: it is not possible to print a directive containing\" + \" both unescaped single and double quotes.\");\n    }\n  }\n\n  function InterpreterDirective(node) {\n    this.token(\"#!\" + node.value + \"\\n\");\n  }\n\n  function Placeholder(node) {\n    this.token(\"%%\");\n    this.print(node.name);\n    this.token(\"%%\");\n\n    if (node.expectedNode === \"Statement\") {\n      this.semicolon();\n    }\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"File"],[7,14,6,0],[7,17,6,15,"File"],[7,21,6,0],[8,0,7,0,"exports"],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"Program"],[8,17,7,0],[8,20,7,18,"Program"],[8,27,7,0],[9,0,8,0,"exports"],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"BlockStatement"],[9,24,8,0],[9,27,8,25,"BlockStatement"],[9,41,8,0],[10,0,9,0,"exports"],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"Noop"],[10,14,9,0],[10,17,9,15,"Noop"],[10,21,9,0],[11,0,10,0,"exports"],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"Directive"],[11,19,10,0],[11,22,10,20,"Directive"],[11,31,10,0],[12,0,11,0,"exports"],[12,2,11,0,"exports"],[12,9,11,7],[12,10,11,8,"DirectiveLiteral"],[12,26,11,0],[12,29,11,27,"DirectiveLiteral"],[12,45,11,0],[13,0,12,0,"exports"],[13,2,12,0,"exports"],[13,9,12,7],[13,10,12,8,"InterpreterDirective"],[13,30,12,0],[13,33,12,31,"InterpreterDirective"],[13,53,12,0],[14,0,13,0,"exports"],[14,2,13,0,"exports"],[14,9,13,7],[14,10,13,8,"Placeholder"],[14,21,13,0],[14,24,13,22,"Placeholder"],[14,35,13,0],[16,0,15,0],[16,11,15,9,"File"],[16,15,15,0],[16,16,15,14,"node"],[16,20,15,0],[16,22,15,20],[17,0,16,2],[17,8,16,6,"node"],[17,12,16,10],[17,13,16,11,"program"],[17,20,16,2],[17,22,16,20],[18,0,17,4],[18,11,17,9,"print"],[18,16,17,4],[18,17,17,15,"node"],[18,21,17,19],[18,22,17,20,"program"],[18,29,17,15],[18,30,17,28,"interpreter"],[18,41,17,4],[18,43,17,41,"node"],[18,47,17,4],[19,0,18,3],[21,0,20,2],[21,9,20,7,"print"],[21,14,20,2],[21,15,20,13,"node"],[21,19,20,17],[21,20,20,18,"program"],[21,27,20,2],[21,29,20,27,"node"],[21,33,20,2],[22,0,21,1],[24,0,23,0],[24,11,23,9,"Program"],[24,18,23,0],[24,19,23,17,"node"],[24,23,23,0],[24,25,23,23],[25,0,24,2],[25,9,24,7,"printInnerComments"],[25,27,24,2],[25,28,24,26,"node"],[25,32,24,2],[25,34,24,32],[25,39,24,2],[26,0,25,2],[26,9,25,7,"printSequence"],[26,22,25,2],[26,23,25,21,"node"],[26,27,25,25],[26,28,25,26,"directives"],[26,38,25,2],[26,40,25,38,"node"],[26,44,25,2],[27,0,26,2],[27,8,26,6,"node"],[27,12,26,10],[27,13,26,11,"directives"],[27,23,26,6],[27,27,26,25,"node"],[27,31,26,29],[27,32,26,30,"directives"],[27,42,26,25],[27,43,26,41,"length"],[27,49,26,2],[27,51,26,49],[27,56,26,54,"newline"],[27,63,26,49],[28,0,27,2],[28,9,27,7,"printSequence"],[28,22,27,2],[28,23,27,21,"node"],[28,27,27,25],[28,28,27,26,"body"],[28,32,27,2],[28,34,27,32,"node"],[28,38,27,2],[29,0,28,1],[31,0,30,0],[31,11,30,9,"BlockStatement"],[31,25,30,0],[31,26,30,24,"node"],[31,30,30,0],[31,32,30,30],[32,0,31,2],[32,9,31,7,"token"],[32,14,31,2],[32,15,31,13],[32,18,31,2],[33,0,32,2],[33,9,32,7,"printInnerComments"],[33,27,32,2],[33,28,32,26,"node"],[33,32,32,2],[34,0,33,2],[34,8,33,8,"hasDirectives"],[34,21,33,21],[34,24,33,24,"node"],[34,28,33,28],[34,29,33,29,"directives"],[34,39,33,24],[34,43,33,43,"node"],[34,47,33,47],[34,48,33,48,"directives"],[34,58,33,43],[34,59,33,59,"length"],[34,65,33,2],[36,0,35,2],[36,8,35,6,"node"],[36,12,35,10],[36,13,35,11,"body"],[36,17,35,6],[36,18,35,16,"length"],[36,24,35,6],[36,28,35,26,"hasDirectives"],[36,41,35,2],[36,43,35,41],[37,0,36,4],[37,11,36,9,"newline"],[37,18,36,4],[38,0,37,4],[38,11,37,9,"printSequence"],[38,24,37,4],[38,25,37,23,"node"],[38,29,37,27],[38,30,37,28,"directives"],[38,40,37,4],[38,42,37,40,"node"],[38,46,37,4],[38,48,37,46],[39,0,38,6,"indent"],[39,8,38,6,"indent"],[39,14,38,12],[39,16,38,14],[40,0,37,46],[40,7,37,4],[41,0,40,4],[41,10,40,8,"hasDirectives"],[41,23,40,4],[41,25,40,23],[41,30,40,28,"newline"],[41,37,40,23],[42,0,41,4],[42,11,41,9,"printSequence"],[42,24,41,4],[42,25,41,23,"node"],[42,29,41,27],[42,30,41,28,"body"],[42,34,41,4],[42,36,41,34,"node"],[42,40,41,4],[42,42,41,40],[43,0,42,6,"indent"],[43,8,42,6,"indent"],[43,14,42,12],[43,16,42,14],[44,0,41,40],[44,7,41,4],[45,0,44,4],[45,11,44,9,"removeTrailingNewline"],[45,32,44,4],[46,0,45,4],[46,11,45,9,"source"],[46,17,45,4],[46,18,45,16],[46,23,45,4],[46,25,45,23,"node"],[46,29,45,27],[46,30,45,28,"loc"],[46,33,45,4],[47,0,46,4],[47,10,46,8],[47,11,46,9],[47,16,46,14,"endsWith"],[47,24,46,9],[47,25,46,23],[47,29,46,9],[47,30,46,4],[47,32,46,30],[47,37,46,35,"newline"],[47,44,46,30],[48,0,47,4],[48,11,47,9,"rightBrace"],[48,21,47,4],[49,0,48,3],[49,5,35,2],[49,11,48,9],[50,0,49,4],[50,11,49,9,"source"],[50,17,49,4],[50,18,49,16],[50,23,49,4],[50,25,49,23,"node"],[50,29,49,27],[50,30,49,28,"loc"],[50,33,49,4],[51,0,50,4],[51,11,50,9,"token"],[51,16,50,4],[51,17,50,15],[51,20,50,4],[52,0,51,3],[53,0,52,1],[55,0,54,0],[55,11,54,9,"Noop"],[55,15,54,0],[55,18,54,16],[55,19,54,18],[57,0,56,0],[57,11,56,9,"Directive"],[57,20,56,0],[57,21,56,19,"node"],[57,25,56,0],[57,27,56,25],[58,0,57,2],[58,9,57,7,"print"],[58,14,57,2],[58,15,57,13,"node"],[58,19,57,17],[58,20,57,18,"value"],[58,25,57,2],[58,27,57,25,"node"],[58,31,57,2],[59,0,58,2],[59,9,58,7,"semicolon"],[59,18,58,2],[60,0,59,1],[62,0,61,0],[62,6,61,6,"unescapedSingleQuoteRE"],[62,28,61,28],[62,31,61,31],[62,54,61,0],[63,0,62,0],[63,6,62,6,"unescapedDoubleQuoteRE"],[63,28,62,28],[63,31,62,31],[63,54,62,0],[65,0,64,0],[65,11,64,9,"DirectiveLiteral"],[65,27,64,0],[65,28,64,26,"node"],[65,32,64,0],[65,34,64,32],[66,0,65,2],[66,8,65,8,"raw"],[66,11,65,11],[66,14,65,14],[66,19,65,19,"getPossibleRaw"],[66,33,65,14],[66,34,65,34,"node"],[66,38,65,14],[66,39,65,2],[68,0,67,2],[68,8,67,6,"raw"],[68,11,67,9],[68,15,67,13],[68,19,67,2],[68,21,67,19],[69,0,68,4],[69,11,68,9,"token"],[69,16,68,4],[69,17,68,15,"raw"],[69,20,68,4],[70,0,69,4],[71,0,70,3],[73,0,64,32],[73,8,73,4,"value"],[73,13,64,32],[73,16,74,6,"node"],[73,20,64,32],[73,21,73,4,"value"],[73,26,64,32],[75,0,76,2],[75,8,76,6],[75,9,76,7,"unescapedDoubleQuoteRE"],[75,31,76,29],[75,32,76,30,"test"],[75,36,76,7],[75,37,76,35,"value"],[75,42,76,7],[75,43,76,2],[75,45,76,43],[76,0,77,4],[76,11,77,9,"token"],[76,16,77,4],[76,24,77,19,"value"],[76,29,77,4],[77,0,78,3],[77,5,76,2],[77,11,78,9],[77,15,78,13],[77,16,78,14,"unescapedSingleQuoteRE"],[77,38,78,36],[77,39,78,37,"test"],[77,43,78,14],[77,44,78,42,"value"],[77,49,78,14],[77,50,78,9],[77,52,78,50],[78,0,79,4],[78,11,79,9,"token"],[78,16,79,4],[78,23,79,19,"value"],[78,28,79,4],[79,0,80,3],[79,5,78,9],[79,11,80,9],[80,0,81,4],[80,12,81,10],[80,16,81,14,"Error"],[80,21,81,10],[80,22,81,20],[80,92,81,90],[80,135,81,10],[80,136,81,4],[81,0,82,3],[82,0,83,1],[84,0,85,0],[84,11,85,9,"InterpreterDirective"],[84,31,85,0],[84,32,85,30,"node"],[84,36,85,0],[84,38,85,36],[85,0,86,2],[85,9,86,7,"token"],[85,14,86,2],[85,22,86,18,"node"],[85,26,86,22],[85,27,86,23,"value"],[85,32,86,2],[86,0,87,1],[88,0,89,0],[88,11,89,9,"Placeholder"],[88,22,89,0],[88,23,89,21,"node"],[88,27,89,0],[88,29,89,27],[89,0,90,2],[89,9,90,7,"token"],[89,14,90,2],[89,15,90,13],[89,19,90,2],[90,0,91,2],[90,9,91,7,"print"],[90,14,91,2],[90,15,91,13,"node"],[90,19,91,17],[90,20,91,18,"name"],[90,24,91,2],[91,0,92,2],[91,9,92,7,"token"],[91,14,92,2],[91,15,92,13],[91,19,92,2],[93,0,94,2],[93,8,94,6,"node"],[93,12,94,10],[93,13,94,11,"expectedNode"],[93,25,94,6],[93,30,94,28],[93,41,94,2],[93,43,94,41],[94,0,95,4],[94,11,95,9,"semicolon"],[94,20,95,4],[95,0,96,3],[96,0,97,1]]},"type":"js/module"}]}