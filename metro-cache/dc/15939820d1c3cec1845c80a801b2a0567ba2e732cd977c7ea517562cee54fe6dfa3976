{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.hooks = void 0;\n  var hooks = [function (self, parent) {\n    var removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n    if (removeParent) {\n      parent.remove();\n      return true;\n    }\n  }, function (self, parent) {\n    if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n      parent.replaceWith(parent.node.expressions[0]);\n      return true;\n    }\n  }, function (self, parent) {\n    if (parent.isBinary()) {\n      if (self.key === \"left\") {\n        parent.replaceWith(parent.node.right);\n      } else {\n        parent.replaceWith(parent.node.left);\n      }\n\n      return true;\n    }\n  }, function (self, parent) {\n    if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n      self.replaceWith({\n        type: \"BlockStatement\",\n        body: []\n      });\n      return true;\n    }\n  }];\n  exports.hooks = hooks;\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"hooks"],[7,15,6,0],[7,18,6,16],[7,23,6,21],[7,24,6,0],[8,0,7,0],[8,6,7,6,"hooks"],[8,11,7,11],[8,14,7,14],[8,15,7,15],[8,25,7,25,"self"],[8,29,7,15],[8,31,7,31,"parent"],[8,37,7,15],[8,39,7,39],[9,0,8,2],[9,8,8,8,"removeParent"],[9,20,8,20],[9,23,8,23,"self"],[9,27,8,27],[9,28,8,28,"key"],[9,31,8,23],[9,36,8,36],[9,42,8,23],[9,47,8,47,"parent"],[9,53,8,53],[9,54,8,54,"isWhile"],[9,61,8,47],[9,67,8,67,"parent"],[9,73,8,73],[9,74,8,74,"isSwitchCase"],[9,86,8,67],[9,88,8,23],[9,93,8,93,"self"],[9,97,8,97],[9,98,8,98,"key"],[9,101,8,93],[9,106,8,106],[9,119,8,93],[9,123,8,123,"parent"],[9,129,8,129],[9,130,8,130,"isExportDeclaration"],[9,149,8,123],[9,151,8,23],[9,155,8,155,"self"],[9,159,8,159],[9,160,8,160,"key"],[9,163,8,155],[9,168,8,168],[9,174,8,155],[9,178,8,178,"parent"],[9,184,8,184],[9,185,8,185,"isLabeledStatement"],[9,203,8,178],[9,205,8,23],[9,209,8,209,"self"],[9,213,8,213],[9,214,8,214,"listKey"],[9,221,8,209],[9,226,8,226],[9,240,8,209],[9,244,8,244,"parent"],[9,250,8,250],[9,251,8,251,"isVariableDeclaration"],[9,272,8,244],[9,274,8,209],[9,278,8,278,"parent"],[9,284,8,284],[9,285,8,285,"node"],[9,289,8,278],[9,290,8,290,"declarations"],[9,302,8,278],[9,303,8,303,"length"],[9,309,8,278],[9,314,8,314],[9,315,8,23],[9,319,8,319,"self"],[9,323,8,323],[9,324,8,324,"key"],[9,327,8,319],[9,332,8,332],[9,344,8,319],[9,348,8,348,"parent"],[9,354,8,354],[9,355,8,355,"isExpressionStatement"],[9,376,8,348],[9,378,8,2],[11,0,10,2],[11,8,10,6,"removeParent"],[11,20,10,2],[11,22,10,20],[12,0,11,4,"parent"],[12,6,11,4,"parent"],[12,12,11,10],[12,13,11,11,"remove"],[12,19,11,4],[13,0,12,4],[13,13,12,11],[13,17,12,4],[14,0,13,3],[15,0,14,1],[15,3,7,14],[15,5,14,3],[15,15,14,13,"self"],[15,19,14,3],[15,21,14,19,"parent"],[15,27,14,3],[15,29,14,27],[16,0,15,2],[16,8,15,6,"parent"],[16,14,15,12],[16,15,15,13,"isSequenceExpression"],[16,35,15,6],[16,41,15,39,"parent"],[16,47,15,45],[16,48,15,46,"node"],[16,52,15,39],[16,53,15,51,"expressions"],[16,64,15,39],[16,65,15,63,"length"],[16,71,15,39],[16,76,15,74],[16,77,15,2],[16,79,15,77],[17,0,16,4,"parent"],[17,6,16,4,"parent"],[17,12,16,10],[17,13,16,11,"replaceWith"],[17,24,16,4],[17,25,16,23,"parent"],[17,31,16,29],[17,32,16,30,"node"],[17,36,16,23],[17,37,16,35,"expressions"],[17,48,16,23],[17,49,16,47],[17,50,16,23],[17,51,16,4],[18,0,17,4],[18,13,17,11],[18,17,17,4],[19,0,18,3],[20,0,19,1],[20,3,7,14],[20,5,19,3],[20,15,19,13,"self"],[20,19,19,3],[20,21,19,19,"parent"],[20,27,19,3],[20,29,19,27],[21,0,20,2],[21,8,20,6,"parent"],[21,14,20,12],[21,15,20,13,"isBinary"],[21,23,20,6],[21,25,20,2],[21,27,20,25],[22,0,21,4],[22,10,21,8,"self"],[22,14,21,12],[22,15,21,13,"key"],[22,18,21,8],[22,23,21,21],[22,29,21,4],[22,31,21,29],[23,0,22,6,"parent"],[23,8,22,6,"parent"],[23,14,22,12],[23,15,22,13,"replaceWith"],[23,26,22,6],[23,27,22,25,"parent"],[23,33,22,31],[23,34,22,32,"node"],[23,38,22,25],[23,39,22,37,"right"],[23,44,22,6],[24,0,23,5],[24,7,21,4],[24,13,23,11],[25,0,24,6,"parent"],[25,8,24,6,"parent"],[25,14,24,12],[25,15,24,13,"replaceWith"],[25,26,24,6],[25,27,24,25,"parent"],[25,33,24,31],[25,34,24,32,"node"],[25,38,24,25],[25,39,24,37,"left"],[25,43,24,6],[26,0,25,5],[28,0,27,4],[28,13,27,11],[28,17,27,4],[29,0,28,3],[30,0,29,1],[30,3,7,14],[30,5,29,3],[30,15,29,13,"self"],[30,19,29,3],[30,21,29,19,"parent"],[30,27,29,3],[30,29,29,27],[31,0,30,2],[31,8,30,6,"parent"],[31,14,30,12],[31,15,30,13,"isIfStatement"],[31,28,30,6],[31,35,30,33,"self"],[31,39,30,37],[31,40,30,38,"key"],[31,43,30,33],[31,48,30,46],[31,60,30,33],[31,64,30,62,"self"],[31,68,30,66],[31,69,30,67,"key"],[31,72,30,62],[31,77,30,75],[31,88,30,6],[31,93,30,91,"self"],[31,97,30,95],[31,98,30,96,"key"],[31,101,30,91],[31,106,30,104],[31,112,30,91],[31,117,30,115,"parent"],[31,123,30,121],[31,124,30,122,"isLoop"],[31,130,30,115],[31,136,30,134,"parent"],[31,142,30,140],[31,143,30,141,"isArrowFunctionExpression"],[31,168,30,134],[31,170,30,91],[31,171,30,2],[31,173,30,171],[32,0,31,4,"self"],[32,6,31,4,"self"],[32,10,31,8],[32,11,31,9,"replaceWith"],[32,22,31,4],[32,23,31,21],[33,0,32,6,"type"],[33,8,32,6,"type"],[33,12,32,10],[33,14,32,12],[33,30,31,21],[34,0,33,6,"body"],[34,8,33,6,"body"],[34,12,33,10],[34,14,33,12],[35,0,31,21],[35,7,31,4],[36,0,35,4],[36,13,35,11],[36,17,35,4],[37,0,36,3],[38,0,37,1],[38,3,7,14],[38,4,7,0],[39,0,38,0,"exports"],[39,2,38,0,"exports"],[39,9,38,7],[39,10,38,8,"hooks"],[39,15,38,0],[39,18,38,16,"hooks"],[39,23,38,0]]},"type":"js/module"}]}