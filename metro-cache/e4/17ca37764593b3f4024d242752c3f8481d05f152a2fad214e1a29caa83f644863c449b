{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"fs","data":{"isAsync":false}},{"name":"path","data":{"isAsync":false}},{"name":"debug","data":{"isAsync":false}},{"name":"lodash/cloneDeep","data":{"isAsync":false}},{"name":"@babel/types","data":{"isAsync":false}},{"name":"convert-source-map","data":{"isAsync":false}},{"name":"@babel/parser","data":{"isAsync":false}},{"name":"@babel/code-frame","data":{"isAsync":false}},{"name":"./file/file","data":{"isAsync":false}},{"name":"./util/missing-plugin-helper","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = normalizeFile;\n\n  function _fs() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"fs\"));\n\n    _fs = function _fs() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _path() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"path\"));\n\n    _path = function _path() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _debug() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"debug\"));\n\n    _debug = function _debug() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _cloneDeep() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"lodash/cloneDeep\"));\n\n    _cloneDeep = function _cloneDeep() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function t() {\n    var data = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"@babel/types\"));\n\n    t = function t() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _convertSourceMap() {\n    var data = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"convert-source-map\"));\n\n    _convertSourceMap = function _convertSourceMap() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _parser() {\n    var data = _$$_REQUIRE(_dependencyMap[7], \"@babel/parser\");\n\n    _parser = function _parser() {\n      return data;\n    };\n\n    return data;\n  }\n\n  function _codeFrame() {\n    var data = _$$_REQUIRE(_dependencyMap[8], \"@babel/code-frame\");\n\n    _codeFrame = function _codeFrame() {\n      return data;\n    };\n\n    return data;\n  }\n\n  var _file = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./file/file\"));\n\n  var _missingPluginHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./util/missing-plugin-helper\"));\n\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n\n    return cache;\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n\n    var cache = _getRequireWildcardCache();\n\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj.default = obj;\n\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n\n    return newObj;\n  }\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var debug = (0, _debug().default)(\"babel:transform:file\");\n  var LARGE_INPUT_SOURCEMAP_THRESHOLD = 1000000;\n\n  function normalizeFile(pluginPasses, options, code, ast) {\n    code = \"\" + (code || \"\");\n\n    if (ast) {\n      if (ast.type === \"Program\") {\n        ast = t().file(ast, [], []);\n      } else if (ast.type !== \"File\") {\n        throw new Error(\"AST root must be a Program or File node\");\n      }\n\n      ast = (0, _cloneDeep().default)(ast);\n    } else {\n      ast = parser(pluginPasses, options, code);\n    }\n\n    var inputMap = null;\n\n    if (options.inputSourceMap !== false) {\n      if (typeof options.inputSourceMap === \"object\") {\n        inputMap = _convertSourceMap().default.fromObject(options.inputSourceMap);\n      }\n\n      if (!inputMap) {\n        var lastComment = extractComments(INLINE_SOURCEMAP_REGEX, ast);\n\n        if (lastComment) {\n          try {\n            inputMap = _convertSourceMap().default.fromComment(lastComment);\n          } catch (err) {\n            debug(\"discarding unknown inline input sourcemap\", err);\n          }\n        }\n      }\n\n      if (!inputMap) {\n        var _lastComment = extractComments(EXTERNAL_SOURCEMAP_REGEX, ast);\n\n        if (typeof options.filename === \"string\" && _lastComment) {\n          try {\n            var match = EXTERNAL_SOURCEMAP_REGEX.exec(_lastComment);\n\n            var inputMapContent = _fs().default.readFileSync(_path().default.resolve(_path().default.dirname(options.filename), match[1]));\n\n            if (inputMapContent.length > LARGE_INPUT_SOURCEMAP_THRESHOLD) {\n              debug(\"skip merging input map > 1 MB\");\n            } else {\n              inputMap = _convertSourceMap().default.fromJSON(inputMapContent);\n            }\n          } catch (err) {\n            debug(\"discarding unknown file input sourcemap\", err);\n          }\n        } else if (_lastComment) {\n          debug(\"discarding un-loadable file input sourcemap\");\n        }\n      }\n    }\n\n    return new _file.default(options, {\n      code: code,\n      ast: ast,\n      inputMap: inputMap\n    });\n  }\n\n  function parser(pluginPasses, _ref, code) {\n    var parserOpts = _ref.parserOpts,\n        _ref$highlightCode = _ref.highlightCode,\n        highlightCode = _ref$highlightCode === void 0 ? true : _ref$highlightCode,\n        _ref$filename = _ref.filename,\n        filename = _ref$filename === void 0 ? \"unknown\" : _ref$filename;\n\n    try {\n      var results = [];\n\n      for (var _iterator = pluginPasses, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var _plugins = _ref2;\n\n        for (var _iterator2 = _plugins, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref3;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref3 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref3 = _i2.value;\n          }\n\n          var _plugin = _ref3;\n          var _parserOverride = _plugin.parserOverride;\n\n          if (_parserOverride) {\n            var ast = _parserOverride(code, parserOpts, _parser().parse);\n\n            if (ast !== undefined) results.push(ast);\n          }\n        }\n      }\n\n      if (results.length === 0) {\n        return (0, _parser().parse)(code, parserOpts);\n      } else if (results.length === 1) {\n        if (typeof results[0].then === \"function\") {\n          throw new Error(\"You appear to be using an async parser plugin, \" + \"which your current version of Babel does not support. \" + \"If you're using a published plugin, you may need to upgrade \" + \"your @babel/core version.\");\n        }\n\n        return results[0];\n      }\n\n      throw new Error(\"More than one plugin attempted to override parsing.\");\n    } catch (err) {\n      if (err.code === \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\") {\n        err.message += \"\\nConsider renaming the file to '.mjs', or setting sourceType:module \" + \"or sourceType:unambiguous in your Babel config for this file.\";\n      }\n\n      var loc = err.loc,\n          missingPlugin = err.missingPlugin;\n\n      if (loc) {\n        var codeFrame = (0, _codeFrame().codeFrameColumns)(code, {\n          start: {\n            line: loc.line,\n            column: loc.column + 1\n          }\n        }, {\n          highlightCode: highlightCode\n        });\n\n        if (missingPlugin) {\n          err.message = filename + \": \" + (0, _missingPluginHelper.default)(missingPlugin[0], loc, codeFrame);\n        } else {\n          err.message = filename + \": \" + err.message + \"\\n\\n\" + codeFrame;\n        }\n\n        err.code = \"BABEL_PARSE_ERROR\";\n      }\n\n      throw err;\n    }\n  }\n\n  var INLINE_SOURCEMAP_REGEX = /^[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/;\n  var EXTERNAL_SOURCEMAP_REGEX = /^[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+)[ \\t]*$/;\n\n  function extractCommentsFromList(regex, comments, lastComment) {\n    if (comments) {\n      comments = comments.filter(function (_ref4) {\n        var value = _ref4.value;\n\n        if (regex.test(value)) {\n          lastComment = value;\n          return false;\n        }\n\n        return true;\n      });\n    }\n\n    return [comments, lastComment];\n  }\n\n  function extractComments(regex, ast) {\n    var lastComment = null;\n    t().traverseFast(ast, function (node) {\n      var _extractCommentsFromL = extractCommentsFromList(regex, node.leadingComments, lastComment);\n\n      var _extractCommentsFromL2 = _slicedToArray(_extractCommentsFromL, 2);\n\n      node.leadingComments = _extractCommentsFromL2[0];\n      lastComment = _extractCommentsFromL2[1];\n\n      var _extractCommentsFromL3 = extractCommentsFromList(regex, node.innerComments, lastComment);\n\n      var _extractCommentsFromL4 = _slicedToArray(_extractCommentsFromL3, 2);\n\n      node.innerComments = _extractCommentsFromL4[0];\n      lastComment = _extractCommentsFromL4[1];\n\n      var _extractCommentsFromL5 = extractCommentsFromList(regex, node.trailingComments, lastComment);\n\n      var _extractCommentsFromL6 = _slicedToArray(_extractCommentsFromL5, 2);\n\n      node.trailingComments = _extractCommentsFromL6[0];\n      lastComment = _extractCommentsFromL6[1];\n    });\n    return lastComment;\n  }\n});","map":[[2,0,1,0],[6,0,3,0,"Object"],[6,2,3,0,"Object"],[6,8,3,6],[6,9,3,7,"defineProperty"],[6,23,3,0],[6,24,3,22,"exports"],[6,31,3,0],[6,33,3,31],[6,45,3,0],[6,47,3,45],[7,0,4,2,"value"],[7,4,4,2,"value"],[7,9,4,7],[7,11,4,9],[8,0,3,45],[8,3,3,0],[9,0,6,0,"exports"],[9,2,6,0,"exports"],[9,9,6,7],[9,10,6,8,"default"],[9,17,6,0],[9,20,6,18,"normalizeFile"],[9,33,6,0],[11,0,8,0],[11,11,8,9,"_fs"],[11,14,8,0],[11,17,8,15],[12,0,9,2],[12,8,9,8,"data"],[12,12,9,12],[12,15,9,15,"_interopRequireDefault"],[12,37,9,37],[12,38,9,38,"require"],[12,49,9,45],[12,74,9,37],[12,75,9,2],[14,0,11,2,"_fs"],[14,4,11,2,"_fs"],[14,7,11,5],[14,10,11,8],[14,25,11,20],[15,0,12,4],[15,13,12,11,"data"],[15,17,12,4],[16,0,13,3],[16,5,11,2],[18,0,15,2],[18,11,15,9,"data"],[18,15,15,2],[19,0,16,1],[21,0,18,0],[21,11,18,9,"_path"],[21,16,18,0],[21,19,18,17],[22,0,19,2],[22,8,19,8,"data"],[22,12,19,12],[22,15,19,15,"_interopRequireDefault"],[22,37,19,37],[22,38,19,38,"require"],[22,49,19,45],[22,76,19,37],[22,77,19,2],[24,0,21,2,"_path"],[24,4,21,2,"_path"],[24,9,21,7],[24,12,21,10],[24,29,21,22],[25,0,22,4],[25,13,22,11,"data"],[25,17,22,4],[26,0,23,3],[26,5,21,2],[28,0,25,2],[28,11,25,9,"data"],[28,15,25,2],[29,0,26,1],[31,0,28,0],[31,11,28,9,"_debug"],[31,17,28,0],[31,20,28,18],[32,0,29,2],[32,8,29,8,"data"],[32,12,29,12],[32,15,29,15,"_interopRequireDefault"],[32,37,29,37],[32,38,29,38,"require"],[32,49,29,45],[32,77,29,37],[32,78,29,2],[34,0,31,2,"_debug"],[34,4,31,2,"_debug"],[34,10,31,8],[34,13,31,11],[34,31,31,23],[35,0,32,4],[35,13,32,11,"data"],[35,17,32,4],[36,0,33,3],[36,5,31,2],[38,0,35,2],[38,11,35,9,"data"],[38,15,35,2],[39,0,36,1],[41,0,38,0],[41,11,38,9,"_cloneDeep"],[41,21,38,0],[41,24,38,22],[42,0,39,2],[42,8,39,8,"data"],[42,12,39,12],[42,15,39,15,"_interopRequireDefault"],[42,37,39,37],[42,38,39,38,"require"],[42,49,39,45],[42,88,39,37],[42,89,39,2],[44,0,41,2,"_cloneDeep"],[44,4,41,2,"_cloneDeep"],[44,14,41,12],[44,17,41,15],[44,39,41,27],[45,0,42,4],[45,13,42,11,"data"],[45,17,42,4],[46,0,43,3],[46,5,41,2],[48,0,45,2],[48,11,45,9,"data"],[48,15,45,2],[49,0,46,1],[51,0,48,0],[51,11,48,9,"t"],[51,12,48,0],[51,15,48,13],[52,0,49,2],[52,8,49,8,"data"],[52,12,49,12],[52,15,49,15,"_interopRequireWildcard"],[52,38,49,38],[52,39,49,39,"require"],[52,50,49,46],[52,85,49,38],[52,86,49,2],[54,0,51,2,"t"],[54,4,51,2,"t"],[54,5,51,3],[54,8,51,6],[54,21,51,18],[55,0,52,4],[55,13,52,11,"data"],[55,17,52,4],[56,0,53,3],[56,5,51,2],[58,0,55,2],[58,11,55,9,"data"],[58,15,55,2],[59,0,56,1],[61,0,58,0],[61,11,58,9,"_convertSourceMap"],[61,28,58,0],[61,31,58,29],[62,0,59,2],[62,8,59,8,"data"],[62,12,59,12],[62,15,59,15,"_interopRequireDefault"],[62,37,59,37],[62,38,59,38,"require"],[62,49,59,45],[62,90,59,37],[62,91,59,2],[64,0,61,2,"_convertSourceMap"],[64,4,61,2,"_convertSourceMap"],[64,21,61,19],[64,24,61,22],[64,53,61,34],[65,0,62,4],[65,13,62,11,"data"],[65,17,62,4],[66,0,63,3],[66,5,61,2],[68,0,65,2],[68,11,65,9,"data"],[68,15,65,2],[69,0,66,1],[71,0,68,0],[71,11,68,9,"_parser"],[71,18,68,0],[71,21,68,19],[72,0,69,2],[72,8,69,8,"data"],[72,12,69,12],[72,15,69,15,"require"],[72,26,69,22],[72,62,69,2],[74,0,71,2,"_parser"],[74,4,71,2,"_parser"],[74,11,71,9],[74,14,71,12],[74,33,71,24],[75,0,72,4],[75,13,72,11,"data"],[75,17,72,4],[76,0,73,3],[76,5,71,2],[78,0,75,2],[78,11,75,9,"data"],[78,15,75,2],[79,0,76,1],[81,0,78,0],[81,11,78,9,"_codeFrame"],[81,21,78,0],[81,24,78,22],[82,0,79,2],[82,8,79,8,"data"],[82,12,79,12],[82,15,79,15,"require"],[82,26,79,22],[82,66,79,2],[84,0,81,2,"_codeFrame"],[84,4,81,2,"_codeFrame"],[84,14,81,12],[84,17,81,15],[84,39,81,27],[85,0,82,4],[85,13,82,11,"data"],[85,17,82,4],[86,0,83,3],[86,5,81,2],[88,0,85,2],[88,11,85,9,"data"],[88,15,85,2],[89,0,86,1],[91,0,88,0],[91,6,88,4,"_file"],[91,11,88,9],[91,14,88,12,"_interopRequireDefault"],[91,36,88,34],[91,37,88,35,"require"],[91,48,88,42],[91,82,88,34],[91,83,88,0],[93,0,90,0],[93,6,90,4,"_missingPluginHelper"],[93,26,90,24],[93,29,90,27,"_interopRequireDefault"],[93,51,90,49],[93,52,90,50,"require"],[93,63,90,57],[93,115,90,49],[93,116,90,0],[95,0,92,0],[95,11,92,9,"_getRequireWildcardCache"],[95,35,92,0],[95,38,92,36],[96,0,92,38],[96,8,92,42],[96,15,92,49,"WeakMap"],[96,22,92,42],[96,27,92,61],[96,37,92,38],[96,39,92,73],[96,46,92,80],[96,50,92,73],[97,0,92,86],[97,8,92,90,"cache"],[97,13,92,95],[97,16,92,98],[97,20,92,102,"WeakMap"],[97,27,92,98],[97,29,92,86],[99,0,92,113,"_getRequireWildcardCache"],[99,4,92,113,"_getRequireWildcardCache"],[99,28,92,137],[99,31,92,140],[99,67,92,152],[100,0,92,154],[100,13,92,161,"cache"],[100,18,92,154],[101,0,92,169],[101,5,92,113],[103,0,92,171],[103,11,92,178,"cache"],[103,16,92,171],[104,0,92,186],[106,0,94,0],[106,11,94,9,"_interopRequireWildcard"],[106,34,94,0],[106,35,94,33,"obj"],[106,38,94,0],[106,40,94,38],[107,0,94,40],[107,8,94,44,"obj"],[107,11,94,47],[107,15,94,51,"obj"],[107,18,94,54],[107,19,94,55,"__esModule"],[107,29,94,40],[107,31,94,67],[108,0,94,69],[108,13,94,76,"obj"],[108,16,94,69],[109,0,94,82],[111,0,94,83],[111,8,94,87,"obj"],[111,11,94,90],[111,16,94,95],[111,20,94,87],[111,24,94,103],[111,31,94,110,"obj"],[111,34,94,103],[111,39,94,118],[111,47,94,103],[111,51,94,130],[111,58,94,137,"obj"],[111,61,94,130],[111,66,94,145],[111,76,94,83],[111,78,94,157],[112,0,94,159],[112,13,94,166],[113,0,94,168,"default"],[113,8,94,168,"default"],[113,15,94,175],[113,17,94,177,"obj"],[114,0,94,166],[114,7,94,159],[115,0,94,185],[117,0,94,186],[117,8,94,190,"cache"],[117,13,94,195],[117,16,94,198,"_getRequireWildcardCache"],[117,40,94,222],[117,42,94,186],[119,0,94,226],[119,8,94,230,"cache"],[119,13,94,235],[119,17,94,239,"cache"],[119,22,94,244],[119,23,94,245,"has"],[119,26,94,239],[119,27,94,249,"obj"],[119,30,94,239],[119,31,94,226],[119,33,94,255],[120,0,94,257],[120,13,94,264,"cache"],[120,18,94,269],[120,19,94,270,"get"],[120,22,94,264],[120,23,94,274,"obj"],[120,26,94,264],[120,27,94,257],[121,0,94,281],[123,0,94,282],[123,8,94,286,"newObj"],[123,14,94,292],[123,17,94,295],[123,19,94,282],[124,0,94,299],[124,8,94,303,"hasPropertyDescriptor"],[124,29,94,324],[124,32,94,327,"Object"],[124,38,94,333],[124,39,94,334,"defineProperty"],[124,53,94,327],[124,57,94,352,"Object"],[124,63,94,358],[124,64,94,359,"getOwnPropertyDescriptor"],[124,88,94,299],[126,0,94,385],[126,9,94,390],[126,13,94,394,"key"],[126,16,94,385],[126,20,94,401,"obj"],[126,23,94,385],[126,25,94,406],[127,0,94,408],[127,10,94,412,"Object"],[127,16,94,418],[127,17,94,419,"prototype"],[127,26,94,412],[127,27,94,429,"hasOwnProperty"],[127,41,94,412],[127,42,94,444,"call"],[127,46,94,412],[127,47,94,449,"obj"],[127,50,94,412],[127,52,94,454,"key"],[127,55,94,412],[127,56,94,408],[127,58,94,460],[128,0,94,462],[128,12,94,466,"desc"],[128,16,94,470],[128,19,94,473,"hasPropertyDescriptor"],[128,40,94,494],[128,43,94,497,"Object"],[128,49,94,503],[128,50,94,504,"getOwnPropertyDescriptor"],[128,74,94,497],[128,75,94,529,"obj"],[128,78,94,497],[128,80,94,534,"key"],[128,83,94,497],[128,84,94,494],[128,87,94,541],[128,91,94,462],[130,0,94,547],[130,12,94,551,"desc"],[130,16,94,555],[130,21,94,560,"desc"],[130,25,94,564],[130,26,94,565,"get"],[130,29,94,560],[130,33,94,572,"desc"],[130,37,94,576],[130,38,94,577,"set"],[130,41,94,555],[130,42,94,547],[130,44,94,583],[131,0,94,585,"Object"],[131,10,94,585,"Object"],[131,16,94,591],[131,17,94,592,"defineProperty"],[131,31,94,585],[131,32,94,607,"newObj"],[131,38,94,585],[131,40,94,615,"key"],[131,43,94,585],[131,45,94,620,"desc"],[131,49,94,585],[132,0,94,628],[132,9,94,547],[132,15,94,634],[133,0,94,636,"newObj"],[133,10,94,636,"newObj"],[133,16,94,642],[133,17,94,643,"key"],[133,20,94,642],[133,21,94,636],[133,24,94,650,"obj"],[133,27,94,653],[133,28,94,654,"key"],[133,31,94,653],[133,32,94,636],[134,0,94,661],[135,0,94,663],[136,0,94,665],[138,0,94,666,"newObj"],[138,4,94,666,"newObj"],[138,10,94,672],[138,11,94,673,"default"],[138,18,94,666],[138,21,94,683,"obj"],[138,24,94,666],[140,0,94,688],[140,8,94,692,"cache"],[140,13,94,688],[140,15,94,699],[141,0,94,701,"cache"],[141,6,94,701,"cache"],[141,11,94,706],[141,12,94,707,"set"],[141,15,94,701],[141,16,94,711,"obj"],[141,19,94,701],[141,21,94,716,"newObj"],[141,27,94,701],[142,0,94,726],[144,0,94,727],[144,11,94,734,"newObj"],[144,17,94,727],[145,0,94,743],[147,0,96,0],[147,11,96,9,"_interopRequireDefault"],[147,33,96,0],[147,34,96,32,"obj"],[147,37,96,0],[147,39,96,37],[148,0,96,39],[148,11,96,46,"obj"],[148,14,96,49],[148,18,96,53,"obj"],[148,21,96,56],[148,22,96,57,"__esModule"],[148,32,96,46],[148,35,96,70,"obj"],[148,38,96,46],[148,41,96,76],[149,0,96,78,"default"],[149,6,96,78,"default"],[149,13,96,85],[149,15,96,87,"obj"],[150,0,96,76],[150,5,96,39],[151,0,96,95],[153,0,98,0],[153,6,98,6,"debug"],[153,11,98,11],[153,14,98,14],[153,15,98,15],[153,18,98,18,"_debug"],[153,24,98,24],[153,27,98,27,"default"],[153,34,98,14],[153,36,98,36],[153,58,98,14],[153,59,98,0],[154,0,99,0],[154,6,99,6,"LARGE_INPUT_SOURCEMAP_THRESHOLD"],[154,37,99,37],[154,40,99,40],[154,47,99,0],[156,0,101,0],[156,11,101,9,"normalizeFile"],[156,24,101,0],[156,25,101,23,"pluginPasses"],[156,37,101,0],[156,39,101,37,"options"],[156,46,101,0],[156,48,101,46,"code"],[156,52,101,0],[156,54,101,52,"ast"],[156,57,101,0],[156,59,101,57],[157,0,102,2,"code"],[157,4,102,2,"code"],[157,8,102,6],[157,17,102,12,"code"],[157,21,102,16],[157,25,102,20],[157,27,102,6],[157,28,102,2],[159,0,104,2],[159,8,104,6,"ast"],[159,11,104,2],[159,13,104,11],[160,0,105,4],[160,10,105,8,"ast"],[160,13,105,11],[160,14,105,12,"type"],[160,18,105,8],[160,23,105,21],[160,32,105,4],[160,34,105,32],[161,0,106,6,"ast"],[161,8,106,6,"ast"],[161,11,106,9],[161,14,106,12,"t"],[161,15,106,13],[161,18,106,16,"file"],[161,22,106,12],[161,23,106,21,"ast"],[161,26,106,12],[161,28,106,26],[161,30,106,12],[161,32,106,30],[161,34,106,12],[161,35,106,6],[162,0,107,5],[162,7,105,4],[162,13,107,11],[162,17,107,15,"ast"],[162,20,107,18],[162,21,107,19,"type"],[162,25,107,15],[162,30,107,28],[162,36,107,11],[162,38,107,36],[163,0,108,6],[163,14,108,12],[163,18,108,16,"Error"],[163,23,108,12],[163,24,108,22],[163,65,108,12],[163,66,108,6],[164,0,109,5],[166,0,111,4,"ast"],[166,6,111,4,"ast"],[166,9,111,7],[166,12,111,10],[166,13,111,11],[166,16,111,14,"_cloneDeep"],[166,26,111,24],[166,29,111,27,"default"],[166,36,111,10],[166,38,111,36,"ast"],[166,41,111,10],[166,42,111,4],[167,0,112,3],[167,5,104,2],[167,11,112,9],[168,0,113,4,"ast"],[168,6,113,4,"ast"],[168,9,113,7],[168,12,113,10,"parser"],[168,18,113,16],[168,19,113,17,"pluginPasses"],[168,31,113,16],[168,33,113,31,"options"],[168,40,113,16],[168,42,113,40,"code"],[168,46,113,16],[168,47,113,4],[169,0,114,3],[171,0,116,2],[171,8,116,6,"inputMap"],[171,16,116,14],[171,19,116,17],[171,23,116,2],[173,0,118,2],[173,8,118,6,"options"],[173,15,118,13],[173,16,118,14,"inputSourceMap"],[173,30,118,6],[173,35,118,33],[173,40,118,2],[173,42,118,40],[174,0,119,4],[174,10,119,8],[174,17,119,15,"options"],[174,24,119,22],[174,25,119,23,"inputSourceMap"],[174,39,119,8],[174,44,119,42],[174,52,119,4],[174,54,119,52],[175,0,120,6,"inputMap"],[175,8,120,6,"inputMap"],[175,16,120,14],[175,19,120,17,"_convertSourceMap"],[175,36,120,34],[175,39,120,37,"default"],[175,46,120,17],[175,47,120,45,"fromObject"],[175,57,120,17],[175,58,120,56,"options"],[175,65,120,63],[175,66,120,64,"inputSourceMap"],[175,80,120,17],[175,81,120,6],[176,0,121,5],[178,0,123,4],[178,10,123,8],[178,11,123,9,"inputMap"],[178,19,123,4],[178,21,123,19],[179,0,124,6],[179,12,124,12,"lastComment"],[179,23,124,23],[179,26,124,26,"extractComments"],[179,41,124,41],[179,42,124,42,"INLINE_SOURCEMAP_REGEX"],[179,64,124,41],[179,66,124,66,"ast"],[179,69,124,41],[179,70,124,6],[181,0,126,6],[181,12,126,10,"lastComment"],[181,23,126,6],[181,25,126,23],[182,0,127,8],[182,14,127,12],[183,0,128,10,"inputMap"],[183,12,128,10,"inputMap"],[183,20,128,18],[183,23,128,21,"_convertSourceMap"],[183,40,128,38],[183,43,128,41,"default"],[183,50,128,21],[183,51,128,49,"fromComment"],[183,62,128,21],[183,63,128,61,"lastComment"],[183,74,128,21],[183,75,128,10],[184,0,129,9],[184,11,127,8],[184,12,129,10],[184,19,129,17,"err"],[184,22,129,10],[184,24,129,22],[185,0,130,10,"debug"],[185,12,130,10,"debug"],[185,17,130,15],[185,18,130,16],[185,61,130,15],[185,63,130,61,"err"],[185,66,130,15],[185,67,130,10],[186,0,131,9],[187,0,132,7],[188,0,133,5],[190,0,135,4],[190,10,135,8],[190,11,135,9,"inputMap"],[190,19,135,4],[190,21,135,19],[191,0,136,6],[191,12,136,12,"lastComment"],[191,24,136,23],[191,27,136,26,"extractComments"],[191,42,136,41],[191,43,136,42,"EXTERNAL_SOURCEMAP_REGEX"],[191,67,136,41],[191,69,136,68,"ast"],[191,72,136,41],[191,73,136,6],[193,0,138,6],[193,12,138,10],[193,19,138,17,"options"],[193,26,138,24],[193,27,138,25,"filename"],[193,35,138,10],[193,40,138,38],[193,48,138,10],[193,52,138,50,"lastComment"],[193,64,138,6],[193,66,138,63],[194,0,139,8],[194,14,139,12],[195,0,140,10],[195,16,140,16,"match"],[195,21,140,21],[195,24,140,24,"EXTERNAL_SOURCEMAP_REGEX"],[195,48,140,48],[195,49,140,49,"exec"],[195,53,140,24],[195,54,140,54,"lastComment"],[195,66,140,24],[195,67,140,10],[197,0,142,10],[197,16,142,16,"inputMapContent"],[197,31,142,31],[197,34,142,34,"_fs"],[197,37,142,37],[197,40,142,40,"default"],[197,47,142,34],[197,48,142,48,"readFileSync"],[197,60,142,34],[197,61,142,61,"_path"],[197,66,142,66],[197,69,142,69,"default"],[197,76,142,61],[197,77,142,77,"resolve"],[197,84,142,61],[197,85,142,85,"_path"],[197,90,142,90],[197,93,142,93,"default"],[197,100,142,85],[197,101,142,101,"dirname"],[197,108,142,85],[197,109,142,109,"options"],[197,116,142,116],[197,117,142,117,"filename"],[197,125,142,85],[197,126,142,61],[197,128,142,128,"match"],[197,133,142,133],[197,134,142,134],[197,135,142,133],[197,136,142,61],[197,137,142,34],[197,138,142,10],[199,0,144,10],[199,16,144,14,"inputMapContent"],[199,31,144,29],[199,32,144,30,"length"],[199,38,144,14],[199,41,144,39,"LARGE_INPUT_SOURCEMAP_THRESHOLD"],[199,72,144,10],[199,74,144,72],[200,0,145,12,"debug"],[200,14,145,12,"debug"],[200,19,145,17],[200,20,145,18],[200,51,145,17],[200,52,145,12],[201,0,146,11],[201,13,144,10],[201,19,146,17],[202,0,147,12,"inputMap"],[202,14,147,12,"inputMap"],[202,22,147,20],[202,25,147,23,"_convertSourceMap"],[202,42,147,40],[202,45,147,43,"default"],[202,52,147,23],[202,53,147,51,"fromJSON"],[202,61,147,23],[202,62,147,60,"inputMapContent"],[202,77,147,23],[202,78,147,12],[203,0,148,11],[204,0,149,9],[204,11,139,8],[204,12,149,10],[204,19,149,17,"err"],[204,22,149,10],[204,24,149,22],[205,0,150,10,"debug"],[205,12,150,10,"debug"],[205,17,150,15],[205,18,150,16],[205,59,150,15],[205,61,150,59,"err"],[205,64,150,15],[205,65,150,10],[206,0,151,9],[207,0,152,7],[207,9,138,6],[207,15,152,13],[207,19,152,17,"lastComment"],[207,31,152,13],[207,33,152,30],[208,0,153,8,"debug"],[208,10,153,8,"debug"],[208,15,153,13],[208,16,153,14],[208,61,153,13],[208,62,153,8],[209,0,154,7],[210,0,155,5],[211,0,156,3],[213,0,158,2],[213,11,158,9],[213,15,158,13,"_file"],[213,20,158,18],[213,21,158,19,"default"],[213,28,158,9],[213,29,158,27,"options"],[213,36,158,9],[213,38,158,36],[214,0,159,4,"code"],[214,6,159,4,"code"],[214,10,159,8],[214,12,159,4,"code"],[214,16,158,36],[215,0,160,4,"ast"],[215,6,160,4,"ast"],[215,9,160,7],[215,11,160,4,"ast"],[215,14,158,36],[216,0,161,4,"inputMap"],[216,6,161,4,"inputMap"],[216,14,161,12],[216,16,161,4,"inputMap"],[217,0,158,36],[217,5,158,9],[217,6,158,2],[218,0,163,1],[220,0,165,0],[220,11,165,9,"parser"],[220,17,165,0],[220,18,165,16,"pluginPasses"],[220,30,165,0],[220,38,169,3,"code"],[220,42,165,0],[220,44,169,9],[221,0,169,9],[221,8,166,2,"parserOpts"],[221,18,169,9],[221,26,166,2,"parserOpts"],[221,36,169,9],[222,0,169,9],[222,34,167,2,"highlightCode"],[222,47,169,9],[223,0,169,9],[223,8,167,2,"highlightCode"],[223,21,169,9],[223,56,167,18],[223,60,169,9],[224,0,169,9],[224,29,168,2,"filename"],[224,37,169,9],[225,0,169,9],[225,8,168,2,"filename"],[225,16,169,9],[225,46,168,13],[225,55,169,9],[227,0,170,2],[227,8,170,6],[228,0,171,4],[228,10,171,10,"results"],[228,17,171,17],[228,20,171,20],[228,22,171,4],[230,0,173,4],[230,27,173,26,"pluginPasses"],[230,39,173,4],[230,199,173,40],[231,0,173,40],[233,0,173,40],[234,0,173,40],[235,0,173,40],[236,0,173,40],[237,0,173,40],[238,0,173,40],[239,0,173,40],[240,0,173,40],[242,0,173,40],[242,12,173,15,"plugins"],[242,20,173,40],[244,0,174,6],[244,30,174,27,"plugins"],[244,38,174,6],[244,205,174,36],[245,0,174,36],[247,0,174,36],[248,0,174,36],[249,0,174,36],[250,0,174,36],[251,0,174,36],[252,0,174,36],[253,0,174,36],[254,0,174,36],[256,0,174,36],[256,14,174,17,"plugin"],[256,21,174,36],[257,0,174,36],[257,14,176,10,"parserOverride"],[257,29,174,36],[257,32,177,12,"plugin"],[257,39,174,36],[257,40,176,10,"parserOverride"],[257,54,174,36],[259,0,179,8],[259,14,179,12,"parserOverride"],[259,29,179,8],[259,31,179,28],[260,0,180,10],[260,16,180,16,"ast"],[260,19,180,19],[260,22,180,22,"parserOverride"],[260,37,180,36],[260,38,180,37,"code"],[260,42,180,36],[260,44,180,43,"parserOpts"],[260,54,180,36],[260,56,180,55,"_parser"],[260,63,180,62],[260,66,180,65,"parse"],[260,71,180,36],[260,72,180,10],[262,0,181,10],[262,16,181,14,"ast"],[262,19,181,17],[262,24,181,22,"undefined"],[262,33,181,10],[262,35,181,33,"results"],[262,42,181,40],[262,43,181,41,"push"],[262,47,181,33],[262,48,181,46,"ast"],[262,51,181,33],[263,0,182,9],[264,0,183,7],[265,0,184,5],[267,0,186,4],[267,10,186,8,"results"],[267,17,186,15],[267,18,186,16,"length"],[267,24,186,8],[267,29,186,27],[267,30,186,4],[267,32,186,30],[268,0,187,6],[268,15,187,13],[268,16,187,14],[268,19,187,17,"_parser"],[268,26,187,24],[268,29,187,27,"parse"],[268,34,187,13],[268,36,187,34,"code"],[268,40,187,13],[268,42,187,40,"parserOpts"],[268,52,187,13],[268,53,187,6],[269,0,188,5],[269,7,186,4],[269,13,188,11],[269,17,188,15,"results"],[269,24,188,22],[269,25,188,23,"length"],[269,31,188,15],[269,36,188,34],[269,37,188,11],[269,39,188,37],[270,0,189,6],[270,12,189,10],[270,19,189,17,"results"],[270,26,189,24],[270,27,189,25],[270,28,189,24],[270,29,189,17],[270,30,189,28,"then"],[270,34,189,10],[270,39,189,37],[270,49,189,6],[270,51,189,49],[271,0,190,8],[271,16,190,14],[271,20,190,18,"Error"],[271,25,190,14],[271,26,190,24],[271,229,190,14],[271,230,190,8],[272,0,191,7],[274,0,193,6],[274,15,193,13,"results"],[274,22,193,20],[274,23,193,21],[274,24,193,20],[274,25,193,6],[275,0,194,5],[277,0,196,4],[277,12,196,10],[277,16,196,14,"Error"],[277,21,196,10],[277,22,196,20],[277,75,196,10],[277,76,196,4],[278,0,197,3],[278,5,170,2],[278,6,197,4],[278,13,197,11,"err"],[278,16,197,4],[278,18,197,16],[279,0,198,4],[279,10,198,8,"err"],[279,13,198,11],[279,14,198,12,"code"],[279,18,198,8],[279,23,198,21],[279,64,198,4],[279,66,198,64],[280,0,199,6,"err"],[280,8,199,6,"err"],[280,11,199,9],[280,12,199,10,"message"],[280,19,199,6],[280,23,199,21],[280,97,199,95],[280,160,199,6],[281,0,200,5],[283,0,197,16],[283,10,203,6,"loc"],[283,13,197,16],[283,16,205,8,"err"],[283,19,197,16],[283,20,203,6,"loc"],[283,23,197,16],[284,0,197,16],[284,10,204,6,"missingPlugin"],[284,23,197,16],[284,26,205,8,"err"],[284,29,197,16],[284,30,204,6,"missingPlugin"],[284,43,197,16],[286,0,207,4],[286,10,207,8,"loc"],[286,13,207,4],[286,15,207,13],[287,0,208,6],[287,12,208,12,"codeFrame"],[287,21,208,21],[287,24,208,24],[287,25,208,25],[287,28,208,28,"_codeFrame"],[287,38,208,38],[287,41,208,41,"codeFrameColumns"],[287,57,208,24],[287,59,208,59,"code"],[287,63,208,24],[287,65,208,65],[288,0,209,8,"start"],[288,10,209,8,"start"],[288,15,209,13],[288,17,209,15],[289,0,210,10,"line"],[289,12,210,10,"line"],[289,16,210,14],[289,18,210,16,"loc"],[289,21,210,19],[289,22,210,20,"line"],[289,26,209,15],[290,0,211,10,"column"],[290,12,211,10,"column"],[290,18,211,16],[290,20,211,18,"loc"],[290,23,211,21],[290,24,211,22,"column"],[290,30,211,18],[290,33,211,31],[291,0,209,15],[292,0,208,65],[292,9,208,24],[292,11,213,9],[293,0,214,8,"highlightCode"],[293,10,214,8,"highlightCode"],[293,23,214,21],[293,25,214,8,"highlightCode"],[294,0,213,9],[294,9,208,24],[294,10,208,6],[296,0,217,6],[296,12,217,10,"missingPlugin"],[296,25,217,6],[296,27,217,25],[297,0,218,8,"err"],[297,10,218,8,"err"],[297,13,218,11],[297,14,218,12,"message"],[297,21,218,8],[297,24,218,25,"filename"],[297,32,218,22],[297,42,218,40],[297,43,218,41],[297,46,218,44,"_missingPluginHelper"],[297,66,218,64],[297,67,218,65,"default"],[297,74,218,40],[297,76,218,74,"missingPlugin"],[297,89,218,87],[297,90,218,88],[297,91,218,87],[297,92,218,40],[297,94,218,92,"loc"],[297,97,218,40],[297,99,218,97,"codeFrame"],[297,108,218,40],[297,109,218,8],[298,0,219,7],[298,9,217,6],[298,15,219,13],[299,0,220,8,"err"],[299,10,220,8,"err"],[299,13,220,11],[299,14,220,12,"message"],[299,21,220,8],[299,24,220,25,"filename"],[299,32,220,22],[299,42,220,38,"err"],[299,45,220,41],[299,46,220,42,"message"],[299,53,220,22],[299,65,220,58,"codeFrame"],[299,74,220,8],[300,0,221,7],[302,0,223,6,"err"],[302,8,223,6,"err"],[302,11,223,9],[302,12,223,10,"code"],[302,16,223,6],[302,19,223,17],[302,38,223,6],[303,0,224,5],[305,0,226,4],[305,12,226,10,"err"],[305,15,226,4],[306,0,227,3],[307,0,228,1],[309,0,230,0],[309,6,230,6,"INLINE_SOURCEMAP_REGEX"],[309,28,230,28],[309,31,230,31],[309,125,230,0],[310,0,231,0],[310,6,231,6,"EXTERNAL_SOURCEMAP_REGEX"],[310,30,231,30],[310,33,231,33],[310,81,231,0],[312,0,233,0],[312,11,233,9,"extractCommentsFromList"],[312,34,233,0],[312,35,233,33,"regex"],[312,40,233,0],[312,42,233,40,"comments"],[312,50,233,0],[312,52,233,50,"lastComment"],[312,63,233,0],[312,65,233,63],[313,0,234,2],[313,8,234,6,"comments"],[313,16,234,2],[313,18,234,16],[314,0,235,4,"comments"],[314,6,235,4,"comments"],[314,14,235,12],[314,17,235,15,"comments"],[314,25,235,23],[314,26,235,24,"filter"],[314,32,235,15],[314,33,235,31],[314,50,237,10],[315,0,237,10],[315,12,236,6,"value"],[315,17,237,10],[315,26,236,6,"value"],[315,31,237,10],[317,0,238,6],[317,12,238,10,"regex"],[317,17,238,15],[317,18,238,16,"test"],[317,22,238,10],[317,23,238,21,"value"],[317,28,238,10],[317,29,238,6],[317,31,238,29],[318,0,239,8,"lastComment"],[318,10,239,8,"lastComment"],[318,21,239,19],[318,24,239,22,"value"],[318,29,239,8],[319,0,240,8],[319,17,240,15],[319,22,240,8],[320,0,241,7],[322,0,243,6],[322,15,243,13],[322,19,243,6],[323,0,244,5],[323,7,235,15],[323,8,235,4],[324,0,245,3],[326,0,247,2],[326,11,247,9],[326,12,247,10,"comments"],[326,20,247,9],[326,22,247,20,"lastComment"],[326,33,247,9],[326,34,247,2],[327,0,248,1],[329,0,250,0],[329,11,250,9,"extractComments"],[329,26,250,0],[329,27,250,25,"regex"],[329,32,250,0],[329,34,250,32,"ast"],[329,37,250,0],[329,39,250,37],[330,0,251,2],[330,8,251,6,"lastComment"],[330,19,251,17],[330,22,251,20],[330,26,251,2],[331,0,252,2,"t"],[331,4,252,2,"t"],[331,5,252,3],[331,8,252,6,"traverseFast"],[331,20,252,2],[331,21,252,19,"ast"],[331,24,252,2],[331,26,252,24],[331,36,252,24,"node"],[331,40,252,28],[331,42,252,32],[332,0,252,32],[332,34,253,42,"extractCommentsFromList"],[332,57,253,65],[332,58,253,66,"regex"],[332,63,253,65],[332,65,253,73,"node"],[332,69,253,77],[332,70,253,78,"leadingComments"],[332,85,253,65],[332,87,253,95,"lastComment"],[332,98,253,65],[332,99,252,32],[334,0,252,32],[336,0,253,5,"node"],[336,6,253,5,"node"],[336,10,253,9],[336,11,253,10,"leadingComments"],[336,26,252,32],[337,0,253,27,"lastComment"],[337,6,253,27,"lastComment"],[337,17,252,32],[339,0,252,32],[339,35,254,40,"extractCommentsFromList"],[339,58,254,63],[339,59,254,64,"regex"],[339,64,254,63],[339,66,254,71,"node"],[339,70,254,75],[339,71,254,76,"innerComments"],[339,84,254,63],[339,86,254,91,"lastComment"],[339,97,254,63],[339,98,252,32],[341,0,252,32],[343,0,254,5,"node"],[343,6,254,5,"node"],[343,10,254,9],[343,11,254,10,"innerComments"],[343,24,252,32],[344,0,254,25,"lastComment"],[344,6,254,25,"lastComment"],[344,17,252,32],[346,0,252,32],[346,35,255,43,"extractCommentsFromList"],[346,58,255,66],[346,59,255,67,"regex"],[346,64,255,66],[346,66,255,74,"node"],[346,70,255,78],[346,71,255,79,"trailingComments"],[346,87,255,66],[346,89,255,97,"lastComment"],[346,100,255,66],[346,101,252,32],[348,0,252,32],[350,0,255,5,"node"],[350,6,255,5,"node"],[350,10,255,9],[350,11,255,10,"trailingComments"],[350,27,252,32],[351,0,255,28,"lastComment"],[351,6,255,28,"lastComment"],[351,17,252,32],[352,0,256,3],[352,5,252,2],[353,0,257,2],[353,11,257,9,"lastComment"],[353,22,257,2],[354,0,258,1]]},"type":"js/module"}]}