{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"../binding","data":{"isAsync":false}},{"name":"@babel/helper-split-export-declaration","data":{"isAsync":false}},{"name":"@babel/types","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _binding = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../binding\"));\n\n  var _helperSplitExportDeclaration = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/helper-split-export-declaration\"));\n\n  var t = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"@babel/types\"));\n\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n\n    return cache;\n  }\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n\n    var cache = _getRequireWildcardCache();\n\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj.default = obj;\n\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n\n    return newObj;\n  }\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var renameVisitor = {\n    ReferencedIdentifier: function ReferencedIdentifier(_ref, state) {\n      var node = _ref.node;\n\n      if (node.name === state.oldName) {\n        node.name = state.newName;\n      }\n    },\n    Scope: function Scope(path, state) {\n      if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n        path.skip();\n      }\n    },\n    \"AssignmentExpression|Declaration\": function AssignmentExpressionDeclaration(path, state) {\n      var ids = path.getOuterBindingIdentifiers();\n\n      for (var name in ids) {\n        if (name === state.oldName) ids[name].name = state.newName;\n      }\n    }\n  };\n\n  var Renamer = function () {\n    function Renamer(binding, oldName, newName) {\n      _classCallCheck(this, Renamer);\n\n      this.newName = newName;\n      this.oldName = oldName;\n      this.binding = binding;\n    }\n\n    _createClass(Renamer, [{\n      key: \"maybeConvertFromExportDeclaration\",\n      value: function maybeConvertFromExportDeclaration(parentDeclar) {\n        var maybeExportDeclar = parentDeclar.parentPath;\n\n        if (!maybeExportDeclar.isExportDeclaration()) {\n          return;\n        }\n\n        if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n          return;\n        }\n\n        (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n      }\n    }, {\n      key: \"maybeConvertFromClassFunctionDeclaration\",\n      value: function maybeConvertFromClassFunctionDeclaration(path) {\n        return;\n        if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n        if (this.binding.kind !== \"hoisted\") return;\n        path.node.id = t.identifier(this.oldName);\n        path.node._blockHoist = 3;\n        path.replaceWith(t.variableDeclaration(\"let\", [t.variableDeclarator(t.identifier(this.newName), t.toExpression(path.node))]));\n      }\n    }, {\n      key: \"maybeConvertFromClassFunctionExpression\",\n      value: function maybeConvertFromClassFunctionExpression(path) {\n        return;\n        if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n        if (this.binding.kind !== \"local\") return;\n        path.node.id = t.identifier(this.oldName);\n        this.binding.scope.parent.push({\n          id: t.identifier(this.newName)\n        });\n        path.replaceWith(t.assignmentExpression(\"=\", t.identifier(this.newName), path.node));\n      }\n    }, {\n      key: \"rename\",\n      value: function rename(block) {\n        var binding = this.binding,\n            oldName = this.oldName,\n            newName = this.newName;\n        var scope = binding.scope,\n            path = binding.path;\n        var parentDeclar = path.find(function (path) {\n          return path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression();\n        });\n\n        if (parentDeclar) {\n          var bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n          if (bindingIds[oldName] === binding.identifier) {\n            this.maybeConvertFromExportDeclaration(parentDeclar);\n          }\n        }\n\n        scope.traverse(block || scope.block, renameVisitor, this);\n\n        if (!block) {\n          scope.removeOwnBinding(oldName);\n          scope.bindings[newName] = binding;\n          this.binding.identifier.name = newName;\n        }\n\n        if (binding.type === \"hoisted\") {}\n\n        if (parentDeclar) {\n          this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n          this.maybeConvertFromClassFunctionExpression(parentDeclar);\n        }\n      }\n    }]);\n\n    return Renamer;\n  }();\n\n  exports.default = Renamer;\n});","map":[[2,0,1,0],[8,0,3,0,"Object"],[8,2,3,0,"Object"],[8,8,3,6],[8,9,3,7,"defineProperty"],[8,23,3,0],[8,24,3,22,"exports"],[8,31,3,0],[8,33,3,31],[8,45,3,0],[8,47,3,45],[9,0,4,2,"value"],[9,4,4,2,"value"],[9,9,4,7],[9,11,4,9],[10,0,3,45],[10,3,3,0],[11,0,6,0,"exports"],[11,2,6,0,"exports"],[11,9,6,7],[11,10,6,8,"default"],[11,17,6,0],[11,20,6,18],[11,25,6,23],[11,26,6,0],[13,0,8,0],[13,6,8,4,"_binding"],[13,14,8,12],[13,17,8,15,"_interopRequireDefault"],[13,39,8,37],[13,40,8,38,"require"],[13,51,8,45],[13,84,8,37],[13,85,8,0],[15,0,10,0],[15,6,10,4,"_helperSplitExportDeclaration"],[15,35,10,33],[15,38,10,36,"_interopRequireDefault"],[15,60,10,58],[15,61,10,59,"require"],[15,72,10,66],[15,133,10,58],[15,134,10,0],[17,0,12,0],[17,6,12,4,"t"],[17,7,12,5],[17,10,12,8,"_interopRequireWildcard"],[17,33,12,31],[17,34,12,32,"require"],[17,45,12,39],[17,80,12,31],[17,81,12,0],[19,0,14,0],[19,11,14,9,"_getRequireWildcardCache"],[19,35,14,0],[19,38,14,36],[20,0,14,38],[20,8,14,42],[20,15,14,49,"WeakMap"],[20,22,14,42],[20,27,14,61],[20,37,14,38],[20,39,14,73],[20,46,14,80],[20,50,14,73],[21,0,14,86],[21,8,14,90,"cache"],[21,13,14,95],[21,16,14,98],[21,20,14,102,"WeakMap"],[21,27,14,98],[21,29,14,86],[23,0,14,113,"_getRequireWildcardCache"],[23,4,14,113,"_getRequireWildcardCache"],[23,28,14,137],[23,31,14,140],[23,67,14,152],[24,0,14,154],[24,13,14,161,"cache"],[24,18,14,154],[25,0,14,169],[25,5,14,113],[27,0,14,171],[27,11,14,178,"cache"],[27,16,14,171],[28,0,14,186],[30,0,16,0],[30,11,16,9,"_interopRequireWildcard"],[30,34,16,0],[30,35,16,33,"obj"],[30,38,16,0],[30,40,16,38],[31,0,16,40],[31,8,16,44,"obj"],[31,11,16,47],[31,15,16,51,"obj"],[31,18,16,54],[31,19,16,55,"__esModule"],[31,29,16,40],[31,31,16,67],[32,0,16,69],[32,13,16,76,"obj"],[32,16,16,69],[33,0,16,82],[35,0,16,83],[35,8,16,87,"obj"],[35,11,16,90],[35,16,16,95],[35,20,16,87],[35,24,16,103],[35,31,16,110,"obj"],[35,34,16,103],[35,39,16,118],[35,47,16,103],[35,51,16,130],[35,58,16,137,"obj"],[35,61,16,130],[35,66,16,145],[35,76,16,83],[35,78,16,157],[36,0,16,159],[36,13,16,166],[37,0,16,168,"default"],[37,8,16,168,"default"],[37,15,16,175],[37,17,16,177,"obj"],[38,0,16,166],[38,7,16,159],[39,0,16,185],[41,0,16,186],[41,8,16,190,"cache"],[41,13,16,195],[41,16,16,198,"_getRequireWildcardCache"],[41,40,16,222],[41,42,16,186],[43,0,16,226],[43,8,16,230,"cache"],[43,13,16,235],[43,17,16,239,"cache"],[43,22,16,244],[43,23,16,245,"has"],[43,26,16,239],[43,27,16,249,"obj"],[43,30,16,239],[43,31,16,226],[43,33,16,255],[44,0,16,257],[44,13,16,264,"cache"],[44,18,16,269],[44,19,16,270,"get"],[44,22,16,264],[44,23,16,274,"obj"],[44,26,16,264],[44,27,16,257],[45,0,16,281],[47,0,16,282],[47,8,16,286,"newObj"],[47,14,16,292],[47,17,16,295],[47,19,16,282],[48,0,16,299],[48,8,16,303,"hasPropertyDescriptor"],[48,29,16,324],[48,32,16,327,"Object"],[48,38,16,333],[48,39,16,334,"defineProperty"],[48,53,16,327],[48,57,16,352,"Object"],[48,63,16,358],[48,64,16,359,"getOwnPropertyDescriptor"],[48,88,16,299],[50,0,16,385],[50,9,16,390],[50,13,16,394,"key"],[50,16,16,385],[50,20,16,401,"obj"],[50,23,16,385],[50,25,16,406],[51,0,16,408],[51,10,16,412,"Object"],[51,16,16,418],[51,17,16,419,"prototype"],[51,26,16,412],[51,27,16,429,"hasOwnProperty"],[51,41,16,412],[51,42,16,444,"call"],[51,46,16,412],[51,47,16,449,"obj"],[51,50,16,412],[51,52,16,454,"key"],[51,55,16,412],[51,56,16,408],[51,58,16,460],[52,0,16,462],[52,12,16,466,"desc"],[52,16,16,470],[52,19,16,473,"hasPropertyDescriptor"],[52,40,16,494],[52,43,16,497,"Object"],[52,49,16,503],[52,50,16,504,"getOwnPropertyDescriptor"],[52,74,16,497],[52,75,16,529,"obj"],[52,78,16,497],[52,80,16,534,"key"],[52,83,16,497],[52,84,16,494],[52,87,16,541],[52,91,16,462],[54,0,16,547],[54,12,16,551,"desc"],[54,16,16,555],[54,21,16,560,"desc"],[54,25,16,564],[54,26,16,565,"get"],[54,29,16,560],[54,33,16,572,"desc"],[54,37,16,576],[54,38,16,577,"set"],[54,41,16,555],[54,42,16,547],[54,44,16,583],[55,0,16,585,"Object"],[55,10,16,585,"Object"],[55,16,16,591],[55,17,16,592,"defineProperty"],[55,31,16,585],[55,32,16,607,"newObj"],[55,38,16,585],[55,40,16,615,"key"],[55,43,16,585],[55,45,16,620,"desc"],[55,49,16,585],[56,0,16,628],[56,9,16,547],[56,15,16,634],[57,0,16,636,"newObj"],[57,10,16,636,"newObj"],[57,16,16,642],[57,17,16,643,"key"],[57,20,16,642],[57,21,16,636],[57,24,16,650,"obj"],[57,27,16,653],[57,28,16,654,"key"],[57,31,16,653],[57,32,16,636],[58,0,16,661],[59,0,16,663],[60,0,16,665],[62,0,16,666,"newObj"],[62,4,16,666,"newObj"],[62,10,16,672],[62,11,16,673,"default"],[62,18,16,666],[62,21,16,683,"obj"],[62,24,16,666],[64,0,16,688],[64,8,16,692,"cache"],[64,13,16,688],[64,15,16,699],[65,0,16,701,"cache"],[65,6,16,701,"cache"],[65,11,16,706],[65,12,16,707,"set"],[65,15,16,701],[65,16,16,711,"obj"],[65,19,16,701],[65,21,16,716,"newObj"],[65,27,16,701],[66,0,16,726],[68,0,16,727],[68,11,16,734,"newObj"],[68,17,16,727],[69,0,16,743],[71,0,18,0],[71,11,18,9,"_interopRequireDefault"],[71,33,18,0],[71,34,18,32,"obj"],[71,37,18,0],[71,39,18,37],[72,0,18,39],[72,11,18,46,"obj"],[72,14,18,49],[72,18,18,53,"obj"],[72,21,18,56],[72,22,18,57,"__esModule"],[72,32,18,46],[72,35,18,70,"obj"],[72,38,18,46],[72,41,18,76],[73,0,18,78,"default"],[73,6,18,78,"default"],[73,13,18,85],[73,15,18,87,"obj"],[74,0,18,76],[74,5,18,39],[75,0,18,95],[77,0,20,0],[77,6,20,6,"renameVisitor"],[77,19,20,19],[77,22,20,22],[78,0,21,2,"ReferencedIdentifier"],[78,4,21,2,"ReferencedIdentifier"],[78,24,20,22],[78,62,23,5,"state"],[78,67,20,22],[78,69,23,12],[79,0,23,12],[79,10,22,4,"node"],[79,14,23,12],[79,22,22,4,"node"],[79,26,23,12],[81,0,24,4],[81,10,24,8,"node"],[81,14,24,12],[81,15,24,13,"name"],[81,19,24,8],[81,24,24,22,"state"],[81,29,24,27],[81,30,24,28,"oldName"],[81,37,24,4],[81,39,24,37],[82,0,25,6,"node"],[82,8,25,6,"node"],[82,12,25,10],[82,13,25,11,"name"],[82,17,25,6],[82,20,25,18,"state"],[82,25,25,23],[82,26,25,24,"newName"],[82,33,25,6],[83,0,26,5],[84,0,27,3],[84,5,20,22],[85,0,29,2,"Scope"],[85,4,29,2,"Scope"],[85,9,20,22],[85,26,29,8,"path"],[85,30,20,22],[85,32,29,14,"state"],[85,37,20,22],[85,39,29,21],[86,0,30,4],[86,10,30,8],[86,11,30,9,"path"],[86,15,30,13],[86,16,30,14,"scope"],[86,21,30,9],[86,22,30,20,"bindingIdentifierEquals"],[86,45,30,9],[86,46,30,44,"state"],[86,51,30,49],[86,52,30,50,"oldName"],[86,59,30,9],[86,61,30,59,"state"],[86,66,30,64],[86,67,30,65,"binding"],[86,74,30,59],[86,75,30,73,"identifier"],[86,85,30,9],[86,86,30,4],[86,88,30,86],[87,0,31,6,"path"],[87,8,31,6,"path"],[87,12,31,10],[87,13,31,11,"skip"],[87,17,31,6],[88,0,32,5],[89,0,33,3],[89,5,20,22],[90,0,35,2],[90,38,20,22],[90,81,35,37,"path"],[90,85,20,22],[90,87,35,43,"state"],[90,92,20,22],[90,94,35,50],[91,0,36,4],[91,10,36,10,"ids"],[91,13,36,13],[91,16,36,16,"path"],[91,20,36,20],[91,21,36,21,"getOuterBindingIdentifiers"],[91,47,36,16],[91,49,36,4],[93,0,38,4],[93,11,38,9],[93,15,38,15,"name"],[93,19,38,4],[93,23,38,23,"ids"],[93,26,38,4],[93,28,38,28],[94,0,39,6],[94,12,39,10,"name"],[94,16,39,14],[94,21,39,19,"state"],[94,26,39,24],[94,27,39,25,"oldName"],[94,34,39,6],[94,36,39,34,"ids"],[94,39,39,37],[94,40,39,38,"name"],[94,44,39,37],[94,45,39,34],[94,46,39,44,"name"],[94,50,39,34],[94,53,39,51,"state"],[94,58,39,56],[94,59,39,57,"newName"],[94,66,39,34],[95,0,40,5],[96,0,41,3],[97,0,20,22],[97,3,20,0],[99,6,45,6,"Renamer"],[99,13],[100,0,46,2],[100,21,46,14,"binding"],[100,28,46,2],[100,30,46,23,"oldName"],[100,37,46,2],[100,39,46,32,"newName"],[100,46,46,2],[100,48,46,41],[101,0,46,41],[103,0,47,4],[103,11,47,9,"newName"],[103,18,47,4],[103,21,47,19,"newName"],[103,28,47,4],[104,0,48,4],[104,11,48,9,"oldName"],[104,18,48,4],[104,21,48,19,"oldName"],[104,28,48,4],[105,0,49,4],[105,11,49,9,"binding"],[105,18,49,4],[105,21,49,19,"binding"],[105,28,49,4],[106,0,50,3],[110,56,52,36,"parentDeclar"],[110,68],[110,70,52,50],[111,0,53,4],[111,12,53,10,"maybeExportDeclar"],[111,29,53,27],[111,32,53,30,"parentDeclar"],[111,44,53,42],[111,45,53,43,"parentPath"],[111,55,53,4],[113,0,55,4],[113,12,55,8],[113,13,55,9,"maybeExportDeclar"],[113,30,55,26],[113,31,55,27,"isExportDeclaration"],[113,50,55,9],[113,52,55,4],[113,54,55,50],[114,0,56,6],[115,0,57,5],[117,0,59,4],[117,12,59,8,"maybeExportDeclar"],[117,29,59,25],[117,30,59,26,"isExportDefaultDeclaration"],[117,56,59,8],[117,62,59,58],[117,63,59,59,"maybeExportDeclar"],[117,80,59,76],[117,81,59,77,"get"],[117,84,59,59],[117,85,59,81],[117,98,59,59],[117,100,59,96,"node"],[117,104,59,59],[117,105,59,101,"id"],[117,107,59,4],[117,109,59,105],[118,0,60,6],[119,0,61,5],[121,0,63,4],[121,9,63,5],[121,12,63,8,"_helperSplitExportDeclaration"],[121,41,63,37],[121,42,63,38,"default"],[121,49,63,4],[121,51,63,47,"maybeExportDeclar"],[121,68,63,4],[122,0,64,3],[125,63,66,43,"path"],[125,67],[125,69,66,49],[126,0,67,4],[127,0,68,4],[127,12,68,8],[127,13,68,9,"path"],[127,17,68,13],[127,18,68,14,"isFunctionDeclaration"],[127,39,68,9],[127,41,68,8],[127,45,68,41],[127,46,68,42,"path"],[127,50,68,46],[127,51,68,47,"isClassDeclaration"],[127,69,68,42],[127,71,68,4],[127,73,68,69],[128,0,69,4],[128,12,69,8],[128,17,69,13,"binding"],[128,24,69,8],[128,25,69,21,"kind"],[128,29,69,8],[128,34,69,30],[128,43,69,4],[128,45,69,41],[129,0,70,4,"path"],[129,8,70,4,"path"],[129,12,70,8],[129,13,70,9,"node"],[129,17,70,4],[129,18,70,14,"id"],[129,20,70,4],[129,23,70,19,"t"],[129,24,70,20],[129,25,70,21,"identifier"],[129,35,70,19],[129,36,70,32],[129,41,70,37,"oldName"],[129,48,70,19],[129,49,70,4],[130,0,71,4,"path"],[130,8,71,4,"path"],[130,12,71,8],[130,13,71,9,"node"],[130,17,71,4],[130,18,71,14,"_blockHoist"],[130,29,71,4],[130,32,71,28],[130,33,71,4],[131,0,72,4,"path"],[131,8,72,4,"path"],[131,12,72,8],[131,13,72,9,"replaceWith"],[131,24,72,4],[131,25,72,21,"t"],[131,26,72,22],[131,27,72,23,"variableDeclaration"],[131,46,72,21],[131,47,72,43],[131,52,72,21],[131,54,72,50],[131,55,72,51,"t"],[131,56,72,52],[131,57,72,53,"variableDeclarator"],[131,75,72,51],[131,76,72,72,"t"],[131,77,72,73],[131,78,72,74,"identifier"],[131,88,72,72],[131,89,72,85],[131,94,72,90,"newName"],[131,101,72,72],[131,102,72,51],[131,104,72,100,"t"],[131,105,72,101],[131,106,72,102,"toExpression"],[131,118,72,100],[131,119,72,115,"path"],[131,123,72,119],[131,124,72,120,"node"],[131,128,72,100],[131,129,72,51],[131,130,72,50],[131,131,72,21],[131,132,72,4],[132,0,73,3],[135,62,75,42,"path"],[135,66],[135,68,75,48],[136,0,76,4],[137,0,77,4],[137,12,77,8],[137,13,77,9,"path"],[137,17,77,13],[137,18,77,14,"isFunctionExpression"],[137,38,77,9],[137,40,77,8],[137,44,77,40],[137,45,77,41,"path"],[137,49,77,45],[137,50,77,46,"isClassExpression"],[137,67,77,41],[137,69,77,4],[137,71,77,67],[138,0,78,4],[138,12,78,8],[138,17,78,13,"binding"],[138,24,78,8],[138,25,78,21,"kind"],[138,29,78,8],[138,34,78,30],[138,41,78,4],[138,43,78,39],[139,0,79,4,"path"],[139,8,79,4,"path"],[139,12,79,8],[139,13,79,9,"node"],[139,17,79,4],[139,18,79,14,"id"],[139,20,79,4],[139,23,79,19,"t"],[139,24,79,20],[139,25,79,21,"identifier"],[139,35,79,19],[139,36,79,32],[139,41,79,37,"oldName"],[139,48,79,19],[139,49,79,4],[140,0,80,4],[140,13,80,9,"binding"],[140,20,80,4],[140,21,80,17,"scope"],[140,26,80,4],[140,27,80,23,"parent"],[140,33,80,4],[140,34,80,30,"push"],[140,38,80,4],[140,39,80,35],[141,0,81,6,"id"],[141,10,81,6,"id"],[141,12,81,8],[141,14,81,10,"t"],[141,15,81,11],[141,16,81,12,"identifier"],[141,26,81,10],[141,27,81,23],[141,32,81,28,"newName"],[141,39,81,10],[142,0,80,35],[142,9,80,4],[143,0,83,4,"path"],[143,8,83,4,"path"],[143,12,83,8],[143,13,83,9,"replaceWith"],[143,24,83,4],[143,25,83,21,"t"],[143,26,83,22],[143,27,83,23,"assignmentExpression"],[143,47,83,21],[143,48,83,44],[143,51,83,21],[143,53,83,49,"t"],[143,54,83,50],[143,55,83,51,"identifier"],[143,65,83,49],[143,66,83,62],[143,71,83,67,"newName"],[143,78,83,49],[143,79,83,21],[143,81,83,77,"path"],[143,85,83,81],[143,86,83,82,"node"],[143,90,83,21],[143,91,83,4],[144,0,84,3],[147,29,86,9,"block"],[147,34],[147,36,86,16],[148,0,86,16],[148,12,88,6,"binding"],[148,19,86,16],[148,22,91,8],[148,26,86,16],[148,27,88,6,"binding"],[148,34,86,16],[149,0,86,16],[149,12,89,6,"oldName"],[149,19,86,16],[149,22,91,8],[149,26,86,16],[149,27,89,6,"oldName"],[149,34,86,16],[150,0,86,16],[150,12,90,6,"newName"],[150,19,86,16],[150,22,91,8],[150,26,86,16],[150,27,90,6,"newName"],[150,34,86,16],[151,0,86,16],[151,12,93,6,"scope"],[151,17,86,16],[151,20,95,8,"binding"],[151,27,86,16],[151,28,93,6,"scope"],[151,33,86,16],[152,0,86,16],[152,12,94,6,"path"],[152,16,86,16],[152,19,95,8,"binding"],[152,26,86,16],[152,27,94,6,"path"],[152,31,86,16],[153,0,96,4],[153,12,96,10,"parentDeclar"],[153,24,96,22],[153,27,96,25,"path"],[153,31,96,29],[153,32,96,30,"find"],[153,36,96,25],[153,37,96,35],[153,47,96,35,"path"],[153,51,96,39],[154,0,96,39],[154,17,96,43,"path"],[154,21,96,47],[154,22,96,48,"isDeclaration"],[154,35,96,43],[154,41,96,67,"path"],[154,45,96,71],[154,46,96,72,"isFunctionExpression"],[154,66,96,67],[154,68,96,43],[154,72,96,98,"path"],[154,76,96,102],[154,77,96,103,"isClassExpression"],[154,94,96,98],[154,96,96,39],[155,0,96,39],[155,9,96,25],[155,10,96,4],[157,0,98,4],[157,12,98,8,"parentDeclar"],[157,24,98,4],[157,26,98,22],[158,0,99,6],[158,14,99,12,"bindingIds"],[158,24,99,22],[158,27,99,25,"parentDeclar"],[158,39,99,37],[158,40,99,38,"getOuterBindingIdentifiers"],[158,66,99,25],[158,68,99,6],[160,0,101,6],[160,14,101,10,"bindingIds"],[160,24,101,20],[160,25,101,21,"oldName"],[160,32,101,20],[160,33,101,10],[160,38,101,34,"binding"],[160,45,101,41],[160,46,101,42,"identifier"],[160,56,101,6],[160,58,101,54],[161,0,102,8],[161,17,102,13,"maybeConvertFromExportDeclaration"],[161,50,102,8],[161,51,102,47,"parentDeclar"],[161,63,102,8],[162,0,103,7],[163,0,104,5],[165,0,106,4,"scope"],[165,8,106,4,"scope"],[165,13,106,9],[165,14,106,10,"traverse"],[165,22,106,4],[165,23,106,19,"block"],[165,28,106,24],[165,32,106,28,"scope"],[165,37,106,33],[165,38,106,34,"block"],[165,43,106,4],[165,45,106,41,"renameVisitor"],[165,58,106,4],[165,60,106,56],[165,64,106,4],[167,0,108,4],[167,12,108,8],[167,13,108,9,"block"],[167,18,108,4],[167,20,108,16],[168,0,109,6,"scope"],[168,10,109,6,"scope"],[168,15,109,11],[168,16,109,12,"removeOwnBinding"],[168,32,109,6],[168,33,109,29,"oldName"],[168,40,109,6],[169,0,110,6,"scope"],[169,10,110,6,"scope"],[169,15,110,11],[169,16,110,12,"bindings"],[169,24,110,6],[169,25,110,21,"newName"],[169,32,110,6],[169,36,110,32,"binding"],[169,43,110,6],[170,0,111,6],[170,15,111,11,"binding"],[170,22,111,6],[170,23,111,19,"identifier"],[170,33,111,6],[170,34,111,30,"name"],[170,38,111,6],[170,41,111,37,"newName"],[170,48,111,6],[171,0,112,5],[173,0,114,4],[173,12,114,8,"binding"],[173,19,114,15],[173,20,114,16,"type"],[173,24,114,8],[173,29,114,25],[173,38,114,4],[173,40,114,36],[173,41,114,38],[175,0,116,4],[175,12,116,8,"parentDeclar"],[175,24,116,4],[175,26,116,22],[176,0,117,6],[176,15,117,11,"maybeConvertFromClassFunctionDeclaration"],[176,55,117,6],[176,56,117,52,"parentDeclar"],[176,68,117,6],[177,0,118,6],[177,15,118,11,"maybeConvertFromClassFunctionExpression"],[177,54,118,6],[177,55,118,51,"parentDeclar"],[177,67,118,6],[178,0,119,5],[179,0,120,3],[185,0,124,0,"exports"],[185,2,124,0,"exports"],[185,9,124,7],[185,10,124,8,"default"],[185,17,124,0],[185,20,124,18,"Renamer"],[185,27,124,0]]},"type":"js/module"}]}